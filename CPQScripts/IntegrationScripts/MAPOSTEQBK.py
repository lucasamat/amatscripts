# =========================================================================================================================================
#   __script_name : MAPOSTEQBK.PY
#   __script_description : THIS SCRIPT IS USED TO  GET THE DATA FROM EQUIPMENT STAGING TABLE TO EQUIPMENT MAIN TABLE
#   __primary_author__ : BAJI
#   __create_date :
#   Â© BOSTON HARBOR TECHNOLOGY LLC - ALL RIGHTS RESERVED
# ==========================================================================================================================================
import sys
import datetime

clr.AddReference("System.Net")
from System.Net import CookieContainer, NetworkCredential, Mail
from System.Net.Mail import SmtpClient, MailAddress, Attachment, MailMessage

today = datetime.datetime.now()
Modi_date = today.strftime("%m/%d/%Y %H:%M:%S %p")



def EquipementBulk(Eq_type):
	try:

		# Dynamically creating ERROR SESSION table
		Temp_Table_Name = 'ERROR_SESSION'
	
		ERRLOG_DRP = SqlHelper.GetFirst("sp_executesql @T=N'IF EXISTS (SELECT ''X'' FROM SYS.OBJECTS WHERE NAME= ''"+str(Temp_Table_Name)+"'' ) BEGIN DROP TABLE "+str(Temp_Table_Name)+" END  ' ")

		TempTable = SqlHelper.GetFirst("sp_executesql @T=N'IF EXISTS (SELECT ''X'' FROM SYS.OBJECTS WHERE NAME= ''"+str(Temp_Table_Name)+"'' ) BEGIN DROP TABLE "+str(Temp_Table_Name)+" END CREATE TABLE "+str(Temp_Table_Name)+" (SESSION_ID VARCHAR(100),INTEGRATION_TYPE VARCHAR(100) ,PROCESS_STATUS VARCHAR(100) ,ERROR_MESSAGE VARCHAR(4000),ERROR_DESCRIPTION VARCHAR(4000),TIMESTAMP VARCHAR(250),CpqTableEntryDateModified date)'")

		sessionid = SqlHelper.GetFirst("SELECT NEWID() AS A")
		timestamp_sessionid = "'" + str(sessionid.A) + "'"

		Parameter = SqlHelper.GetFirst("SELECT QUERY_CRITERIA_1 FROM SYDBQS (NOLOCK) WHERE QUERY_NAME = 'SELECT' ")
		Parameter1 = SqlHelper.GetFirst("SELECT QUERY_CRITERIA_1 FROM SYDBQS (NOLOCK) WHERE QUERY_NAME = 'UPD' ")
		Parameter2 = SqlHelper.GetFirst("SELECT QUERY_CRITERIA_1 FROM SYDBQS (NOLOCK) WHERE QUERY_NAME = 'DEL' ")
		
		primaryQueryItems = SqlHelper.GetFirst(
			""
			+ str(Parameter1.QUERY_CRITERIA_1)
			+ "  MAEQUP_INBOUND SET PROCESS_STATUS=''DUPLICATE'' FROM MAEQUP_INBOUND JOIN (SELECT EQUIPMENT_ID,MAX(CPQTABLEENTRYID) AS CPQTABLEENTRYID FROM MAEQUP_INBOUND GROUP BY EQUIPMENT_ID HAVING COUNT(CPQTABLEENTRYID)>1)SUB_MAEQUP ON MAEQUP_INBOUND.EQUIPMENT_ID = SUB_MAEQUP.EQUIPMENT_ID WHERE MAEQUP_INBOUND.CPQTABLEENTRYID <> SUB_MAEQUP.CPQTABLEENTRYID  ' "
		)
		
		#Timestamp update		
		primaryQueryItems = SqlHelper.GetFirst(
			""
			+ str(Parameter1.QUERY_CRITERIA_1)
			+ "  MAEQUP_INBOUND set MAEQUP_INBOUND.TIMESTAMP='"
			+ str(timestamp_sessionid)
			+ "' FROM MAEQUP_INBOUND (NOLOCK) where isnull(MAEQUP_INBOUND.process_status,'''')='''' and isnull(MAEQUP_INBOUND.session_id,'''')<>''''  ' "
		)
		
		if str(Eq_type) == "Parent":
			primaryQueryItems = SqlHelper.GetFirst(
			""
			+ str(Parameter1.QUERY_CRITERIA_1)
			+ "  MAEQUP_INBOUND set process_status=''Inprogress'' FROM MAEQUP_INBOUND (NOLOCK) where  MAEQUP_INBOUND.TIMESTAMP='"
			+ str(timestamp_sessionid)
			+ "' and isnull(MAEQUP_INBOUND.session_id,'''')<>'''' and isnull(par_equipment_id,'''')='''' ' ")

		else:
			primaryQueryItems = SqlHelper.GetFirst(
			""
			+ str(Parameter1.QUERY_CRITERIA_1)
			+ "  MAEQUP_INBOUND set process_status=''Inprogress'' FROM MAEQUP_INBOUND (NOLOCK) where MAEQUP_INBOUND.TIMESTAMP='"
			+ str(timestamp_sessionid)
			+ "' and isnull(MAEQUP_INBOUND.session_id,'''')<>'''' and ISNULL(process_status,'''') = ''''  ' ")

		primaryQueryItems = SqlHelper.GetFirst(
			""
			+ str(Parameter1.QUERY_CRITERIA_1)
			+ "  MAEQUP_INBOUND set account_id = CONVERT(BIGINT,ACCOUNT_ID) FROM MAEQUP_INBOUND (NOLOCK) where ISNUMERIC(ACCOUNT_ID) =1 ' "
		)
		
		primaryQueryItems = SqlHelper.GetFirst(
			""
			+ str(Parameter1.QUERY_CRITERIA_1)
			+ "  MAEQUP_INBOUND set WARRANTY_ID = CONVERT(BIGINT,WARRANTY_ID) FROM MAEQUP_INBOUND (NOLOCK) where ISNUMERIC(WARRANTY_ID) =1 ' "
		)
		
		primaryQueryItems = SqlHelper.GetFirst(
			""
			+ str(Parameter1.QUERY_CRITERIA_1)
			+ "  MAEQUP_INBOUND set EQUIPMENT_ID = CONVERT(BIGINT,EQUIPMENT_ID) FROM MAEQUP_INBOUND (NOLOCK) where ISNUMERIC(EQUIPMENT_ID) =1 ' "
		)
		
		primaryQueryItems = SqlHelper.GetFirst(
			""
			+ str(Parameter1.QUERY_CRITERIA_1)
			+ "  MAEQUP_INBOUND set SERIAL_NO = CONVERT(BIGINT,SERIAL_NO) FROM MAEQUP_INBOUND (NOLOCK) where ISNUMERIC(SERIAL_NO) =1 and SERIAL_NO NOT LIKE ''%[a-z]%'' ' "
		)
		
		primaryQueryItems = SqlHelper.GetFirst(
			""
			+ str(Parameter1.QUERY_CRITERIA_1)
			+ "  MAEQUP_INBOUND set WARRANTY_END_DATE = NULL FROM MAEQUP_INBOUND (NOLOCK) where WARRANTY_END_DATE = ''00000000'' ' "
		)
		
		primaryQueryItems = SqlHelper.GetFirst(
			""
			+ str(Parameter1.QUERY_CRITERIA_1)
			+ "  MAEQUP_INBOUND set EFFECTIVE_END_DATE = NULL FROM MAEQUP_INBOUND (NOLOCK) where EFFECTIVE_END_DATE = ''00000000'' ' "
		)
		primaryQueryItems = SqlHelper.GetFirst(
			""
			+ str(Parameter1.QUERY_CRITERIA_1)
			+ "  MAEQUP_INBOUND set PAR_EQUIPMENT_ID = CONVERT(BIGINT,PAR_EQUIPMENT_ID) FROM MAEQUP_INBOUND (NOLOCK) where ISNUMERIC(PAR_EQUIPMENT_ID) =1 ' "
		)
		
		primaryQueryItems = SqlHelper.GetFirst(
			""
			+ str(Parameter1.QUERY_CRITERIA_1)
			+ "  MAEQUP_INBOUND set DISTRIBUTIONCHANNEL_ID = ''01'' FROM MAEQUP_INBOUND (NOLOCK) where ISNULL(DISTRIBUTIONCHANNEL_ID,'''') ='''' ' "
		)
		
		primaryQueryItems = SqlHelper.GetFirst(
			""
			+ str(Parameter1.QUERY_CRITERIA_1)
			+ "  MAEQUP_INBOUND set DIVISION_ID = ''98'' FROM MAEQUP_INBOUND (NOLOCK) where ISNULL(DIVISION_ID,'''') ='''' ' "
		)
		
		primaryQueryItems = SqlHelper.GetFirst(
			""
			+ str(Parameter1.QUERY_CRITERIA_1)
			+ "  MAEQUP_INBOUND set EQUIPMENT_DESC =  EQUIPMENT_ID FROM MAEQUP_INBOUND (NOLOCK) where ISNULL(EQUIPMENT_DESC,'''') ='''' ' "
		)
		
		primaryQueryItems = SqlHelper.GetFirst(
			""
			+ str(Parameter1.QUERY_CRITERIA_1)
			+ "  MAFBLC_INBOUND SET FAB_LOCATION_ID = ''UNMAPPED'' FROM MAFBLC_INBOUND(NOLOCK) WHERE ISNULL(FAB_LOCATION_ID,'''')='''' '"
		)
		
		#Process status updating as "Inprogress"
		"""primaryQueryItems = SqlHelper.GetFirst(
			""
			+ str(Parameter1.QUERY_CRITERIA_1)
			+ "  MAEQUP_INBOUND set MAEQUP_INBOUND.process_status=''Inprogress'',MAEQUP_INBOUND.integration_status='''' FROM MAEQUP_INBOUND where isnull(MAEQUP_INBOUND.process_status,'''')='''' and isnull(MAEQUP_INBOUND.session_id,'''')<>'''' and MAEQUP_INBOUND.TIMESTAMP='"
			+ str(timestamp_sessionid)
			+ "' ' "
		)"""

		#VALIDATION
		#MAEQUP Does not exist validations
		
		S=SqlHelper.GetFirst("sp_executesql @T=N'INSERT SAACNT (ACCOUNT_ID,ACCOUNT_RECORD_iD) SELECT A.ACCOUNT_ID,CONVERT(VARCHAR(100),NEWID()) FROM (SELECT DISTINCT ACCOUNT_ID FROM MAEQUP_inbound (NOLOCK) WHERE ISNULL(ACCOUNT_ID,'''')<>'''')A LEFT JOIN SAACNT B ON A.ACCOUNT_ID = B.ACCOUNT_ID WHERE B.ACCOUNT_ID IS NULL '")
		
		primaryQueryItems = SqlHelper.GetFirst(
			""
			+ str(Parameter1.QUERY_CRITERIA_1)
			+ "  MAEQUP_INBOUND SET MAEQUP_INBOUND.INTEGRATION_STATUS = ISNULL(MAEQUP_INBOUND.INTEGRATION_STATUS,'''') +convert(nvarchar,SYMSGS.MESSAGE_CODE)+''-''+convert(nvarchar,MAEQUP_INBOUND.ACCOUNT_ID),MAEQUP_INBOUND.PROCESS_STATUS=''ERROR'' FROM MAEQUP_INBOUND(NOLOCK) LEFT JOIN SAACNT (NOLOCK) ON MAEQUP_INBOUND.ACCOUNT_ID = SAACNT.ACCOUNT_ID  LEFT JOIN SYMSGS(NOLOCK) ON SYMSGS.MESSAGE_CODE = ''200031'' WHERE MAEQUP_INBOUND.PROCESS_STATUS IN (''Inprogress'',''ERROR'') AND SYMSGS.OBJECT_APINAME = ''MAEQUP'' AND MAEQUP_INBOUND.TIMESTAMP='"
			+ str(timestamp_sessionid)
			+ "'  AND SAACNT.ACCOUNT_ID IS NULL AND ISNULL(MAEQUP_INBOUND.ACCOUNT_ID,'''') <> '''''"
		) 
		
		primaryQueryItems = SqlHelper.GetFirst(
			""
			+ str(Parameter1.QUERY_CRITERIA_1)
			+ "  MAEQUP_INBOUND SET MAEQUP_INBOUND.INTEGRATION_STATUS = ISNULL(MAEQUP_INBOUND.INTEGRATION_STATUS,'''') +convert(nvarchar,SYMSGS.MESSAGE_CODE)+''-''+convert(nvarchar,MAEQUP_INBOUND.PAR_EQUIPMENT_ID),MAEQUP_INBOUND.PROCESS_STATUS=''ERROR'' FROM MAEQUP_INBOUND(NOLOCK) LEFT JOIN MAEQUP (NOLOCK) ON MAEQUP_INBOUND.PAR_EQUIPMENT_ID = MAEQUP.EQUIPMENT_ID  LEFT JOIN SYMSGS(NOLOCK) ON SYMSGS.MESSAGE_CODE = ''200050'' WHERE MAEQUP_INBOUND.PROCESS_STATUS IN (''Inprogress'',''ERROR'') AND SYMSGS.OBJECT_APINAME = ''MAEQUP'' AND MAEQUP_INBOUND.TIMESTAMP='"
			+ str(timestamp_sessionid)
			+ "'  AND MAEQUP.EQUIPMENT_ID IS NULL AND ISNULL(MAEQUP_INBOUND.PAR_EQUIPMENT_ID,'''') <> '''' '"	)

		primaryQueryItems = SqlHelper.GetFirst(
			""
			+ str(Parameter1.QUERY_CRITERIA_1)
			+ "  MAEQUP_INBOUND SET MAEQUP_INBOUND.INTEGRATION_STATUS = ISNULL(MAEQUP_INBOUND.INTEGRATION_STATUS,'''') +convert(nvarchar,SYMSGS.MESSAGE_CODE)+''-''+convert(nvarchar,MAEQUP_INBOUND.COUNTRY),MAEQUP_INBOUND.PROCESS_STATUS=''ERROR'' FROM MAEQUP_INBOUND(NOLOCK) LEFT JOIN SACTRY (NOLOCK) ON MAEQUP_INBOUND.COUNTRY = SACTRY.COUNTRY  LEFT JOIN SYMSGS(NOLOCK) ON SYMSGS.MESSAGE_CODE = ''200032'' WHERE MAEQUP_INBOUND.PROCESS_STATUS IN (''Inprogress'',''ERROR'') AND SYMSGS.OBJECT_APINAME = ''MAEQUP'' AND MAEQUP_INBOUND.TIMESTAMP='"
			+ str(timestamp_sessionid)
			+ "'  AND SACTRY.COUNTRY IS NULL AND MAEQUP_INBOUND.COUNTRY <> '''''"
		) 

		primaryQueryItems = SqlHelper.GetFirst(
			""
			+ str(Parameter1.QUERY_CRITERIA_1)
			+ "  MAEQUP_INBOUND SET MAEQUP_INBOUND.INTEGRATION_STATUS = ISNULL(MAEQUP_INBOUND.INTEGRATION_STATUS,'''') +convert(nvarchar,SYMSGS.MESSAGE_CODE)+''-''+convert(nvarchar,MAEQUP_INBOUND.DISTRIBUTIONCHANNEL_ID),MAEQUP_INBOUND.PROCESS_STATUS=''ERROR'' FROM MAEQUP_INBOUND(NOLOCK) LEFT JOIN SADSCH (NOLOCK) ON MAEQUP_INBOUND.DISTRIBUTIONCHANNEL_ID = SADSCH.DISTRIBUTIONCHANNEL_ID  LEFT JOIN SYMSGS(NOLOCK) ON SYMSGS.MESSAGE_CODE = ''200033'' WHERE MAEQUP_INBOUND.PROCESS_STATUS IN (''Inprogress'',''ERROR'') AND SYMSGS.OBJECT_APINAME = ''MAEQUP'' AND MAEQUP_INBOUND.TIMESTAMP='"
			+ str(timestamp_sessionid)
			+ "'  AND SADSCH.DISTRIBUTIONCHANNEL_ID IS NULL AND MAEQUP_INBOUND.DISTRIBUTIONCHANNEL_ID <> '''' '"
		)

		primaryQueryItems = SqlHelper.GetFirst(
			""
			+ str(Parameter1.QUERY_CRITERIA_1)
			+ "  MAEQUP_INBOUND SET MAEQUP_INBOUND.INTEGRATION_STATUS = ISNULL(MAEQUP_INBOUND.INTEGRATION_STATUS,'''') +convert(nvarchar,SYMSGS.MESSAGE_CODE)+''-''+convert(nvarchar,MAEQUP_INBOUND.DIVISION_ID),MAEQUP_INBOUND.PROCESS_STATUS=''ERROR'' FROM MAEQUP_INBOUND(NOLOCK) LEFT JOIN SADIVN(NOLOCK) ON MAEQUP_INBOUND.DIVISION_ID = SADIVN.DIVISION_ID  LEFT JOIN SYMSGS(NOLOCK) ON SYMSGS.MESSAGE_CODE = ''200034'' WHERE MAEQUP_INBOUND.PROCESS_STATUS IN (''Inprogress'',''ERROR'') AND SYMSGS.OBJECT_APINAME = ''MAEQUP'' AND MAEQUP_INBOUND.TIMESTAMP='"
			+ str(timestamp_sessionid)
			+ "'  AND SADIVN.DIVISION_ID IS NULL  AND MAEQUP_INBOUND.DIVISION_ID <> '''' '"
		)

		primaryQueryItems = SqlHelper.GetFirst(
			""
			+ str(Parameter1.QUERY_CRITERIA_1)
			+ "  MAEQUP_INBOUND SET MAEQUP_INBOUND.INTEGRATION_STATUS = ISNULL(MAEQUP_INBOUND.INTEGRATION_STATUS,'''') +convert(nvarchar,SYMSGS.MESSAGE_CODE)+''-''+convert(nvarchar,MAEQUP_INBOUND.EQUIPMENTCATEGORY_ID),MAEQUP_INBOUND.PROCESS_STATUS=''ERROR'' FROM MAEQUP_INBOUND(NOLOCK) LEFT JOIN MAEQCT (NOLOCK) ON MAEQUP_INBOUND.EQUIPMENTCATEGORY_ID = MAEQCT.EQUIPMENTCATEGORY_ID  LEFT JOIN SYMSGS(NOLOCK) ON SYMSGS.MESSAGE_CODE = ''200036'' WHERE MAEQUP_INBOUND.PROCESS_STATUS IN (''Inprogress'',''ERROR'') AND SYMSGS.OBJECT_APINAME = ''MAEQUP'' AND MAEQUP_INBOUND.TIMESTAMP='"
			+ str(timestamp_sessionid)
			+ "'  AND MAEQCT.EQUIPMENTCATEGORY_ID IS NULL  AND MAEQUP_INBOUND.EQUIPMENTCATEGORY_ID <> '''' '"
		)


		primaryQueryItems = SqlHelper.GetFirst(
			""
			+ str(Parameter1.QUERY_CRITERIA_1)
			+ "  MAEQUP_INBOUND SET MAEQUP_INBOUND.INTEGRATION_STATUS = ISNULL(MAEQUP_INBOUND.INTEGRATION_STATUS,'''') +convert(nvarchar,SYMSGS.MESSAGE_CODE)+''-''+convert(nvarchar,MAEQUP_INBOUND.SALES_ORG_ID),MAEQUP_INBOUND.PROCESS_STATUS=''ERROR'' FROM MAEQUP_INBOUND(NOLOCK) LEFT JOIN SASORG (NOLOCK) ON MAEQUP_INBOUND.SALES_ORG_ID = SASORG.SALESORG_ID  LEFT JOIN SYMSGS(NOLOCK) ON SYMSGS.MESSAGE_CODE = ''200037'' WHERE MAEQUP_INBOUND.PROCESS_STATUS IN (''Inprogress'',''ERROR'') AND SYMSGS.OBJECT_APINAME = ''MAEQUP'' AND MAEQUP_INBOUND.TIMESTAMP='"
			+ str(timestamp_sessionid)
			+ "'  AND SASORG.SALESORG_ID IS NULL  AND MAEQUP_INBOUND.SALES_ORG_ID <> '''' '"
		)

		primaryQueryItems = SqlHelper.GetFirst(
			""
			+ str(Parameter1.QUERY_CRITERIA_1)
			+ "  MAEQUP_INBOUND SET MAEQUP_INBOUND.INTEGRATION_STATUS = ISNULL(MAEQUP_INBOUND.INTEGRATION_STATUS,'''') +convert(nvarchar,SYMSGS.MESSAGE_CODE)+''-''+convert(nvarchar,MAEQUP_INBOUND.MNT_PLANT_ID),MAEQUP_INBOUND.PROCESS_STATUS=''ERROR'' FROM MAEQUP_INBOUND(NOLOCK) LEFT JOIN MAPLNT (NOLOCK) ON MAEQUP_INBOUND.MNT_PLANT_ID = MAPLNT.PLANT_ID  LEFT JOIN SYMSGS(NOLOCK) ON SYMSGS.MESSAGE_CODE = ''200038'' WHERE MAEQUP_INBOUND.PROCESS_STATUS IN (''Inprogress'',''ERROR'') AND SYMSGS.OBJECT_APINAME = ''MAEQUP'' AND MAEQUP_INBOUND.TIMESTAMP='"
			+ str(timestamp_sessionid)
			+ "'  AND MAPLNT.PLANT_ID IS NULL  AND MAEQUP_INBOUND.MNT_PLANT_ID <> ''''  '"
		)

		primaryQueryItems = SqlHelper.GetFirst(
			""
			+ str(Parameter1.QUERY_CRITERIA_1)
			+ "  MAEQUP_INBOUND SET MAEQUP_INBOUND.INTEGRATION_STATUS = ISNULL(MAEQUP_INBOUND.INTEGRATION_STATUS,'''') +convert(nvarchar,SYMSGS.MESSAGE_CODE)+''-''+convert(nvarchar,MAEQUP_INBOUND.WARRANTY_ID),MAEQUP_INBOUND.PROCESS_STATUS=''ERROR'' FROM MAEQUP_INBOUND(NOLOCK) LEFT JOIN MAWRTY (NOLOCK) ON MAEQUP_INBOUND.WARRANTY_ID = MAWRTY.WARRANTY_ID  LEFT JOIN SYMSGS(NOLOCK) ON SYMSGS.MESSAGE_CODE = ''200039'' WHERE MAEQUP_INBOUND.PROCESS_STATUS IN (''Inprogress'',''ERROR'') AND SYMSGS.OBJECT_APINAME = ''MAEQUP'' AND MAEQUP_INBOUND.TIMESTAMP='"
			+ str(timestamp_sessionid)
			+ "'  AND MAWRTY.WARRANTY_ID IS NULL  AND MAEQUP_INBOUND.WARRANTY_ID <> '''' '"
		)

		primaryQueryItems = SqlHelper.GetFirst(
			""
			+ str(Parameter1.QUERY_CRITERIA_1)
			+ "  MAEQUP_INBOUND SET MAEQUP_INBOUND.INTEGRATION_STATUS = ISNULL(MAEQUP_INBOUND.INTEGRATION_STATUS,'''') +convert(nvarchar,SYMSGS.MESSAGE_CODE)+''-''+convert(nvarchar,MAEQUP_INBOUND.EQUIPMENTTYPE_ID),MAEQUP_INBOUND.PROCESS_STATUS=''ERROR'' FROM MAEQUP_INBOUND(NOLOCK) LEFT JOIN MAEQTY (NOLOCK) ON MAEQUP_INBOUND.EQUIPMENTTYPE_ID = MAEQTY.EQUIPMENT_TYPE_ID  LEFT JOIN SYMSGS(NOLOCK) ON SYMSGS.MESSAGE_CODE = ''200041'' WHERE MAEQUP_INBOUND.PROCESS_STATUS IN (''Inprogress'',''ERROR'') AND SYMSGS.OBJECT_APINAME = ''MAEQUP'' AND MAEQUP_INBOUND.TIMESTAMP='"
			+ str(timestamp_sessionid)
			+ "'  AND MAEQTY.EQUIPMENT_TYPE_ID IS NULL  AND ISNULL(MAEQUP_INBOUND.EQUIPMENTTYPE_ID,'''') <> '''' '"
		)

		primaryQueryItems = SqlHelper.GetFirst(
			""
			+ str(Parameter1.QUERY_CRITERIA_1)
			+ "  MAEQUP_INBOUND SET MAEQUP_INBOUND.INTEGRATION_STATUS = ISNULL(MAEQUP_INBOUND.INTEGRATION_STATUS,'''') +convert(nvarchar,SYMSGS.MESSAGE_CODE)+''-''+convert(nvarchar,MAEQUP_INBOUND.GREENBOOK),MAEQUP_INBOUND.PROCESS_STATUS=''ERROR'' FROM MAEQUP_INBOUND(NOLOCK) LEFT JOIN SABUUN (NOLOCK) ON MAEQUP_INBOUND.GREENBOOK = SABUUN.BUSINESSUNIT_ID  LEFT JOIN SYMSGS(NOLOCK) ON SYMSGS.MESSAGE_CODE = ''200042'' WHERE MAEQUP_INBOUND.PROCESS_STATUS IN (''Inprogress'',''ERROR'') AND SYMSGS.OBJECT_APINAME = ''MAEQUP'' AND MAEQUP_INBOUND.TIMESTAMP='"
			+ str(timestamp_sessionid)
			+ "'  AND SABUUN.BUSINESSUNIT_ID IS NULL  AND ISNULL(MAEQUP_INBOUND.GREENBOOK,'''') <> '''' '"
		)

		# MAEQUP Mandatory validations

		
		"""primaryQueryItems = SqlHelper.GetFirst(
			""
			+ str(Parameter1.QUERY_CRITERIA_1)
			+ "  MAEQUP_INBOUND SET MAEQUP_INBOUND.INTEGRATION_STATUS = ISNULL(MAEQUP_INBOUND.INTEGRATION_STATUS,'''') + ''||''+convert(nvarchar,SYMSGS.MESSAGE_CODE),MAEQUP_INBOUND.PROCESS_STATUS=''ERROR'' FROM MAEQUP_INBOUND(NOLOCK) LEFT JOIN SYMSGS(NOLOCK) ON SYMSGS.MESSAGE_CODE = ''200043'' WHERE MAEQUP_INBOUND.PROCESS_STATUS IN (''Inprogress'',''ERROR'') AND SYMSGS.OBJECT_APINAME = ''MAEQUP'' AND MAEQUP_INBOUND.TIMESTAMP='"
			+ str(timestamp_sessionid)
			+ "' AND  ISNULL(DISTRIBUTIONCHANNEL_ID,'''') = '''' '"
		)
		primaryQueryItems = SqlHelper.GetFirst(
			""
			+ str(Parameter1.QUERY_CRITERIA_1)
			+ "  MAEQUP_INBOUND SET MAEQUP_INBOUND.INTEGRATION_STATUS = ISNULL(MAEQUP_INBOUND.INTEGRATION_STATUS,'''') + ''||''+convert(nvarchar,SYMSGS.MESSAGE_CODE),MAEQUP_INBOUND.PROCESS_STATUS=''ERROR'' FROM MAEQUP_INBOUND(NOLOCK) LEFT JOIN SYMSGS(NOLOCK) ON SYMSGS.MESSAGE_CODE = ''200044'' WHERE MAEQUP_INBOUND.PROCESS_STATUS IN (''Inprogress'',''ERROR'') AND SYMSGS.OBJECT_APINAME = ''MAEQUP'' AND MAEQUP_INBOUND.TIMESTAMP='"
			+ str(timestamp_sessionid)
			+ "' AND  ISNULL(DIVISION_ID,'''') = '''' '"
		)"""

		primaryQueryItems = SqlHelper.GetFirst(
			""
			+ str(Parameter1.QUERY_CRITERIA_1)
			+ "  MAEQUP_INBOUND SET MAEQUP_INBOUND.INTEGRATION_STATUS = ISNULL(MAEQUP_INBOUND.INTEGRATION_STATUS,'''') + ''||''+convert(nvarchar,SYMSGS.MESSAGE_CODE),MAEQUP_INBOUND.PROCESS_STATUS=''ERROR'' FROM MAEQUP_INBOUND(NOLOCK) LEFT JOIN SYMSGS(NOLOCK) ON SYMSGS.MESSAGE_CODE = ''200045'' WHERE MAEQUP_INBOUND.PROCESS_STATUS IN (''Inprogress'',''ERROR'') AND SYMSGS.OBJECT_APINAME = ''MAEQUP'' AND MAEQUP_INBOUND.TIMESTAMP='"
			+ str(timestamp_sessionid)
			+ "' AND  ISNULL(EQUIPMENT_DESC,'''') = '''' '"
		)

		primaryQueryItems = SqlHelper.GetFirst(
			""
			+ str(Parameter1.QUERY_CRITERIA_1)
			+ "  MAEQUP_INBOUND SET MAEQUP_INBOUND.INTEGRATION_STATUS = ISNULL(MAEQUP_INBOUND.INTEGRATION_STATUS,'''') + ''||''+convert(nvarchar,SYMSGS.MESSAGE_CODE),MAEQUP_INBOUND.PROCESS_STATUS=''ERROR'' FROM MAEQUP_INBOUND(NOLOCK) LEFT JOIN SYMSGS(NOLOCK) ON SYMSGS.MESSAGE_CODE = ''200046'' WHERE MAEQUP_INBOUND.PROCESS_STATUS IN (''Inprogress'',''ERROR'') AND SYMSGS.OBJECT_APINAME = ''MAEQUP'' AND MAEQUP_INBOUND.TIMESTAMP='"
			+ str(timestamp_sessionid)
			+ "' AND  ISNULL(EQUIPMENT_ID,'''') = '''' '"
		)

		"""primaryQueryItems = SqlHelper.GetFirst(
			""
			+ str(Parameter1.QUERY_CRITERIA_1)
			+ "  MAEQUP_INBOUND SET MAEQUP_INBOUND.INTEGRATION_STATUS = ISNULL(MAEQUP_INBOUND.INTEGRATION_STATUS,'''') + ''||''+convert(nvarchar,SYMSGS.MESSAGE_CODE),MAEQUP_INBOUND.PROCESS_STATUS=''ERROR'' FROM MAEQUP_INBOUND(NOLOCK) LEFT JOIN SYMSGS(NOLOCK) ON SYMSGS.MESSAGE_CODE = ''200047'' WHERE MAEQUP_INBOUND.PROCESS_STATUS IN (''Inprogress'',''ERROR'') AND SYMSGS.OBJECT_APINAME = ''MAEQUP'' AND MAEQUP_INBOUND.TIMESTAMP='"
			+ str(timestamp_sessionid)
			+ "' AND  ISNULL(SALES_ORG_ID,'''') = '''' '"
		)"""

		primaryQueryItems = SqlHelper.GetFirst(
			""
			+ str(Parameter1.QUERY_CRITERIA_1)
			+ "  MAEQUP_INBOUND SET MAEQUP_INBOUND.INTEGRATION_STATUS = ISNULL(MAEQUP_INBOUND.INTEGRATION_STATUS,'''') + ''||''+convert(nvarchar,SYMSGS.MESSAGE_CODE),MAEQUP_INBOUND.PROCESS_STATUS=''ERROR'' FROM MAEQUP_INBOUND(NOLOCK)  LEFT JOIN SYMSGS(NOLOCK) ON SYMSGS.MESSAGE_CODE = ''200048'' WHERE MAEQUP_INBOUND.PROCESS_STATUS IN (''Inprogress'',''ERROR'') AND SYMSGS.OBJECT_APINAME = ''MAEQUP'' AND MAEQUP_INBOUND.TIMESTAMP='"
			+ str(timestamp_sessionid)
			+ "' AND  ISNULL(EQUIPMENTCATEGORY_ID,'''') = '''' '"
		)

		primaryQueryItems = SqlHelper.GetFirst(
			""
			+ str(Parameter1.QUERY_CRITERIA_1)
			+ "  MAEQUP_INBOUND SET MAEQUP_INBOUND.INTEGRATION_STATUS = ISNULL(MAEQUP_INBOUND.INTEGRATION_STATUS,'''') + ''||''+convert(nvarchar,SYMSGS.MESSAGE_CODE),MAEQUP_INBOUND.PROCESS_STATUS=''ERROR'' FROM MAEQUP_INBOUND(NOLOCK) LEFT JOIN SYMSGS(NOLOCK) ON SYMSGS.MESSAGE_CODE = ''200049'' WHERE MAEQUP_INBOUND.PROCESS_STATUS IN (''Inprogress'',''ERROR'') AND SYMSGS.OBJECT_APINAME = ''MAEQUP'' AND MAEQUP_INBOUND.TIMESTAMP='"
			+ str(timestamp_sessionid)
			+ "' AND  ISNULL(ACCOUNT_ID,'''') = '''' '"
		)

		"""primaryQueryItems = SqlHelper.GetFirst(
			""
			+ str(Parameter1.QUERY_CRITERIA_1)
			+ "  MAEQUP_INBOUND SET MAEQUP_INBOUND.INTEGRATION_STATUS = ISNULL(MAEQUP_INBOUND.INTEGRATION_STATUS,'''') + ''||''+convert(nvarchar,SYMSGS.MESSAGE_CODE),MAEQUP_INBOUND.PROCESS_STATUS=''ERROR'' FROM MAEQUP_INBOUND(NOLOCK) LEFT JOIN SYMSGS(NOLOCK) ON SYMSGS.MESSAGE_CODE = ''200026'' WHERE MAEQUP_INBOUND.PROCESS_STATUS IN (''Inprogress'',''ERROR'') AND SYMSGS.OBJECT_APINAME = ''MAFBLC'' AND MAEQUP_INBOUND.TIMESTAMP='"
			+ str(timestamp_sessionid)
			+ "' AND  ISNULL(FAB_LOCATION_ID,'''') = '''' '"
		)"""
		
		# Validation Completed and updating process status as "READY FOR UPLOAD"
		primaryQueryItems = SqlHelper.GetFirst(
			""
			+ str(Parameter1.QUERY_CRITERIA_1)
			+ "  MAEQUP_INBOUND SET PROCESS_STATUS=''READY FOR UPLOAD'' WHERE PROCESS_STATUS=''Inprogress'' AND TIMESTAMP='"
			+ str(timestamp_sessionid)
			+ "' AND ISNULL(INTEGRATION_STATUS,'''')='''' '"
		)

		# Updating Error sessions in "ERROR_SESSION" table		

		primaryQueryItems = SqlHelper.GetFirst(
			""
			+ str(Parameter.QUERY_CRITERIA_1)
			+ "   ERROR_SESSION (SESSION_ID,CpqTableEntryDateModified) SELECT SESSION_ID,getdate() FROM (SELECT DISTINCT MAEQUP_INBOUND.SESSION_ID as SESSION_ID FROM MAEQUP_INBOUND (NOLOCK) WHERE  ISNULL(MAEQUP_INBOUND.PROCESS_STATUS,'''')=''ERROR'' )SUB_ERRLOG  ' "
		)

		# Updating process status as "ERROR" in ERROR_SESSION table
		primaryQueryItems = SqlHelper.GetFirst(
			""
			+ str(Parameter1.QUERY_CRITERIA_1)
			+ "  MAEQUP_INBOUND SET PROCESS_STATUS=''ERROR'' FROM MAEQUP_INBOUND JOIN ERROR_SESSION ON MAEQUP_INBOUND.SESSION_ID = ERROR_SESSION.SESSION_ID WHERE MAEQUP_INBOUND.TIMESTAMP='"
			+ str(timestamp_sessionid)
			+ "' '"
		)

		# MAEQUP UPLOAD 
		statusupdate = SqlHelper.GetFirst("sp_executesql @T=N'UPDATE MAEQUP_INBOUND SET STATUS= CASE WHEN ISNULL(STATUS,'''')=''NOSH'' THEN ''NOSH - NOT SHIPPED'' WHEN ISNULL(STATUS,'''')=''INTR'' THEN ''INTR - IN TRANSIT/IN STORAGE'' WHEN ISNULL(STATUS,'''')=''STUP'' THEN ''STUP - START UP'' WHEN ISNULL(STATUS,'''')=''INST'' THEN ''INST - INSTALLED'' WHEN ISNULL(STATUS,'''')=''IDLE'' THEN ''IDLE - IDLE'' WHEN ISNULL(STATUS,'''')=''UNIN'' THEN ''UNIN - UNINSTALLED'' WHEN ISNULL(STATUS,'''')=''SCRP'' THEN ''SCRP - SCRAPPED'' WHEN ISNULL(STATUS,'''')=''UNKW'' THEN ''UNKW - UNKNOWN'' WHEN ISNULL(STATUS,'''')=''INVD'' THEN ''INVD - INVALID RECORD'' WHEN ISNULL(STATUS,'''')=''ASEQ'' THEN ''ASEQ - ALLOCATED TO SUPERIOR EQUIPMENT'' ELSE STATUS END FROM MAEQUP_INBOUND '")

		# MAFBLC INSERT QUERY
		
		primaryQueryItems = SqlHelper.GetFirst(
			""
			+ str(Parameter.QUERY_CRITERIA_1)
			+ "   MAFBLC (ACCOUNT_ID,ACCOUNT_NAME,ACCOUNT_RECORD_ID,COUNTRY,COUNTRY_RECORD_ID,DISTRIBUTIONCHANNEL_ID,DISTRIBUTIONCHANNEL_RECORD_ID,DIVISION_ID,DIVISION_RECORD_ID,FAB_LOCATION_ID, MNT_PLANT_ID,MNT_PLANT_RECORD_ID,SALESORG_ID,SALESORG_NAME,SALESORG_RECORD_ID,STATUS,MNT_PLANT_NAME,FAB_LOCATION_RECORD_ID,CPQTABLEENTRYADDEDBY,CPQTABLEENTRYDATEADDED)SELECT SUB_MAFBLC.*, CONVERT(VARCHAR(4000),NEWID()),''"
			+ str(User.UserName)
			+ "'',GETDATE() FROM (SELECT DISTINCT SAACNT.ACCOUNT_ID,SAACNT.ACCOUNT_NAME,SAACNT.ACCOUNT_RECORD_ID,MAEQUP_INBOUND.COUNTRY,SACTRY.COUNTRY_RECORD_ID,SADSCH.DISTRIBUTIONCHANNEL_ID,SADSCH.DISTRIBUTION_CHANNEL_RECORD_ID AS DISTRIBUTIONCHANNEL_RECORD_ID,	SADIVN.DIVISION_ID,SADIVN.DIVISION_RECORD_ID,MAEQUP_INBOUND.FAB_LOCATION_ID, MAPLNT.PLANT_ID AS MNT_PLANT_ID,MAPLNT.PLANT_RECORD_ID AS MNT_PLANT_RECORD_ID,SASORG.SALESORG_ID,SASORG.SALESORG_NAME,SASORG.SALES_ORG_RECORD_ID AS SALESORG_RECORD_ID,''TRUE'' AS STATUS,MAPLNT.PLANT_NAME AS MNT_PLANT_NAME FROM MAEQUP_INBOUND(NOLOCK) JOIN SAACNT(NOLOCK) ON MAEQUP_INBOUND.ACCOUNT_ID = SAACNT.ACCOUNT_ID JOIN SACTRY(NOLOCK) ON MAEQUP_INBOUND.COUNTRY = SACTRY.COUNTRY JOIN SADSCH(NOLOCK) ON MAEQUP_INBOUND.DISTRIBUTIONCHANNEL_ID = SADSCH.DISTRIBUTIONCHANNEL_ID JOIN SADIVN(NOLOCK) ON MAEQUP_INBOUND.DIVISION_ID = SADIVN.DIVISION_ID LEFT JOIN MAPLNT(NOLOCK) ON MAEQUP_INBOUND.MNT_PLANT_ID = MAPLNT.PLANT_ID JOIN SASORG(NOLOCK) ON MAEQUP_INBOUND.SALES_ORG_ID = SASORG.SALESORG_ID LEFT JOIN MAEQCT(NOLOCK) ON MAEQUP_INBOUND.EQUIPMENTCATEGORY_ID = MAEQCT.EQUIPMENTCATEGORY_ID WHERE  MAEQUP_INBOUND.TIMESTAMP='"+ str(timestamp_sessionid)+ "'  AND ISNULL(MAEQUP_INBOUND.INTEGRATION_STATUS,'''') ='''')SUB_MAFBLC LEFT JOIN MAFBLC(NOLOCK) ON SUB_MAFBLC.FAB_LOCATION_ID = MAFBLC.FAB_LOCATION_ID WHERE MAFBLC.FAB_LOCATION_ID IS NULL '" )

		# MAEQUP UPDATE
		primaryQueryItems = SqlHelper.GetFirst(""+ str(Parameter1.QUERY_CRITERIA_1)	+ "  MAEQUP SET MAEQUP.CpqTableEntryModifiedBy = ''"+ str(User.Id)+ "'',MAEQUP.CpqTableEntryDateModified = GetDate(),MAEQUP.DURATION = SUB_MAEQUP.DURATION,MAEQUP.EFFECTIVE_BEGDTE = SUB_MAEQUP.EFFECTIVE_BEGIN_DATE,MAEQUP.EFFECTIVE_ENDDTE = SUB_MAEQUP.EFFECTIVE_END_DATE,MAEQUP.EQUIPMENTCATEGORY_ID = SUB_MAEQUP.EQUIPMENTCATEGORY_ID,MAEQUP.EQUIPMENTCATEGORY_RECORD_ID = SUB_MAEQUP.EQUIPMENTCATEGORY_RECORD_ID,MAEQUP.EQUIPMENT_DESCRIPTION = SUB_MAEQUP.EQUIPMENT_DESC,MAEQUP.EQUIPMENTTYPE_ID = SUB_MAEQUP.EQUIPMENTTYPE_ID,MAEQUP.EQUIPMENTTYPE_RECORD_ID = SUB_MAEQUP.EQUIPMENTTYPE_RECORD_ID,MAEQUP.FABLOCATION_ID = SUB_MAEQUP.FAB_LOCATION_ID,MAEQUP.FABLOCATION_NAME = SUB_MAEQUP.FAB_LOCATION_NAME,MAEQUP.FABLOCATION_RECORD_ID = SUB_MAEQUP.FABLOCATION_RECORD_ID,MAEQUP.SERIAL_NO = SUB_MAEQUP.SERIAL_NO,MAEQUP.WARRANTY_END_DATE = SUB_MAEQUP.WARRANTY_END_DATE ,MAEQUP.WARRANTY_START_DATE = SUB_MAEQUP.WARRANTY_START_DATE,MAEQUP.WARRANTY_ID = SUB_MAEQUP.WARRANTY_ID,MAEQUP.WARRANTY_NAME = SUB_MAEQUP.WARRANTY_NAME,MAEQUP.WARRANTY_RECORD_ID = SUB_MAEQUP.WARRANTY_RECORD_ID,MAEQUP.CUSTOMER_TOOL_ID = SUB_MAEQUP.CUSTOMER_TOOL_ID,MAEQUP.GOT_CODE = SUB_MAEQUP.GOT_CODE,MAEQUP.MNT_PLANT_ID = SUB_MAEQUP.MNT_PLANT_ID,MAEQUP.MNT_PLANT_RECORD_ID = SUB_MAEQUP.MNT_PLANT_RECORD_ID,MAEQUP.PLATFORM = SUB_MAEQUP.PLATFORM ,MAEQUP.PBG = SUB_MAEQUP.PBG ,MAEQUP.EQUIPMENT_STATUS = SUB_MAEQUP.STATUS,MAEQUP.TECHNOLOGY = SUB_MAEQUP.TECHNOLOGY,MAEQUP.ADDRESS = SUB_MAEQUP.ADDRESS,MAEQUP.SUBSTRATE_SHAPE = SUB_MAEQUP.SUBSTRATE_SHAPE ,MAEQUP.SUBSTRATE_SIZE = SUB_MAEQUP.SUBSTRATE_SIZE ,MAEQUP.SUBSTRATE_SIZE_GROUP = SUB_MAEQUP.SUBSTRATE_SIZE_GROUP,MAEQUP.GREENBOOK = SUB_MAEQUP.GREENBOOK,MAEQUP.GREENBOOK_RECORD_ID = SUB_MAEQUP.GREENBOOK_RECORD_ID,MAEQUP.COUNTRY = SUB_MAEQUP.COUNTRY,MAEQUP.COUNTRY_RECORD_ID = SUB_MAEQUP.COUNTRY_RECORD_ID,MAEQUP.PAR_EQUIPMENT_ID = SUB_MAEQUP.PAR_EQUIPMENT_ID,MAEQUP.PAR_EQUIPMENT_RECORD_ID = SUB_MAEQUP.PAR_EQUIPMENT_RECORD_ID,MAEQUP.PAR_EQUIPMENT_DESCRIPTION = SUB_MAEQUP.PAR_EQUIPMENT_DESCRIPTION,MAEQUP.DEVICE_NODE = SUB_MAEQUP.DEVICENODE,MAEQUP.DEVICE_TYPE = SUB_MAEQUP.DEVICETYPE,MAEQUP.END_PRODUCT_TECHNOLOGY = SUB_MAEQUP.ENDPRODUCTTECHNOLOGY,MAEQUP.GENERATION = SUB_MAEQUP.GENERATION,MAEQUP.KPU = SUB_MAEQUP.KPU,MAEQUP.SALESORG_ID = SASORG.SALESORG_ID,MAEQUP.SALESORG_NAME = SASORG.SALESORG_NAME, MAEQUP.SALESORG_RECORD_ID = SASORG.SALES_ORG_RECORD_ID,MAEQUP.DISTRIBUTIONCHANNEL_ID = SADSCH.DISTRIBUTIONCHANNEL_ID,MAEQUP.DISTRIBUTIONCHANNEL_RECORD_ID = SADSCH.DISTRIBUTION_CHANNEL_RECORD_ID,MAEQUP.DIVISION_ID = SADIVN.DIVISION_ID,MAEQUP.DIVISION_RECORD_ID = SADIVN.DIVISION_RECORD_ID FROM (SELECT DISTINCT MAWRTY.DURATION,CONVERT(DATE,MAEQUP_INBOUND.EFFECTIVE_BEGIN_DATE) AS EFFECTIVE_BEGIN_DATE,CONVERT(DATE,MAEQUP_INBOUND.EFFECTIVE_END_DATE) AS EFFECTIVE_END_DATE,MAEQCT.EQUIPMENTCATEGORY_ID,MAEQCT.EQUIPMENT_CATEGORY_RECORD_ID AS EQUIPMENTCATEGORY_RECORD_ID,MAEQUP_INBOUND.EQUIPMENT_DESC,MAEQUP_INBOUND.EQUIPMENT_ID,MAEQTY.EQUIPMENT_TYPE_ID AS EQUIPMENTTYPE_ID,MAEQTY.EQUIPMENT_TYPE_RECORD_ID AS EQUIPMENTTYPE_RECORD_ID,MAFBLC.FAB_LOCATION_ID,MAFBLC.FAB_LOCATION_NAME,MAFBLC.FAB_LOCATION_RECORD_ID AS FABLOCATION_RECORD_ID,MAEQUP_INBOUND.SERIAL_NO,CONVERT(DATE,MAEQUP_INBOUND.WARRANTY_END_DATE) AS WARRANTY_END_DATE,convert(date,MAEQUP_INBOUND.WARRANTY_START_DATE) as WARRANTY_START_DATE ,MAWRTY.WARRANTY_ID,MAWRTY.WARRANTY_NAME,MAWRTY.WARRANTY_RECORD_ID,MAEQUP_INBOUND.CUSTOMER_TOOL_ID,MAEQUP_INBOUND.GOT_CODE,MAPLNT.PLANT_ID AS MNT_PLANT_ID,MAPLNT.PLANT_RECORD_ID AS MNT_PLANT_RECORD_ID,MAEQUP_INBOUND.PLATFORM,MAEQUP_INBOUND.PBG,MAEQUP_INBOUND.STATUS,MAEQUP_INBOUND.TECHNOLOGY,MAEQUP_INBOUND.ADDRESS,MAEQUP_INBOUND.SUBSTRATE_SHAPE,MAEQUP_INBOUND.SUBSTRATE_SIZE,MAEQUP_INBOUND.SUBSTRATE_SIZE_GROUP,SABUUN.BUSINESSUNIT_ID AS GREENBOOK,SABUUN.BUSINESS_UNITS_RECORD_ID AS GREENBOOK_RECORD_ID,SACTRY.COUNTRY,SACTRY.COUNTRY_RECORD_ID,MAEQUP.EQUIPMENT_ID AS PAR_EQUIPMENT_ID,MAEQUP.EQUIPMENT_RECORD_ID AS PAR_EQUIPMENT_RECORD_ID,MAEQUP.EQUIPMENT_DESCRIPTION AS PAR_EQUIPMENT_DESCRIPTION,MAEQUP_INBOUND.ACCOUNT_ID,MAEQUP_INBOUND.SALES_ORG_ID AS SALESORG_ID,MAEQUP_INBOUND.DISTRIBUTIONCHANNEL_ID,MAEQUP_INBOUND.DIVISION_ID,MAEQUP_INBOUND.DEVICENODE,MAEQUP_INBOUND.DEVICETYPE,MAEQUP_INBOUND.ENDPRODUCTTECHNOLOGY,MAEQUP_INBOUND.GENERATION,MAEQUP_INBOUND.KPU FROM MAEQUP_INBOUND(NOLOCK) LEFT JOIN MAPLNT(NOLOCK) ON MAEQUP_INBOUND.MNT_PLANT_ID = MAPLNT.PLANT_ID LEFT JOIN MAEQCT(NOLOCK) ON MAEQUP_INBOUND.EQUIPMENTCATEGORY_ID = MAEQCT.EQUIPMENTCATEGORY_ID LEFT JOIN SABUUN(NOLOCK) ON MAEQUP_INBOUND.GREENBOOK = SABUUN.BUSINESSUNIT_ID LEFT JOIN MAEQTY(NOLOCK) ON MAEQUP_INBOUND.EQUIPMENTTYPE_ID = MAEQTY.EQUIPMENT_TYPE_ID LEFT JOIN MAWRTY(NOLOCK) ON MAEQUP_INBOUND.WARRANTY_ID = MAWRTY.WARRANTY_ID JOIN MAFBLC(NOLOCK) ON MAEQUP_INBOUND.FAB_LOCATION_ID = MAFBLC.FAB_LOCATION_ID LEFT JOIN SACTRY(NOLOCK) ON MAEQUP_INBOUND.COUNTRY = SACTRY.COUNTRY LEFT JOIN MAEQUP (NOLOCK) ON MAEQUP_INBOUND.PAR_EQUIPMENT_ID = MAEQUP.EQUIPMENT_ID WHERE  MAEQUP_INBOUND.TIMESTAMP='"+ str(timestamp_sessionid)+ "'  AND ISNULL(MAEQUP_INBOUND.INTEGRATION_STATUS,'''') ='''' AND ISNULL(PROCESS_STATUS,'''')=''READY FOR UPLOAD'')SUB_MAEQUP  JOIN MAEQUP(NOLOCK) ON SUB_MAEQUP.EQUIPMENT_ID = MAEQUP.EQUIPMENT_ID JOIN SAACNT(NOLOCK) ON SUB_MAEQUP.ACCOUNT_ID = SAACNT.ACCOUNT_ID LEFT JOIN SASORG (NOLOCK) ON SUB_MAEQUP.SALESORG_ID = SASORG.SALESORG_ID LEFT JOIN SADIVN (NOLOCK) ON SUB_MAEQUP.DIVISION_ID = SADIVN.DIVISION_ID LEFT JOIN SADSCH (NOLOCK) ON SUB_MAEQUP.DISTRIBUTIONCHANNEL_ID = SADSCH.DISTRIBUTIONCHANNEL_ID '")	

		# MAEQUP INSERT  
		ERRLOG_DRP = SqlHelper.GetFirst("sp_executesql @T=N'IF EXISTS (SELECT ''X'' FROM SYS.OBJECTS WHERE NAME= ''TEMP_PROCESS_EQUP'' ) BEGIN DROP TABLE TEMP_PROCESS_EQUP END CREATE TABLE TEMP_PROCESS_EQUP (SESSION_ID VARCHAR(100),PROCESS_STATUS VARCHAR(100)) ' ")

		Check_flag1 = 1
		while Check_flag1 == 1:
			primaryQueryItems = SqlHelper.GetFirst(
				""
				+ str(Parameter.QUERY_CRITERIA_1)
				+ " TEMP_PROCESS_EQUP (SESSION_ID)SELECT DISTINCT TOP 5000 MAEQUP_INBOUND.EQUIPMENT_ID FROM MAEQUP_INBOUND(NOLOCK) LEFT JOIN TEMP_PROCESS_EQUP(NOLOCK) ON MAEQUP_INBOUND.EQUIPMENT_ID = TEMP_PROCESS_EQUP.SESSION_ID WHERE MAEQUP_INBOUND.PROCESS_STATUS=''READY FOR UPLOAD'' AND ISNULL(INTEGRATION_STATUS,'''')=''''  AND MAEQUP_INBOUND.TIMESTAMP='"
				+ str(timestamp_sessionid)
				+ "' AND TEMP_PROCESS_EQUP.SESSION_ID IS NULL  ' "
			)
			
			primaryQueryItems = SqlHelper.GetFirst(
					"select 'x' as a from TEMP_PROCESS_EQUP(nolock)  where isnull(PROCESS_STATUS,'')='' "
				)

			if str(primaryQueryItems) != "None":
			
				primaryQueryItems = SqlHelper.GetFirst(
					""
					+ str(Parameter.QUERY_CRITERIA_1)
					+ "   MAEQUP (ACCOUNT_ID,ACCOUNT_NAME,ACCOUNT_RECORD_ID,DISTRIBUTIONCHANNEL_ID,DISTRIBUTIONCHANNEL_RECORD_ID,DIVISION_ID,DIVISION_RECORD_ID,DURATION,EFFECTIVE_BEGDTE,EFFECTIVE_ENDDTE,EQUIPMENTCATEGORY_ID, EQUIPMENTCATEGORY_RECORD_ID,EQUIPMENTCATEGORY_DESCRIPTION,EQUIPMENT_DESCRIPTION,EQUIPMENT_ID,EQUIPMENTTYPE_DESCRIPTION,EQUIPMENTTYPE_ID,EQUIPMENTTYPE_RECORD_ID, FABLOCATION_RECORD_ID,PAR_EQUIPMENT_DESCRIPTION,PAR_EQUIPMENT_ID,REGION,REGION_RECORD_ID,SERIAL_NO,WARRANTY_END_DATE,WARRANTY_START_DATE,WARRANTY_ID,WARRANTY_NAME,WARRANTY_RECORD_ID,MATERIAL_RECORD_ID,SAP_PART_NUMBER,CUSTOMER_TOOL_ID,GOT_CODE,MNT_PLANT_ID,MNT_PLANT_RECORD_ID,MNT_PLANT_NAME,PLATFORM,PBG,EQUIPMENT_STATUS,TECHNOLOGY,ADDRESS,PAR_EQUIPMENT_RECORD_ID,SUBSTRATE_SHAPE,TECHNOLOGY_NODE,SUBSTRATE_SIZE,SUBSTRATE_SIZE_GROUP,GREENBOOK,GREENBOOK_RECORD_ID,COUNTRY,COUNTRY_RECORD_ID,FABLOCATION_ID,FABLOCATION_NAME,SALESORG_ID,SALESORG_NAME,SALESORG_RECORD_ID,DEVICE_NODE,DEVICE_TYPE,END_PRODUCT_TECHNOLOGY,GENERATION,KPU,EQUIPMENT_RECORD_ID,CPQTABLEENTRYADDEDBY,CPQTABLEENTRYDATEADDED)SELECT SUB_MAEQUP.*, CONVERT(VARCHAR(4000),NEWID()),''"	+ str(User.UserName)+ "'',GETDATE() FROM (SELECT DISTINCT SAACNT.ACCOUNT_ID,SAACNT.ACCOUNT_NAME,SAACNT.ACCOUNT_RECORD_ID,SADSCH.DISTRIBUTIONCHANNEL_ID,SADSCH.DISTRIBUTION_CHANNEL_RECORD_ID AS DISTRIBUTIONCHANNEL_RECORD_ID,SADIVN.DIVISION_ID,SADIVN.DIVISION_RECORD_ID,MAWRTY.DURATION,MAEQUP_INBOUND.EFFECTIVE_BEGIN_DATE,MAEQUP_INBOUND.EFFECTIVE_END_DATE,MAEQCT.EQUIPMENTCATEGORY_ID,MAEQCT.EQUIPMENT_CATEGORY_RECORD_ID AS EQUIPMENTCATEGORY_RECORD_ID,MAEQCT.EQUIPMENTCATEGORY_DESCRIPTION AS EQUIPMENTCATEGORY_DESCRIPTION,MAEQUP_INBOUND.EQUIPMENT_DESC,MAEQUP_INBOUND.EQUIPMENT_ID,MAEQTY.EQUIPMENT_TYPE_DESCRIPTION as EQUIPMENTTYPE_DESCRIPTION,MAEQTY.EQUIPMENT_TYPE_ID AS EQUIPMENTTYPE_ID,MAEQTY.EQUIPMENT_TYPE_RECORD_ID AS EQUIPMENTTYPE_RECORD_ID,MAFBLC.FAB_LOCATION_RECORD_ID AS FABLOCATION_RECORD_ID,MAEQUP.EQUIPMENT_DESCRIPTION,MAEQUP.EQUIPMENT_ID AS PAR_EQUIPMENT_ID,SASORG.REGION,SASORG.REGION_RECORD_ID,MAEQUP_INBOUND.SERIAL_NO,MAEQUP_INBOUND.WARRANTY_END_DATE,MAEQUP_INBOUND.WARRANTY_START_DATE,MAWRTY.WARRANTY_ID,MAWRTY.WARRANTY_NAME,MAWRTY.WARRANTY_RECORD_ID,MAMTRL.MATERIAL_RECORD_ID,MAMTRL.SAP_PART_NUMBER,MAEQUP_INBOUND.CUSTOMER_TOOL_ID,MAEQUP_INBOUND.GOT_CODE,MAPLNT.PLANT_ID AS MNT_PLANT_ID,MAPLNT.PLANT_RECORD_ID AS MNT_PLANT_RECORD_ID,MAPLNT.PLANT_NAME AS MNT_PLANT_NAME,MAEQUP_INBOUND.PLATFORM,MAEQUP_INBOUND.PBG,MAEQUP_INBOUND.STATUS,MAEQUP_INBOUND.TECHNOLOGY,MAEQUP_INBOUND.ADDRESS_1,MAEQUP.EQUIPMENT_RECORD_ID,MAEQUP_INBOUND.SUBSTRATE_SHAPE,MAEQUP_INBOUND.TECHNOLOGY_NODE,MAEQUP_INBOUND.SUBSTRATE_SIZE,MAEQUP_INBOUND.SUBSTRATE_SIZE_GROUP,SABUUN.BUSINESSUNIT_ID AS GREENBOOK,SABUUN.BUSINESS_UNITS_RECORD_ID AS GREENBOOK_RECORD_ID,SACTRY.COUNTRY,SACTRY.COUNTRY_RECORD_ID,MAFBLC.FAB_LOCATION_ID AS FABLOCATION_ID,MAFBLC.FAB_LOCATION_NAME AS FABLOCATION_NAME,SASORG.SALESORG_ID,SASORG.SALESORG_NAME,SASORG.SALES_ORG_RECORD_ID,MAEQUP_INBOUND.DEVICENODE,MAEQUP_INBOUND.DEVICETYPE,MAEQUP_INBOUND.ENDPRODUCTTECHNOLOGY,MAEQUP_INBOUND.GENERATION,MAEQUP_INBOUND.KPU FROM MAEQUP_INBOUND(NOLOCK) JOIN TEMP_PROCESS_EQUP(NOLOCK) ON MAEQUP_INBOUND.EQUIPMENT_ID = TEMP_PROCESS_EQUP.SESSION_ID JOIN SAACNT(NOLOCK) ON MAEQUP_INBOUND.ACCOUNT_ID = SAACNT.ACCOUNT_ID LEFT JOIN SADSCH(NOLOCK) ON MAEQUP_INBOUND.DISTRIBUTIONCHANNEL_ID = SADSCH.DISTRIBUTIONCHANNEL_ID LEFT JOIN SADIVN(NOLOCK) ON MAEQUP_INBOUND.DIVISION_ID = SADIVN.DIVISION_ID LEFT JOIN MAPLNT(NOLOCK) ON MAEQUP_INBOUND.MNT_PLANT_ID = MAPLNT.PLANT_ID LEFT JOIN SASORG(NOLOCK) ON MAEQUP_INBOUND.SALES_ORG_ID = SASORG.SALESORG_ID JOIN MAEQCT(NOLOCK) ON MAEQUP_INBOUND.EQUIPMENTCATEGORY_ID = MAEQCT.EQUIPMENTCATEGORY_ID LEFT JOIN SABUUN(NOLOCK) ON MAEQUP_INBOUND.GREENBOOK = SABUUN.BUSINESSUNIT_ID LEFT JOIN MAEQTY(NOLOCK) ON MAEQUP_INBOUND.EQUIPMENTTYPE_ID = MAEQTY.EQUIPMENT_TYPE_ID LEFT JOIN MAMTRL(NOLOCK) ON MAEQUP_INBOUND.SAP_PART_NUMBER = MAMTRL.SAP_PART_NUMBER LEFT JOIN MAWRTY(NOLOCK) ON MAEQUP_INBOUND.WARRANTY_ID = MAWRTY.WARRANTY_ID LEFT JOIN MAFBLC(NOLOCK) ON MAEQUP_INBOUND.FAB_LOCATION_ID = MAFBLC.FAB_LOCATION_ID LEFT JOIN SACTRY(NOLOCK) ON MAEQUP_INBOUND.COUNTRY = SACTRY.COUNTRY	LEFT JOIN MAEQUP (NOLOCK) ON MAEQUP_INBOUND.PAR_EQUIPMENT_ID = MAEQUP.EQUIPMENT_ID WHERE  MAEQUP_INBOUND.TIMESTAMP='"+ str(timestamp_sessionid)+ "'  AND ISNULL(MAEQUP_INBOUND.INTEGRATION_STATUS,'''') ='''' AND ISNULL(MAEQUP_INBOUND.PROCESS_STATUS,'''')=''READY FOR UPLOAD'' AND ISNULL(TEMP_PROCESS_EQUP.PROCESS_STATUS,'''')='''')SUB_MAEQUP LEFT JOIN MAEQUP(NOLOCK) ON SUB_MAEQUP.EQUIPMENT_ID = MAEQUP.EQUIPMENT_ID WHERE MAEQUP.EQUIPMENT_ID IS NULL '" )
				
				primaryQueryItems = SqlHelper.GetFirst(
					""
					+ str(Parameter1.QUERY_CRITERIA_1)
					+ " MAEQUP SET VALDRV_WAFERNODE = ''Advanced'' FROM MAEQUP_INBOUND(NOLOCK) JOIN TEMP_PROCESS_EQUP(NOLOCK) ON MAEQUP_INBOUND.EQUIPMENT_ID = TEMP_PROCESS_EQUP.SESSION_ID  JOIN MAEQUP (NOLOCK) ON MAEQUP_INBOUND.EQUIPMENT_ID = MAEQUP.EQUIPMENT_ID WHERE MAEQUP_INBOUND.TIMESTAMP='"+ str(timestamp_sessionid)+ "'  AND ISNULL(MAEQUP_INBOUND.INTEGRATION_STATUS,'''') ='''' AND ISNULL(MAEQUP_INBOUND.PROCESS_STATUS,'''')=''READY FOR UPLOAD'' AND ISNULL(TEMP_PROCESS_EQUP.PROCESS_STATUS,'''')='''' AND MAEQUP.GENERATION IN (''GEN 7'', ''GEN 7.5'', ''GEN 8'', ''GEN 8F'', ''GEN 8.5'', ''GEN 8.5S'', ''GEN 8.5H'', ''GEN 8.6'', ''GEN 8.7'') AND MAEQUP.TECHNOLOGY IN (''TFE'', ''TSP'', ''ALD'', ''METAL OXIDE'', ''HDP'') AND END_PRODUCT_TECHNOLOGY IN (''OLED Rigid'', ''OLED Flexible'', ''QLED'', ''microLED'', ''Others'') AND MAEQUP.GREENBOOK=''DISPLAY'' '" )

				primaryQueryItems = SqlHelper.GetFirst(
									""
									+ str(Parameter1.QUERY_CRITERIA_1)
									+ " MAEQUP SET VALDRV_WAFERNODE = ''Advanced'' FROM MAEQUP_INBOUND(NOLOCK) JOIN TEMP_PROCESS_EQUP(NOLOCK) ON MAEQUP_INBOUND.EQUIPMENT_ID = TEMP_PROCESS_EQUP.SESSION_ID  JOIN MAEQUP (NOLOCK) ON MAEQUP_INBOUND.EQUIPMENT_ID = MAEQUP.EQUIPMENT_ID WHERE MAEQUP_INBOUND.TIMESTAMP='"+ str(timestamp_sessionid)+ "'  AND ISNULL(MAEQUP_INBOUND.INTEGRATION_STATUS,'''') ='''' AND ISNULL(MAEQUP_INBOUND.PROCESS_STATUS,'''')=''READY FOR UPLOAD'' AND ISNULL(TEMP_PROCESS_EQUP.PROCESS_STATUS,'''')='''' AND MAEQUP.GENERATION IN (''GEN 10'', ''GEN 10.5'', ''GEN 11'') AND MAEQUP.TECHNOLOGY IN (''ALD'', ''TSP'', ''HDP'') AND END_PRODUCT_TECHNOLOGY IN (''OLED Rigid'', ''OLED Flexible'', ''QLED'', ''microLED'', ''Others'') AND MAEQUP.GREENBOOK=''DISPLAY'' '" )

				primaryQueryItems = SqlHelper.GetFirst(
									""
									+ str(Parameter1.QUERY_CRITERIA_1)
									+ " MAEQUP SET VALDRV_WAFERNODE = ''Advanced'' FROM MAEQUP_INBOUND(NOLOCK) JOIN TEMP_PROCESS_EQUP(NOLOCK) ON MAEQUP_INBOUND.EQUIPMENT_ID = TEMP_PROCESS_EQUP.SESSION_ID  JOIN MAEQUP (NOLOCK) ON MAEQUP_INBOUND.EQUIPMENT_ID = MAEQUP.EQUIPMENT_ID WHERE MAEQUP_INBOUND.TIMESTAMP='"+ str(timestamp_sessionid)+ "'  AND ISNULL(MAEQUP_INBOUND.INTEGRATION_STATUS,'''') ='''' AND ISNULL(MAEQUP_INBOUND.PROCESS_STATUS,'''')=''READY FOR UPLOAD'' AND ISNULL(TEMP_PROCESS_EQUP.PROCESS_STATUS,'''')='''' AND MAEQUP.GENERATION IN (''GEN 2'', ''GEN 2F'', ''GEN 3'', ''GEN 3.5'', ''GEN 3.5F'', ''GEN 4'', ''GEN 4H'', ''GEN 4F'', ''GEN 4.5'', ''GEN 4.5H'', ''GEN 4.5F'', ''GEN 4.5Q'', ''GEN 5'', ''GEN 5.5'', ''GEN 5.5F'', ''GEN 5.5Q'', ''GEN 6'', ''GEN 6H'', ''GEN 6H-P'') AND MAEQUP.TECHNOLOGY IN (''DIGITAL LITHOGRAPHY'') AND END_PRODUCT_TECHNOLOGY IN (''OLED Rigid'', ''OLED Flexible'', ''QLED'', ''microLED'', ''Others'') AND MAEQUP.GREENBOOK=''DISPLAY'' '" )

				primaryQueryItems = SqlHelper.GetFirst(
									""
									+ str(Parameter1.QUERY_CRITERIA_1)
									+ " MAEQUP SET VALDRV_WAFERNODE = ''Mature'' FROM MAEQUP_INBOUND(NOLOCK) JOIN TEMP_PROCESS_EQUP(NOLOCK) ON MAEQUP_INBOUND.EQUIPMENT_ID = TEMP_PROCESS_EQUP.SESSION_ID  JOIN MAEQUP (NOLOCK) ON MAEQUP_INBOUND.EQUIPMENT_ID = MAEQUP.EQUIPMENT_ID WHERE MAEQUP_INBOUND.TIMESTAMP='"+ str(timestamp_sessionid)+ "'  AND ISNULL(MAEQUP_INBOUND.INTEGRATION_STATUS,'''') ='''' AND ISNULL(MAEQUP_INBOUND.PROCESS_STATUS,'''')=''READY FOR UPLOAD'' AND ISNULL(TEMP_PROCESS_EQUP.PROCESS_STATUS,'''')='''' AND MAEQUP.GENERATION IN (''GEN 10'', ''GEN 10.5'', ''GEN 11'') AND MAEQUP.TECHNOLOGY IN (''SOLAR'', ''ARRAY'', ''A-SI'', ''LTPS'', ''METAL OXIDE'', ''NEW ARISTO'', ''SPUTTERING'') AND END_PRODUCT_TECHNOLOGY IN (''LCD+OLED'', ''OLED Rigid'', ''OLED Flexible'', ''Solar'', ''Touch Panel'', ''Others'') AND MAEQUP.GREENBOOK=''DISPLAY''  '" )
									
				primaryQueryItems = SqlHelper.GetFirst(
									""
									+ str(Parameter1.QUERY_CRITERIA_1)
									+ " MAEQUP SET VALDRV_WAFERNODE = ''Mature'' FROM MAEQUP_INBOUND(NOLOCK) JOIN TEMP_PROCESS_EQUP(NOLOCK) ON MAEQUP_INBOUND.EQUIPMENT_ID = TEMP_PROCESS_EQUP.SESSION_ID  JOIN MAEQUP (NOLOCK) ON MAEQUP_INBOUND.EQUIPMENT_ID = MAEQUP.EQUIPMENT_ID WHERE MAEQUP_INBOUND.TIMESTAMP='"+ str(timestamp_sessionid)+ "'  AND ISNULL(MAEQUP_INBOUND.INTEGRATION_STATUS,'''') ='''' AND ISNULL(MAEQUP_INBOUND.PROCESS_STATUS,'''')=''READY FOR UPLOAD'' AND ISNULL(TEMP_PROCESS_EQUP.PROCESS_STATUS,'''')='''' AND MAEQUP.GENERATION IN (''GEN 5.5'', ''GEN 5.5F'', ''GEN 5.5Q'', ''GEN 6'', ''GEN 6H'', ''GEN 6H-P'', ''GEN 8.5'', ''GEN 8.5S'', ''GEN 8.5H'', ''GEN 8.6'', ''GEN 8.7'') AND MAEQUP.TECHNOLOGY IN (''LTPS'', ''SOLAR'', ''SPUTTERING'', ''NEW ARISTO'', ''HYBRID'') AND END_PRODUCT_TECHNOLOGY IN (''LCD+OLED'', ''OLED Rigid'', ''OLED Flexible'', ''Solar'', ''Touch Panel'', ''Others'') AND MAEQUP.GREENBOOK=''DISPLAY'' '" )
									
				primaryQueryItems = SqlHelper.GetFirst(
									""
									+ str(Parameter1.QUERY_CRITERIA_1)
									+ " MAEQUP SET VALDRV_WAFERNODE = ''Mature'' FROM MAEQUP_INBOUND(NOLOCK) JOIN TEMP_PROCESS_EQUP(NOLOCK) ON MAEQUP_INBOUND.EQUIPMENT_ID = TEMP_PROCESS_EQUP.SESSION_ID  JOIN MAEQUP (NOLOCK) ON MAEQUP_INBOUND.EQUIPMENT_ID = MAEQUP.EQUIPMENT_ID WHERE MAEQUP_INBOUND.TIMESTAMP='"+ str(timestamp_sessionid)+ "'  AND ISNULL(MAEQUP_INBOUND.INTEGRATION_STATUS,'''') ='''' AND ISNULL(MAEQUP_INBOUND.PROCESS_STATUS,'''')=''READY FOR UPLOAD'' AND ISNULL(TEMP_PROCESS_EQUP.PROCESS_STATUS,'''')='''' AND MAEQUP.GENERATION IN (''GEN 2'', ''GEN 2F'', ''GEN 3'', ''GEN 3.5'', ''GEN 3.5F'', ''GEN 4'', ''GEN 4H'', ''GEN 4F'', ''GEN 4.5'', ''GEN 4.5H'', ''GEN 4.5F'', ''GEN 4.5Q'', ''GEN 5'', ''GEN 5.5'', ''GEN 5.5F'', ''GEN 5.5Q'', ''GEN 6'', ''GEN 6H'', ''GEN 6H-P'') AND MAEQUP.TECHNOLOGY IN (''TFE'', ''TSP'', ''ALD'', ''METAL OXIDE'', ''HDP'', ''HYBRID'') AND END_PRODUCT_TECHNOLOGY IN (''LCD+OLED'', ''OLED Rigid'', ''OLED Flexible'', ''Solar'', ''Touch Panel'', ''Others'') AND MAEQUP.GREENBOOK=''DISPLAY'' '" )
									
				primaryQueryItems = SqlHelper.GetFirst(
									""
									+ str(Parameter1.QUERY_CRITERIA_1)
									+ " MAEQUP SET VALDRV_WAFERNODE = ''Mature'' FROM MAEQUP_INBOUND(NOLOCK) JOIN TEMP_PROCESS_EQUP(NOLOCK) ON MAEQUP_INBOUND.EQUIPMENT_ID = TEMP_PROCESS_EQUP.SESSION_ID  JOIN MAEQUP (NOLOCK) ON MAEQUP_INBOUND.EQUIPMENT_ID = MAEQUP.EQUIPMENT_ID WHERE MAEQUP_INBOUND.TIMESTAMP='"+ str(timestamp_sessionid)+ "'  AND ISNULL(MAEQUP_INBOUND.INTEGRATION_STATUS,'''') ='''' AND ISNULL(MAEQUP_INBOUND.PROCESS_STATUS,'''')=''READY FOR UPLOAD'' AND ISNULL(TEMP_PROCESS_EQUP.PROCESS_STATUS,'''')='''' AND MAEQUP.GENERATION IN (''GEN 2'', ''GEN 2F'', ''GEN 3'', ''GEN 3.5'', ''GEN 3.5F'', ''GEN 4'', ''GEN 4H'', ''GEN 4F'', ''GEN 4.5'', ''GEN 4.5H'', ''GEN 4.5F'', ''GEN 4.5Q'', ''GEN 5'', ''GEN 5.5'', ''GEN 5.5F'', ''GEN 5.5Q'', ''GEN 6'', ''GEN 6H'', ''GEN 6H-P'', ''GEN 7'', ''GEN 7.5'',''GEN 8'', ''GEN 8F'', ''GEN 8.5'', ''GEN 8.5S'', ''GEN 8.5H'', ''GEN 8.6'', ''GEN 8.7'', ''GEN 10'', ''GEN 10.5'', ''GEN 11'') AND MAEQUP.TECHNOLOGY IN (''EBT'', ''EBR'') AND END_PRODUCT_TECHNOLOGY IN (''LCD+OLED'', ''OLED Rigid'', ''OLED Flexible'', ''Solar'', ''Touch Panel'', ''Others'') AND MAEQUP.GREENBOOK=''DISPLAY'' '" )

				primaryQueryItems = SqlHelper.GetFirst(
									""
									+ str(Parameter1.QUERY_CRITERIA_1)
									+ " MAEQUP SET VALDRV_WAFERNODE = ''Legacy'' FROM MAEQUP_INBOUND(NOLOCK) JOIN TEMP_PROCESS_EQUP(NOLOCK) ON MAEQUP_INBOUND.EQUIPMENT_ID = TEMP_PROCESS_EQUP.SESSION_ID  JOIN MAEQUP (NOLOCK) ON MAEQUP_INBOUND.EQUIPMENT_ID = MAEQUP.EQUIPMENT_ID WHERE MAEQUP_INBOUND.TIMESTAMP='"+ str(timestamp_sessionid)+ "'  AND ISNULL(MAEQUP_INBOUND.INTEGRATION_STATUS,'''') ='''' AND ISNULL(MAEQUP_INBOUND.PROCESS_STATUS,'''')=''READY FOR UPLOAD'' AND ISNULL(TEMP_PROCESS_EQUP.PROCESS_STATUS,'''')='''' AND ISNULL(MAEQUP.GENERATION,'''') <> ''''  AND ISNULL(MAEQUP.TECHNOLOGY,'''') <>'''' AND ISNULL(END_PRODUCT_TECHNOLOGY,'''')<>''''  AND ISNULL(VALDRV_WAFERNODE,'''')='''' AND MAEQUP.GREENBOOK=''DISPLAY'' '" )

				primaryQueryItems = SqlHelper.GetFirst(
									""
									+ str(Parameter1.QUERY_CRITERIA_1)
									+ " MAEQUP SET VALDRV_WAFERNODE = ''Legacy'' FROM MAEQUP_INBOUND(NOLOCK) JOIN TEMP_PROCESS_EQUP(NOLOCK) ON MAEQUP_INBOUND.EQUIPMENT_ID = TEMP_PROCESS_EQUP.SESSION_ID  JOIN MAEQUP (NOLOCK) ON MAEQUP_INBOUND.EQUIPMENT_ID = MAEQUP.EQUIPMENT_ID WHERE MAEQUP_INBOUND.TIMESTAMP='"+ str(timestamp_sessionid)+ "'  AND ISNULL(MAEQUP_INBOUND.INTEGRATION_STATUS,'''') ='''' AND ISNULL(MAEQUP_INBOUND.PROCESS_STATUS,'''')=''READY FOR UPLOAD'' AND ISNULL(TEMP_PROCESS_EQUP.PROCESS_STATUS,'''')='''' AND ISNULL(MAEQUP.SUBSTRATE_SIZE,'''') = ''200mm''  AND MAEQUP.GREENBOOK NOT IN (''DISPLAY'',''PPC'') '" )

				primaryQueryItems = SqlHelper.GetFirst(
									""
									+ str(Parameter1.QUERY_CRITERIA_1)
									+ " MAEQUP SET VALDRV_WAFERNODE = ''Legacy'' FROM MAEQUP_INBOUND(NOLOCK) JOIN TEMP_PROCESS_EQUP(NOLOCK) ON MAEQUP_INBOUND.EQUIPMENT_ID = TEMP_PROCESS_EQUP.SESSION_ID  JOIN MAEQUP (NOLOCK) ON MAEQUP_INBOUND.EQUIPMENT_ID = MAEQUP.EQUIPMENT_ID WHERE MAEQUP_INBOUND.TIMESTAMP='"+ str(timestamp_sessionid)+ "'  AND ISNULL(MAEQUP_INBOUND.INTEGRATION_STATUS,'''') ='''' AND ISNULL(MAEQUP_INBOUND.PROCESS_STATUS,'''')=''READY FOR UPLOAD'' AND ISNULL(TEMP_PROCESS_EQUP.PROCESS_STATUS,'''')='''' AND ISNULL(MAEQUP.SUBSTRATE_SIZE,'''') = ''300mm'' AND DEVICE_NODE IN( ''â¥ 28NM'',''â¥4X'',''NOR'',''EQUIP/MATL'',''MPS'',''PACKAGING'',''WFR MFG'',''G&W'',''SOLAR'',''PCM'',''Other'')  AND MAEQUP.GREENBOOK NOT IN (''DISPLAY'',''PPC'') '" )

				primaryQueryItems = SqlHelper.GetFirst(
									""
									+ str(Parameter1.QUERY_CRITERIA_1)
									+ " MAEQUP SET VALDRV_WAFERNODE = ''Mature'' FROM MAEQUP_INBOUND(NOLOCK) JOIN TEMP_PROCESS_EQUP(NOLOCK) ON MAEQUP_INBOUND.EQUIPMENT_ID = TEMP_PROCESS_EQUP.SESSION_ID  JOIN MAEQUP (NOLOCK) ON MAEQUP_INBOUND.EQUIPMENT_ID = MAEQUP.EQUIPMENT_ID WHERE MAEQUP_INBOUND.TIMESTAMP='"+ str(timestamp_sessionid)+ "'  AND ISNULL(MAEQUP_INBOUND.INTEGRATION_STATUS,'''') ='''' AND ISNULL(MAEQUP_INBOUND.PROCESS_STATUS,'''')=''READY FOR UPLOAD'' AND ISNULL(TEMP_PROCESS_EQUP.PROCESS_STATUS,'''')='''' AND ISNULL(MAEQUP.SUBSTRATE_SIZE,'''') IN (''300mm'',''10nm'') AND DEVICE_NODE IN( ''<28NM'')  AND MAEQUP.GREENBOOK NOT IN (''DISPLAY'',''PPC'') '" )

				primaryQueryItems = SqlHelper.GetFirst(
									""
									+ str(Parameter1.QUERY_CRITERIA_1)
									+ " MAEQUP SET VALDRV_WAFERNODE = ''Mature'' FROM MAEQUP_INBOUND(NOLOCK) JOIN TEMP_PROCESS_EQUP(NOLOCK) ON MAEQUP_INBOUND.EQUIPMENT_ID = TEMP_PROCESS_EQUP.SESSION_ID  JOIN MAEQUP (NOLOCK) ON MAEQUP_INBOUND.EQUIPMENT_ID = MAEQUP.EQUIPMENT_ID WHERE MAEQUP_INBOUND.TIMESTAMP='"+ str(timestamp_sessionid)+ "'  AND ISNULL(MAEQUP_INBOUND.INTEGRATION_STATUS,'''') ='''' AND ISNULL(MAEQUP_INBOUND.PROCESS_STATUS,'''')=''READY FOR UPLOAD'' AND ISNULL(TEMP_PROCESS_EQUP.PROCESS_STATUS,'''')='''' AND ISNULL(MAEQUP.SUBSTRATE_SIZE,'''') IN (''300mm'') AND DEVICE_NODE IN( ''2X'',''2Y'',''2Z'',''3D 48P'',''3D 64P'',''3D 96P'')  AND MAEQUP.GREENBOOK NOT IN (''DISPLAY'',''PPC'') '" )

				primaryQueryItems = SqlHelper.GetFirst(
									""
									+ str(Parameter1.QUERY_CRITERIA_1)
									+ " MAEQUP SET VALDRV_WAFERNODE = ''Advanced'' FROM MAEQUP_INBOUND(NOLOCK) JOIN TEMP_PROCESS_EQUP(NOLOCK) ON MAEQUP_INBOUND.EQUIPMENT_ID = TEMP_PROCESS_EQUP.SESSION_ID  JOIN MAEQUP (NOLOCK) ON MAEQUP_INBOUND.EQUIPMENT_ID = MAEQUP.EQUIPMENT_ID WHERE MAEQUP_INBOUND.TIMESTAMP='"+ str(timestamp_sessionid)+ "'  AND ISNULL(MAEQUP_INBOUND.INTEGRATION_STATUS,'''') ='''' AND ISNULL(MAEQUP_INBOUND.PROCESS_STATUS,'''')=''READY FOR UPLOAD'' AND ISNULL(TEMP_PROCESS_EQUP.PROCESS_STATUS,'''')='''' AND ISNULL(MAEQUP.SUBSTRATE_SIZE,'''') IN (''300mm'') AND DEVICE_NODE IN( ''<=10NM'',''1A'',''1X'',''1Y'',''1Z'',''3D 96P'',''XPOINT'',''F1X '')  AND MAEQUP.GREENBOOK NOT IN (''DISPLAY'',''PPC'') '" )

				primaryQueryItems = SqlHelper.GetFirst(""+ str(Parameter1.QUERY_CRITERIA_1)+ " MAEQUP SET VALDRV_WAFERNODE = ''Legacy'' FROM MAEQUP_INBOUND(NOLOCK) JOIN TEMP_PROCESS_EQUP(NOLOCK) ON MAEQUP_INBOUND.EQUIPMENT_ID = TEMP_PROCESS_EQUP.SESSION_ID  JOIN MAEQUP(NOLOCK) ON MAEQUP_INBOUND.EQUIPMENT_ID = MAEQUP.EQUIPMENT_ID WHERE MAEQUP_INBOUND.TIMESTAMP='"+ str(timestamp_sessionid)+ "'  AND ISNULL(MAEQUP_INBOUND.INTEGRATION_STATUS,'''') ='''' AND ISNULL(MAEQUP_INBOUND.PROCESS_STATUS,'''')=''READY FOR UPLOAD'' AND ISNULL(TEMP_PROCESS_EQUP.PROCESS_STATUS,'''')='''' AND   MAEQUP.GREENBOOK = ''PPC'' '" )

									
				primaryQueryItems = SqlHelper.GetFirst(
					""
					+ str(Parameter1.QUERY_CRITERIA_1)
					+ " MAEQUP SET VALDRV_DEVICETYPE = ''Logic/Foundry'' FROM MAEQUP_INBOUND(NOLOCK) JOIN TEMP_PROCESS_EQUP(NOLOCK) ON MAEQUP_INBOUND.EQUIPMENT_ID = TEMP_PROCESS_EQUP.SESSION_ID  JOIN MAEQUP (NOLOCK) ON MAEQUP_INBOUND.EQUIPMENT_ID = MAEQUP.EQUIPMENT_ID WHERE MAEQUP_INBOUND.TIMESTAMP='"+ str(timestamp_sessionid)+ "'  AND ISNULL(MAEQUP_INBOUND.INTEGRATION_STATUS,'''') ='''' AND ISNULL(MAEQUP_INBOUND.PROCESS_STATUS,'''')=''READY FOR UPLOAD'' AND ISNULL(TEMP_PROCESS_EQUP.PROCESS_STATUS,'''')='''' AND DEVICE_TYPE IN (''Analog'',''CIS'',''Foundry'',''LOGIC'',''MEMS'',''Equip/Matl'',''Packaging'',''Photomask'',''R&D'',''SI WAFER'') '" )

				primaryQueryItems = SqlHelper.GetFirst(
									""
									+ str(Parameter1.QUERY_CRITERIA_1)
									+ " MAEQUP SET VALDRV_DEVICETYPE = ''Memory'' FROM MAEQUP_INBOUND(NOLOCK) JOIN TEMP_PROCESS_EQUP(NOLOCK) ON MAEQUP_INBOUND.EQUIPMENT_ID = TEMP_PROCESS_EQUP.SESSION_ID  JOIN MAEQUP (NOLOCK) ON MAEQUP_INBOUND.EQUIPMENT_ID = MAEQUP.EQUIPMENT_ID WHERE MAEQUP_INBOUND.TIMESTAMP='"+ str(timestamp_sessionid)+ "'  AND ISNULL(MAEQUP_INBOUND.INTEGRATION_STATUS,'''') ='''' AND ISNULL(MAEQUP_INBOUND.PROCESS_STATUS,'''')=''READY FOR UPLOAD'' AND ISNULL(TEMP_PROCESS_EQUP.PROCESS_STATUS,'''')='''' AND DEVICE_TYPE IN (''DRAM'',''FLASH'') '" )

				primaryQueryItems = SqlHelper.GetFirst(
									""
									+ str(Parameter1.QUERY_CRITERIA_1)
									+ " MAEQUP SET VALDRV_DEVICETYPE = ''Display'' FROM MAEQUP_INBOUND(NOLOCK) JOIN TEMP_PROCESS_EQUP(NOLOCK) ON MAEQUP_INBOUND.EQUIPMENT_ID = TEMP_PROCESS_EQUP.SESSION_ID  JOIN MAEQUP (NOLOCK) ON MAEQUP_INBOUND.EQUIPMENT_ID = MAEQUP.EQUIPMENT_ID WHERE MAEQUP_INBOUND.TIMESTAMP='"+ str(timestamp_sessionid)+ "'  AND ISNULL(MAEQUP_INBOUND.INTEGRATION_STATUS,'''') ='''' AND ISNULL(MAEQUP_INBOUND.PROCESS_STATUS,'''')=''READY FOR UPLOAD'' AND ISNULL(TEMP_PROCESS_EQUP.PROCESS_STATUS,'''')='''' AND DEVICE_TYPE IN (''DISPLAY'') '" )



				UpdateQuery = SqlHelper.GetFirst(
						"sp_executesql @T=N'update TEMP_PROCESS_EQUP set process_status=''completed'' where isnulL(process_status,'''')='''' ' "
						)
			else:
				Check_flag1 = 0

		DeleteQuery = SqlHelper.GetFirst(
						"sp_executesql @T=N'Delete from TEMP_PROCESS_EQUP Where process_status=''completed'' ' "
						)

		primaryQueryItems = SqlHelper.GetFirst(
			""
			+ str(Parameter1.QUERY_CRITERIA_1)
			+ "   B SET SALESREP_ID = EMPLOYEE_ID,SALESREP_NAME = EMPLOYEE_NAME,SALESREP_RECORD_ID = EMPLOYEE_RECORD_ID FROM MAEQUP_INBOUND (NOLOCK) A JOIN MAEQUP (NOLOCK) B ON A.EQUIPMENT_ID = B.EQUIPMENT_ID JOIN SAEMPL C(NOLOCK) ON ''E''+A.SALES_REP = C.EMPLOYEE_ID WHERE  TIMESTAMP='"+ str(timestamp_sessionid)+ "'  AND ISNULL(INTEGRATION_STATUS,'''') ='''' AND ISNULL(PROCESS_STATUS,'''')=''READY FOR UPLOAD'' '"	)

		primaryQueryItems = SqlHelper.GetFirst(
			""
			+ str(Parameter1.QUERY_CRITERIA_1)
			+ "   MAEQUP_INBOUND SET PROCESS_STATUS = ''UPLOADED'' WHERE  TIMESTAMP='"+ str(timestamp_sessionid)+ "'  AND ISNULL(INTEGRATION_STATUS,'''') ='''' AND ISNULL(PROCESS_STATUS,'''')=''READY FOR UPLOAD'' '"	)
			
		ERRLOG_DRP = SqlHelper.GetFirst("sp_executesql @T=N'IF EXISTS (SELECT ''X'' FROM SYS.OBJECTS WHERE NAME= ''TEMP_PROCESS_EQUP'' ) BEGIN DROP TABLE TEMP_PROCESS_EQUP END ' ")
		
		# ERROR MESSAGE SAVING IN SYELOG

		Error_list = []
		Resp_msg = {}
		Lst_resp = []
		Email_Check = 1
		while Email_Check == 1:
			Error_primaryQuery = SqlHelper.GetList(
				"select top 10 SESSION_ID from ERROR_SESSION(NOLOCK) where ISNULL(PROCESS_STATUS,'')= '' and isnull(SESSION_ID,'')<>''  "
			)

			Session_lst_count = []
			for data in Error_primaryQuery:
				Session_lst_count.append(data.SESSION_ID)

			Session_lst = tuple(Session_lst_count)
			if len(Session_lst_count) == 1:
				Session_lst = "('" + Session_lst_count[0] + "')"

			if len(Session_lst_count) > 0:

				primaryQueryItems = SqlHelper.GetList(
					"select distinct EQUIPMENT_ID,integration_status from MAEQUP_INBOUND(nolock) where isnull(integration_status,'')<>'' and session_id in "
					+ str(Session_lst)
					+ "  "
				)

				Dt = {}
				for ins in primaryQueryItems:
					Modi_integration_status = []
					inte_status = str(ins.integration_status).split("||")
					integration_status = set(inte_status)
					integration_status = list(integration_status)
					if "" in integration_status:
						integration_status.remove("")

					SYELOG_tableInfo = SqlHelper.GetTable("SYELOG")
					for uu in integration_status:
						split_data = uu.split("-", 1)
						SYMSGS_MSG_TEXT = SqlHelper.GetFirst(
							"SELECT MESSAGE_TEXT,RECORD_ID AS REC_ID,OBJECT_APINAME,OBJECT_RECORD_ID,MESSAGE_TYPE FROM SYMSGS(NOLOCK) WHERE MESSAGE_CODE = '"
							+ str(split_data[0])
							+ "'"
						)

						if len(split_data) > 1:
							CONVERTED_MSG = SYMSGS_MSG_TEXT.MESSAGE_TEXT + " - " + split_data[-1]
						else:
							CONVERTED_MSG = SYMSGS_MSG_TEXT.MESSAGE_TEXT

						Modi_integration_status.append(CONVERTED_MSG)

						GuidQuery = SqlHelper.GetFirst("SELECT CONVERT(VARCHAR(4000),NEWID()) AS A")
						Dit = {}
						Dit["ERROR_LOGS_RECORD_ID"] = GuidQuery.A
						Dit["ERRORMESSAGE_RECORD_ID"] = SYMSGS_MSG_TEXT.REC_ID
						Dit["ERRORMESSAGE_DESCRIPTION"] = SYMSGS_MSG_TEXT.MESSAGE_TEXT
						Dit["OBJECT_RECORD_ID"] = SYMSGS_MSG_TEXT.OBJECT_RECORD_ID
						Dit["OBJECT_TYPE"] = SYMSGS_MSG_TEXT.MESSAGE_TYPE
						Dit["OBJECT_NAME"] = SYMSGS_MSG_TEXT.OBJECT_APINAME
						if len(split_data) > 1:
							Dit["OBJECT_VALUE"] = split_data[-1]
						if len(split_data) == 1:
							Dit["OBJECT_VALUE"] = ""
						Dit["CPQTABLEENTRYDATEADDED"] = Modi_date
						Dit["CPQTABLEENTRYADDEDBY"] = User.UserName
						SYELOG_tableInfo.AddRow(Dit)
					sqlInfo = SqlHelper.Upsert(SYELOG_tableInfo)

					if str(ins.EQUIPMENT_ID) in Dt:
						for data in Modi_integration_status:
							if data not in Dt[ins.EQUIPMENT_ID]:
								Dt[ins.EQUIPMENT_ID].append(data)
					else:
						Dt[ins.EQUIPMENT_ID] = Modi_integration_status
				for EQUIPMENT_ID in Dt:
					inte_status_info = ""
					for data in Dt[EQUIPMENT_ID]:
						inte_status_info = inte_status_info + data + "||"

					Error_list.append(EQUIPMENT_ID + "--" + inte_status_info[:-2])

				ErrorQueryItems = SqlHelper.GetFirst(""+ str(Parameter1.QUERY_CRITERIA_1)+ "  ERROR_SESSION SET PROCESS_STATUS = ''UPLOADED'',CpqTableEntryDateModified = GetDate() WHERE SESSION_ID  IN "+ str(Session_lst).replace("'","''")+ "  '")

				
			else:
				Email_Check = 0

		# Deleted dynamically created table
		TempTable = SqlHelper.GetFirst("sp_executesql @T=N'IF EXISTS (SELECT ''X'' FROM SYS.OBJECTS WHERE NAME= ''"+str(Temp_Table_Name)+"'' ) BEGIN DROP TABLE "+str(Temp_Table_Name)+" END'")

		if len(Error_list) > 0:

			Header = "<!DOCTYPE html><html><head><style>table {font-family: Calibri, sans-serif; border-collapse: collapse; width: 75%}td, th {  border: 1px solid #dddddd;  text-align: left; padding: 8px;}.im {color: #222;}tr:nth-child(even) {background-color: #dddddd;}</style></head><body>"

			Table_start = "<p>Hi Team,<br>Please find the below exceptions for your reference</p><table class='table table-bordered'><tr><th>SNO</th><th>EQUIPMENT_ID</th><th>ERROR MESSAGE</th></tr>"
			Table_End = "</table><p><strong>Note : </strong>Please do not reply to this email.</p></body></html>"
			Table_info = ""
			unique_Error_list = set(Error_list)
			for indx, data in enumerate(unique_Error_list, 1):
				data = str(data).split("--")
				Table_record = (
					"<tr>"
					+ "<td>"
					+ str(indx)
					+ "</td>"
					+ "<td>"
					+ str(data[0])
					+ "</td>"
					+ "<td>"
					+ str(data[-1])
					+ "</td>"
					+ "</tr>"
				)
				Table_info = Table_info + Table_record

			Error_Info = Header + Table_start + Table_info + Table_End

			LOGIN_CRE = SqlHelper.GetFirst("SELECT USER_NAME AS Username,Password FROM SYCONF where Domain ='SUPPORT_MAIL'")

			# Create new SmtpClient object
			mailClient = SmtpClient()

			# Set the host and port (eg. smtp.gmail.com)
			mailClient.Host = "smtp.gmail.com"
			mailClient.Port = 587
			mailClient.EnableSsl = "true"

			# Setup NetworkCredential
			mailCred = NetworkCredential()
			mailCred.UserName = str(LOGIN_CRE.Username)
			mailCred.Password = str(LOGIN_CRE.Password)
			mailClient.Credentials = mailCred

			# Create two mail adresses, one for send from and the another for recipient
			toEmail = MailAddress("suresh.muniyandi@bostonharborconsulting.com")
			fromEmail = MailAddress("INTEGRATION.SUPPORT@BOSTONHARBORCONSULTING.COM")

			# Create new MailMessage object
			msg = MailMessage(fromEmail, toEmail)

			# Set message subject and body
			msg.Subject = "FAB LOCATION EXCEPTIONS - AMAT CPQ QA"
			msg.IsBodyHtml = True
			msg.Body = Error_Info

			# CC Emails
			copyEmail = MailAddress("Baji.baba@bostonharborconsulting.com")
			msg.CC.Add(copyEmail)		

			# Send the message
			mailClient.Send(msg)
			Lst_resp.append({"Status": "400", "Message": unique_Error_list})
		else:
			Lst_resp.append({"Status": "200", "Message": "EQUIPMENT DATA SUCCESSFULLY UPLOADED"})

		Resp_msg["Response"] = Lst_resp

		return Resp_msg

	except:

		# Deleted dynamically created table
		Temp_Table_Name = 'ERROR_SESSION'
		TempTable = SqlHelper.GetFirst("sp_executesql @T=N'IF EXISTS (SELECT ''X'' FROM SYS.OBJECTS WHERE NAME= ''"+str(Temp_Table_Name)+"'' ) BEGIN DROP TABLE "+str(Temp_Table_Name)+" END'")
		ERRLOG_DRP = SqlHelper.GetFirst("sp_executesql @T=N'IF EXISTS (SELECT ''X'' FROM SYS.OBJECTS WHERE NAME= ''TEMP_PROCESS_EQUP'' ) BEGIN DROP TABLE TEMP_PROCESS_EQUP END ' ")

		Log.Info("MAPOSTEQBK ERROR---->:" + str(sys.exc_info()[1]))
		Log.Info("MAPOSTEQBK ERROR LINE NO---->:" + str(sys.exc_info()[-1].tb_lineno))
		error_info = {"Response": [{"Status": "400", "Message": str(sys.exc_info()[1])}]}
		Result  = str(error_info)

	
Parent_call = EquipementBulk("Parent")
Child_call = EquipementBulk("Child")
result = ScriptExecutor.ExecuteGlobal("MAPOSTFLBK")	
Final_info = Parent_call
Final_info = Child_call
Result = Final_info