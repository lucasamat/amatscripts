# =========================================================================================================================================
#   __script_name : QTPOSTCQHD.PY
#   __script_description : THIS SCRIPT IS USED TO CREATE QUOTE JSON FOR HADOOP
#   __primary_author__ : SURESH MUNIYANDI, Baji
#   __create_date :
#   Â© BOSTON HARBOR TECHNOLOGY LLC - ALL RIGHTS RESERVED
# ==========================================================================================================================================
import sys
import clr
import System.Net
from System.Text.Encoding import UTF8
from System import Convert
from System.Net import HttpWebRequest, NetworkCredential
from System.Net import *
from System.Net import CookieContainer
from System.Net import Cookie
from System.Net import WebRequest
from System.Net import HttpWebResponse
from System import Uri
clr.AddReference("System.Net")
from System.Net import CookieContainer, NetworkCredential, Mail
from System.Net.Mail import SmtpClient, MailAddress, Attachment, MailMessage


Jsonquery = SqlHelper.GetFirst("select getdate() as date,DATEADD(HOUR,-2,getdate()) as filter  ")

Quoteinfoquery = SqlHelper.GetList("SELECT Top 1 distinct Quote_id FROM SAQTMT(NOLOCK) WHERE convert(varchar,CPQTABLEENTRYDATEADDED) >'"+str(Jsonquery.date)+"' union select distinct quote_id from SAQTMT where isnull(hadoop_flag,'False') = 'False'")

Parameter = SqlHelper.GetFirst("SELECT QUERY_CRITERIA_1 FROM SYDBQS (NOLOCK) WHERE QUERY_NAME = 'SELECT' ")
Parameter1 = SqlHelper.GetFirst("SELECT QUERY_CRITERIA_1 FROM SYDBQS (NOLOCK) WHERE QUERY_NAME = 'UPD' ")

Quoteinfoquery = SqlHelper.GetFirst("sp_executesql @T=N'UPDATE  SAQTMT SET HADOOP_FLAG = ''FALSE'' WHERE convert(varchar,CPQTABLEENTRYDATEADDED) >''"+str(Jsonquery.date)+"'' '")

for data in Quoteinfoquery:
	
	sessionid = SqlHelper.GetFirst("SELECT NEWID() AS A")
	timestamp_sessionid = "'" + str(sessionid.A) + "'"		
	
	Qt_ID = str(data.Quote_id)

	SAQTMT_QUERY = SqlHelper.GetFirst(
			"SELECT replace ('\"SAQTMT\": ['+STUFF((SELECT ','+ JSON FROM (SELECT DISTINCT '{\"ACCOUNT_ID\" : \"'+ACCOUNT_ID+'\",\"ADVANCED_SHIPPING_EMAIL\" : \"'+ADVANCED_SHIPPING_EMAIL+'\",\"C4C_QUOTE_ID\" : \"'+C4C_QUOTE_ID+'\",\"CANCELLATION_PERIOD\" : \"'+CANCELLATION_PERIOD+'\",\"CONTRACT_VALID_FROM\" : \"'+CONTRACT_VALID_FROM+'\",\"CONTRACT_VALID_TO\" : \"'+CONTRACT_VALID_TO+'\",\"CRM_CONTRACT_ID\" : \"'+CRM_CONTRACT_ID+'\",\"CUSTOMER_NOTES\" : \"'+CUSTOMER_NOTES+'\",\"GLOBAL_CURRENCY\" : \"'+GLOBAL_CURRENCY+'\"		,\"INCOTERMS\" : \"'+INCOTERMS+'\",\"INCOTERMS_LOCATION\" : \"'+INCOTERMS_LOCATION+'\",\"NET_VALUE\" : \"'+NET_VALUE+'\",\"PARENTQUOTE_ID\" : \"'+PARENTQUOTE_ID+'\",\"PAYMENTTERM_DAYS\" : \"'+PAYMENTTERM_DAYS+'\",\"PAYMENTTERM_ID\" : \"'+PAYMENTTERM_ID+'\",\"PRICELIST_ID\" : \"'+PRICELIST_ID+'\",\"QUOTE_APPROVE_DATE\" : \"'+QUOTE_APPROVE_DATE+'\",\"QUOTE_CREATED_DATE\" : \"'+QUOTE_CREATED_DATE+'\",\"QUOTE_CURRENCY\" : \"'+QUOTE_CURRENCY+'\",\"QUOTE_EXPIRE_DATE\" : \"'+QUOTE_EXPIRE_DATE+'\",\"QUOTE_ID\" : \"'+QUOTE_ID+'\",\"QUOTE_LEVEL\" : \"'+QUOTE_LEVEL+'\",\"QUOTE_NAME\" : \"'+QUOTE_NAME+'\",\"QUOTE_STATUS\" : \"'+QUOTE_STATUS+'\",\"QUOTE_TYPE\" : \"'+QUOTE_TYPE+'\",\"REASONFOR_REJECTION\" : \"'+REASONFOR_REJECTION+'\",\"SALE_TYPE\" : \"'+SALE_TYPE+'\",\"SOURCE_CONTRACT_ID\" : \"'+SOURCE_CONTRACT_ID+'\",\"SESSION_ID\" : \"'+SESSION_ID+'\"}' AS JSON from (SELECT DISTINCT  ISNULL(ACCOUNT_ID,'')	AS	ACCOUNT_ID,ISNULL(ADVANCED_SHIPPING_EMAIL,'')	AS	ADVANCED_SHIPPING_EMAIL,ISNULL(C4C_QUOTE_ID,'')	AS	C4C_QUOTE_ID,ISNULL(CANCELLATION_PERIOD,'')	AS	CANCELLATION_PERIOD,ISNULL(CONVERT(VARCHAR(11),CONTRACT_VALID_FROM,101),'')	AS	CONTRACT_VALID_FROM,ISNULL(CONVERT(VARCHAR(11),CONTRACT_VALID_TO,101),'')	AS	CONTRACT_VALID_TO,ISNULL(CRM_CONTRACT_ID,'')	AS	CRM_CONTRACT_ID,ISNULL(CUSTOMER_NOTES,'')	AS	CUSTOMER_NOTES,ISNULL(GLOBAL_CURRENCY,'')	AS	GLOBAL_CURRENCY,ISNULL(INCOTERMS,'')	AS	INCOTERMS,ISNULL(INCOTERMS_LOCATION,'')	AS	INCOTERMS_LOCATION,ISNULL(CONVERT(VARCHAR,NET_VALUE),'')	AS	NET_VALUE,ISNULL(PARENTQUOTE_ID,'')	AS	PARENTQUOTE_ID,ISNULL(CONVERT(VARCHAR,PAYMENTTERM_DAYS),'')	AS	PAYMENTTERM_DAYS,ISNULL(PAYMENTTERM_ID,'')	AS	PAYMENTTERM_ID,ISNULL(PRICELIST_ID,'')	AS	PRICELIST_ID,''	AS	QUOTE_APPROVE_DATE,'' AS	QUOTE_CREATED_DATE,ISNULL(QUOTE_CURRENCY,'')	AS	QUOTE_CURRENCY,ISNULL(CONVERT(VARCHAR(11),QUOTE_EXPIRE_DATE,101),'')	AS	QUOTE_EXPIRE_DATE,ISNULL(QUOTE_ID,'')	AS	QUOTE_ID,ISNULL(QUOTE_LEVEL,'')	AS	QUOTE_LEVEL,ISNULL(QUOTE_NAME,'')	AS	QUOTE_NAME,ISNULL(QUOTE_STATUS,'')	AS	QUOTE_STATUS,ISNULL(QUOTE_TYPE,'')	AS	QUOTE_TYPE,ISNULL(REASONFOR_REJECTION,'')	AS	REASONFOR_REJECTION,ISNULL(SALE_TYPE,'')	AS	SALE_TYPE,ISNULL(SOURCE_CONTRACT_ID,'')	AS	SOURCE_CONTRACT_ID,"+str(timestamp_sessionid)+" as SESSION_ID FROM SAQTMT (NOLOCK)  WHERE QUOTE_ID = '"+str(Qt_ID)+"' ) t 	) A FOR XML PATH ('')  ), 1, 1, '')+']','amp;#','#') AS RESULT "
		)
	#SAQTSO
	SAQTSO_QUERY = SqlHelper.GetFirst(
			"SELECT replace ('\"SAQTSO\": ['+STUFF((SELECT ','+ JSON FROM (SELECT DISTINCT '{\"ACCOUNT_ID\" : \"'+ACCOUNT_ID+'\",\"ACCOUNT_PRICING_PROCEDURE\" : \"'+ACCOUNT_PRICING_PROCEDURE+'\",\"ACCTAXCAT_ID\" : \"'+ACCTAXCAT_ID+'\",\"ACCTAXCLA_ID\" : \"'+ACCTAXCLA_ID+'\",\"COUNTRY\" : \"'+COUNTRY+'\",\"DISTRIBUTIONCHANNEL_ID\" : \"'+DISTRIBUTIONCHANNEL_ID+'\",\"DIVISION_ID\" : \"'+DIVISION_ID+'\",\"DOCUMENT_PRICING_PROCEDURE\" : \"'+DOCUMENT_PRICING_PROCEDURE+'\",\"EXCHANGE_RATE\" : \"'+EXCHANGE_RATE+'\"		,\"EXCHANGE_RATE_DATE\" : \"'+EXCHANGE_RATE_DATE+'\",\"EXCHANGE_RATE_TYPE\" : \"'+EXCHANGE_RATE_TYPE+'\",\"GLOBAL_CURRENCY\" : \"'+GLOBAL_CURRENCY+'\",\"PRICINGPROCEDURE_ID\" : \"'+PRICINGPROCEDURE_ID+'\",\"QUOTE_CURRENCY\" : \"'+QUOTE_CURRENCY+'\",\"QUOTE_ID\" : \"'+QUOTE_ID+'\",\"REGION\" : \"'+REGION+'\",\"SALESOFFICE_ID\" : \"'+SALESOFFICE_ID+'\",\"SORG_CURRENCY\" : \"'+SORG_CURRENCY+'\",\"SALESORG_ID\" : \"'+SALESORG_ID+'\",\"SESSION_ID\" : \"'+SESSION_ID+'\"}' AS JSON from (SELECT DISTINCT  ISNULL(ACCOUNT_ID,'')	AS	ACCOUNT_ID,''	AS	ACCOUNT_PRICING_PROCEDURE,ISNULL(ACCTAXCAT_ID,'')	AS	ACCTAXCAT_ID,ISNULL(ACCTAXCLA_ID,'')	AS	ACCTAXCLA_ID,ISNULL(COUNTRY,'')	AS	COUNTRY,ISNULL(DISTRIBUTIONCHANNEL_ID,'')	AS	DISTRIBUTIONCHANNEL_ID,ISNULL(DIVISION_ID,'')	AS	DIVISION_ID,ISNULL(DOCUMENT_PRICING_PROCEDURE,'')	AS	DOCUMENT_PRICING_PROCEDURE,ISNULL(CONVERT(VARCHAR,EXCHANGE_RATE),'')  AS	EXCHANGE_RATE,ISNULL(CONVERT(VARCHAR(11),EXCHANGE_RATE_DATE,101),'')	AS	EXCHANGE_RATE_DATE,ISNULL(EXCHANGE_RATE_TYPE,'')	AS	EXCHANGE_RATE_TYPE,ISNULL(GLOBAL_CURRENCY,'')	AS	GLOBAL_CURRENCY,ISNULL(PRICINGPROCEDURE_ID,'')	AS	PRICINGPROCEDURE_ID,ISNULL(QUOTE_CURRENCY,'')	AS	QUOTE_CURRENCY,ISNULL(QUOTE_ID,'')	AS	QUOTE_ID,ISNULL(REGION,'')	AS	REGION,ISNULL(SALESOFFICE_ID,'')	AS	SALESOFFICE_ID,ISNULL(DOC_CURRENCY,'') AS	SORG_CURRENCY,ISNULL(SALESORG_ID,'')	AS	SALESORG_ID,"+str(timestamp_sessionid)+" as SESSION_ID FROM SAQTSO(NOLOCK)  WHERE QUOTE_ID = '"+str(Qt_ID)+"' ) t 	) A FOR XML PATH ('')  ), 1, 1, '')+']','amp;#','#') AS RESULT "
		)
		
	#SAQTIP
	SAQTIP_QUERY = SqlHelper.GetFirst(
			"SELECT replace ('\"SAQTIP\": ['+STUFF((SELECT ','+ JSON FROM (SELECT DISTINCT '{\"ADDRESS\" : \"'+ADDRESS+'\",\"EMAIL\" : \"'+EMAIL+'\",\"IS_MAIN\" : \"'+IS_MAIN+'\",\"PARTY_ID\" : \"'+PARTY_ID+'\",\"PARTY_NAME\" : \"'+PARTY_NAME+'\",\"PARTY_ROLE\" : \"'+PARTY_ROLE+'\",\"PHONE\" : \"'+PHONE+'\",\"QUOTE_ID\" : \"'+QUOTE_ID+'\",\"SALESORG_ID\" : \"'+SALESORG_ID+'\",\"SESSION_ID\" : \"'+SESSION_ID+'\"}' AS JSON from (SELECT DISTINCT  ISNULL(ADDRESS,'')	AS	ADDRESS,ISNULL(EMAIL,'') AS	EMAIL,ISNULL(CONVERT(VARCHAR,IS_MAIN),'')	AS	IS_MAIN,ISNULL(PARTY_ID,'')	AS	PARTY_ID,ISNULL(PARTY_NAME,'')	AS	PARTY_NAME,ISNULL(PARTY_ROLE,'')	AS	PARTY_ROLE,ISNULL(PHONE,'')	AS	PHONE,ISNULL(QUOTE_ID,'')	AS	QUOTE_ID,ISNULL(SALESORG_ID,'')  AS	SALESORG_ID,"+str(timestamp_sessionid)+" as SESSION_ID FROM SAQTIP(NOLOCK) WHERE QUOTE_ID = '"+str(Qt_ID)+"' ) t ) A FOR XML PATH ('')  ), 1, 1, '')+']','amp;#','#') AS RESULT "
		)

	#SAQTBP
	SAQTBP_QUERY = SqlHelper.GetFirst("SELECT replace ('\"SAQTBP\": ['+STUFF((SELECT ','+ JSON FROM (SELECT DISTINCT '{\"BILLING_DAY\" : \"'+BILLING_DAY+'\",\"BILLING_END_DATE\" : \"'+BILLING_END_DATE+'\",\"BILLING_INTERVAL\" : \"'+BILLING_INTERVAL+'\",\"BILLING_NOTES\" : \"'+BILLING_NOTES+'\",\"BILLING_START_DATE\" : \"'+BILLING_START_DATE+'\",\"BOOKING_METHOD\" : \"'+BOOKING_METHOD+'\",\"IS_CHANGED\" : \"'+IS_CHANGED+'\",\"PO_DATE\" : \"'+PO_DATE+'\",\"PO_NUMBER\" : \"'+PO_NUMBER+'\",\"QUOTE_ID\" : \"'+QUOTE_ID+'\",\"SALESORG_ID\" : \"'+SALESORG_ID+'\",\"SERVICE_AGREEMENT_NUMBER\" : \"'+SERVICE_AGREEMENT_NUMBER+'\"	,\"SESSION_ID\" : \"'+SESSION_ID+'\" }' AS JSON from (SELECT DISTINCT ISNULL(CONVERT(VARCHAR,BILLING_DAY),'') AS	BILLING_DAY,ISNULL(CONVERT(VARCHAR(11),BILLING_END_DATE,101),'') AS	BILLING_END_DATE,ISNULL(BILLING_INTERVAL,'') AS	BILLING_INTERVAL,ISNULL(BILLING_NOTES,'') AS BILLING_NOTES,ISNULL(CONVERT(VARCHAR(11),BILLING_START_DATE,101),'') AS	BILLING_START_DATE,ISNULL(BOOKING_METHOD,'') AS	BOOKING_METHOD,ISNULL(CONVERT(VARCHAR,IS_CHANGED),'') AS IS_CHANGED,ISNULL(CONVERT(VARCHAR(11),PO_DATE,101),'') AS PO_DATE,ISNULL(PO_NUMBER,'')  AS	PO_NUMBER ,ISNULL(QUOTE_ID,'') AS	QUOTE_ID,ISNULL(SALESORG_ID,'')  AS	SALESORG_ID,ISNULL(SERVICE_AGREEMENT_NUMBER,'')  AS	SERVICE_AGREEMENT_NUMBER ,"+str(timestamp_sessionid)+" as SESSION_ID FROM SAQTBP(NOLOCK)  WHERE QUOTE_ID = '"+str(Qt_ID)+"' ) t	) A FOR XML PATH ('')  ), 1, 1, '')+']','amp;#','#') AS RESULT ")

	#SAQDOC
	SAQDOC_QUERY = SqlHelper.GetFirst(
			"SELECT replace ('\"SAQDOC\": ['+STUFF((SELECT ','+ JSON FROM (SELECT DISTINCT '{\"DOCUMENT_ID\" : \"'+DOCUMENT_ID+'\",\"DOCUMENT_NAME\" : \"'+DOCUMENT_NAME+'\",\"DOCUMENT_PATH\" : \"'+DOCUMENT_PATH+'\",\"LANGUAGE_ID\" : \"'+LANGUAGE_ID+'\",\"QUOTE_ID\" : \"'+QUOTE_ID+'\",\"STATUS\" : \"'+STATUS+'\",\"SESSION_ID\" : \"'+SESSION_ID+'\"}' AS JSON from (SELECT DISTINCT  ISNULL(DOCUMENT_ID,'') AS	DOCUMENT_ID,ISNULL(DOCUMENT_NAME,'') AS	DOCUMENT_NAME,ISNULL(DOCUMENT_PATH,'') AS DOCUMENT_PATH,ISNULL(LANGUAGE_ID,'')	AS	LANGUAGE_ID,ISNULL(QUOTE_ID,'')	AS	QUOTE_ID,ISNULL(STATUS,'')	AS	STATUS,"+str(timestamp_sessionid)+" as SESSION_ID FROM SAQDOC(NOLOCK)  WHERE QUOTE_ID = '"+str(Qt_ID)+"' ) t 	) A FOR XML PATH ('')  ), 1, 1, '')+']','amp;#','#') AS RESULT "
		)
		
	#SAQITM
	SAQITM_QUERY = SqlHelper.GetFirst(
			"SELECT replace ('\"SAQITM\": ['+STUFF((SELECT ','+ JSON FROM (SELECT DISTINCT '{\"BD_PRICE\" : \"'+BD_PRICE+'\",\"BD_PRICE_MARGIN\" : \"'+BD_PRICE_MARGIN+'\",\"CEILING_PRICE\" : \"'+CEILING_PRICE+'\",\"CEILING_PRICE_MARGIN\" : \"'+CEILING_PRICE_MARGIN+'\",\"CONDITION_TYPE\" : \"'+CONDITION_TYPE+'\",\"CURRENCY\" : \"'+CURRENCY+'\",\"DELIVERY_PRIORITY\" : \"'+DELIVERY_PRIORITY+'\",\"DISCOUNT\" : \"'+DISCOUNT+'\",\"DIVISION_ID\" : \"'+DIVISION_ID+'\",\"EXTENDED_PRICE\" : \"'+EXTENDED_PRICE+'\",\"GLOBAL_CURRENCY\" : \"'+GLOBAL_CURRENCY+'\",\"INTERNAL_NOTES\" : \"'+INTERNAL_NOTES+'\",\"ITEMCATEGORY_ID\" : \"'+ITEMCATEGORY_ID+'\",\"ITEM_NOTES\" : \"'+ITEM_NOTES+'\",\"ITEM_STATUS\" : \"'+ITEM_STATUS+'\",\"ITEM_TYPE\" : \"'+ITEM_TYPE+'\",\"LINE_ITEM_FROM_DATE\" : \"'+LINE_ITEM_FROM_DATE+'\",\"LINE_ITEM_ID\" : \"'+LINE_ITEM_ID+'\",\"LINE_ITEM_TO_DATE\" : \"'+LINE_ITEM_TO_DATE+'\",\"MATERIALGROUP_ID\" : \"'+MATERIALGROUP_ID+'\",\"MATPRIGRP_ID\" : \"'+MATPRIGRP_ID+'\",\"MAX_DELIVER_QTY\" : \"'+MAX_DELIVER_QTY+'\",\"OBJECT_QUANTITY\" : \"'+OBJECT_QUANTITY+'\",\"ONSITE_PURCHASE_COMMIT\" : \"'+ONSITE_PURCHASE_COMMIT+'\",\"PARQTEITM_LINE\" : \"'+PARQTEITM_LINE+'\",\"PLANT_ID\" : \"'+PLANT_ID+'\",\"PRICELIST_ID\" : \"'+PRICELIST_ID+'\",\"PRICINGPROCEDURE_ID\" : \"'+PRICINGPROCEDURE_ID+'\",\"PRICING_STATUS\" : \"'+PRICING_STATUS+'\",\"PO_ITEM\" : \"'+PO_ITEM+'\",\"PO_NOTES\" : \"'+PO_NOTES+'\",\"PO_NUMBER\" : \"'+PO_NUMBER+'\",\"QUANTITY\" : \"'+QUANTITY+'\",\"QUOTE_CURRENCY\" : \"'+QUOTE_CURRENCY+'\",\"QUOTE_ID\" : \"'+QUOTE_ID+'\",\"REASON_FOR_REJECTION\" : \"'+REASON_FOR_REJECTION+'\",\"RELEASED_QUANTITY\" : \"'+RELEASED_QUANTITY+'\",\"REMAINING_QUANTITY\" : \"'+REMAINING_QUANTITY+'\",\"SALES_DISCOUNT_PRICE\" : \"'+SALES_DISCOUNT_PRICE+'\",\"SALES_DISCOUNT_PRICE_MARGIN\" : \"'+SALES_DISCOUNT_PRICE_MARGIN+'\",\"SORG_CURRENCY\" : \"'+SORG_CURRENCY+'\",\"SALESORG_ID\" : \"'+SALESORG_ID+'\",\"SALES_PRICE\" : \"'+SALES_PRICE+'\",\"SERVICE_ID\" : \"'+SERVICE_ID+'\",\"SRVTAXCAT_ID\" : \"'+SRVTAXCAT_ID+'\",\"SRVTAXCLA_ID\" : \"'+SRVTAXCLA_ID+'\",\"TARGET_PRICE\" : \"'+TARGET_PRICE+'\",\"TARGET_PRICE_MARGIN\" : \"'+TARGET_PRICE_MARGIN+'\",\"TAX\" : \"'+TAX+'\",\"TAX_PERCENTAGE\" : \"'+TAX_PERCENTAGE+'\",\"TOTAL_COST\" : \"'+TOTAL_COST+'\",\"UOM_ID\" : \"'+UOM_ID+'\",\"YEAR_1\" : \"'+YEAR_1+'\",\"YEAR_2\" : \"'+YEAR_2+'\",\"YEAR_3\" : \"'+YEAR_3+'\",\"YEAR_4\" : \"'+YEAR_4+'\",\"YEAR_5\" : \"'+YEAR_5+'\",\"YEAR_OVER_YEAR\" : \"'+YEAR_OVER_YEAR+'\",\"SESSION_ID\" : \"'+SESSION_ID+'\" }' AS JSON from (SELECT DISTINCT  ISNULL(CONVERT(VARCHAR,BD_PRICE),'')	AS	BD_PRICE,ISNULL(CONVERT(VARCHAR,BD_PRICE_MARGIN),'')	AS	BD_PRICE_MARGIN,ISNULL(CONVERT(VARCHAR,CEILING_PRICE),'')	AS	CEILING_PRICE,ISNULL(CONVERT(VARCHAR,CEILING_PRICE_MARGIN),'') AS CEILING_PRICE_MARGIN,ISNULL(CONDITION_TYPE,'') AS	CONDITION_TYPE,ISNULL(CURRENCY,'') AS CURRENCY,ISNULL(DELIVERY_PRIORITY,'')	AS	DELIVERY_PRIORITY,ISNULL(CONVERT(VARCHAR,DISCOUNT),'') AS DISCOUNT,ISNULL(DIVISION_ID,'') AS DIVISION_ID,ISNULL(CONVERT(VARCHAR,EXTENDED_PRICE),'')	AS EXTENDED_PRICE,ISNULL(GLOBAL_CURRENCY,'') AS	GLOBAL_CURRENCY,ISNULL(INTERNAL_NOTES,'') AS INTERNAL_NOTES,ISNULL(ITEMCATEGORY_ID,'') AS ITEMCATEGORY_ID,ISNULL(ITEM_NOTES,'')	AS	ITEM_NOTES,ISNULL(ITEM_STATUS,'') AS ITEM_STATUS,ISNULL(ITEM_TYPE,'') AS ITEM_TYPE,ISNULL(CONVERT(VARCHAR(11),LINE_ITEM_FROM_DATE,101),'') AS LINE_ITEM_FROM_DATE,ISNULL(LINE_ITEM_ID,'') AS	LINE_ITEM_ID,ISNULL(CONVERT(VARCHAR(11),LINE_ITEM_TO_DATE,101),'')	AS	LINE_ITEM_TO_DATE,ISNULL(MATERIALGROUP_ID,'')	AS	MATERIALGROUP_ID,ISNULL(MATPRIGRP_ID,'') AS	MATPRIGRP_ID,ISNULL(CONVERT(VARCHAR,MAX_DELIVER_QTY),'') AS	MAX_DELIVER_QTY,ISNULL(CONVERT(VARCHAR,OBJECT_QUANTITY),'')	AS	OBJECT_QUANTITY,ISNULL(ONSITE_PURCHASE_COMMIT,'') AS	ONSITE_PURCHASE_COMMIT,ISNULL(PARQTEITM_LINE,'') AS	PARQTEITM_LINE,ISNULL(PLANT_ID,'') AS PLANT_ID,ISNULL(PRICELIST_ID,'')	AS	PRICELIST_ID,ISNULL(PRICINGPROCEDURE_ID,'')	AS	PRICINGPROCEDURE_ID,ISNULL(PRICING_STATUS,'')	AS	PRICING_STATUS,ISNULL(PO_ITEM,'') AS PO_ITEM,ISNULL(PO_NOTES,'') AS	PO_NOTES,ISNULL(PO_NUMBER,'') AS PO_NUMBER,ISNULL(CONVERT(VARCHAR,QUANTITY),'')	AS	QUANTITY,ISNULL(QUOTE_CURRENCY,'') AS QUOTE_CURRENCY,ISNULL(QUOTE_ID,'') AS QUOTE_ID,ISNULL(REASON_FOR_REJECTION,'') AS REASON_FOR_REJECTION,ISNULL(CONVERT(VARCHAR,RELEASED_QUANTITY),'') AS	RELEASED_QUANTITY,ISNULL(CONVERT(VARCHAR,REMAINING_QUANTITY),'') AS REMAINING_QUANTITY,ISNULL(CONVERT(VARCHAR,SALES_DISCOUNT_PRICE),'') AS SALES_DISCOUNT_PRICE,ISNULL(CONVERT(VARCHAR,SALES_DISCOUNT_PRICE_MARGIN),'')	AS SALES_DISCOUNT_PRICE_MARGIN,ISNULL(DOC_CURRENCY,'') AS SORG_CURRENCY,ISNULL(SALESORG_ID,'') AS SALESORG_ID,ISNULL(CONVERT(VARCHAR,SALES_PRICE),'') AS SALES_PRICE,ISNULL(SERVICE_ID,'') AS	SERVICE_ID,ISNULL(SRVTAXCAT_ID,'') AS SRVTAXCAT_ID,ISNULL(SRVTAXCLA_ID,'') AS SRVTAXCLA_ID,ISNULL(CONVERT(VARCHAR,TARGET_PRICE),'') AS	TARGET_PRICE,ISNULL(CONVERT(VARCHAR,TARGET_PRICE_MARGIN),'') AS	TARGET_PRICE_MARGIN,ISNULL(CONVERT(VARCHAR,TAX),'')	AS TAX,ISNULL(CONVERT(VARCHAR,TAX_PERCENTAGE),'') AS	TAX_PERCENTAGE,ISNULL(CONVERT(VARCHAR,TOTAL_COST),'') AS	TOTAL_COST,ISNULL(UOM_ID,'') AS UOM_ID,ISNULL(CONVERT(VARCHAR,YEAR_1),'') AS YEAR_1,ISNULL(CONVERT(VARCHAR,YEAR_2),'') AS YEAR_2,ISNULL(CONVERT(VARCHAR,YEAR_3),'') AS YEAR_3,ISNULL(CONVERT(VARCHAR,YEAR_4),'') AS YEAR_4,ISNULL(CONVERT(VARCHAR,YEAR_5),'') AS YEAR_5,ISNULL(CONVERT(VARCHAR,YEAR_OVER_YEAR),'') AS YEAR_OVER_YEAR,"+str(timestamp_sessionid)+" as SESSION_ID FROM SAQITM(NOLOCK)  WHERE QUOTE_ID = '"+str(Qt_ID)+"' ) t 	) A FOR XML PATH ('')  ), 1, 1, '')+']','amp;#','#') AS RESULT "
		)
		

	#SAQICO
	SAQICO_QUERY = SqlHelper.GetFirst(	"SELECT replace ('\"SAQICO\": ['+STUFF((SELECT ','+ JSON FROM (SELECT DISTINCT '{\"ANNUAL_BENCHMARK_BOOKING_PRICE\" : \"'+ANNUAL_BENCHMARK_BOOKING_PRICE+'\",\"BASE_PRICE\" : \"'+BASE_PRICE+'\",\"BASE_PRICE_MARGIN\" : \"'+BASE_PRICE_MARGIN+'\",\"BD_DISCOUNT\" : \"'+BD_DISCOUNT+'\",\"BD_PRICE\" : \"'+BD_PRICE+'\",\"BD_PRICE_MARGIN\" : \"'+BD_PRICE_MARGIN+'\",\"BENCHMARKING_THRESHOLD\" : \"'+BENCHMARKING_THRESHOLD+'\",\"CEILING_PRICE\" : \"'+CEILING_PRICE+'\",\"CEILING_PRICE_MARGIN\" : \"'+CEILING_PRICE_MARGIN+'\",\"CHAMBER_PM_HRS\" : \"'+CHAMBER_PM_HRS+'\",\"CLEANING_COST\" : \"'+CLEANING_COST+'\",\"CONSUMABLE_COST\" : \"'+CONSUMABLE_COST+'\",\"CONTRACT_ID\" : \"'+CONTRACT_ID+'\",\"CONTRACT_VALID_FROM\" : \"'+CONTRACT_VALID_FROM+'\",\"CONTRACT_VALID_TO\" : \"'+CONTRACT_VALID_TO+'\",\"CM_PART_COST\" : \"'+CM_PART_COST+'\",\"COST_CALCULATION_STATUS\" : \"'+COST_CALCULATION_STATUS+'\",\"CUSTOMER_TOOL_ID\" : \"'+CUSTOMER_TOOL_ID+'\",\"DISCOUNT\" : \"'+DISCOUNT+'\",\"ENTITLEMENT_COST_IMPACT\" : \"'+ENTITLEMENT_COST_IMPACT+'\",\"ENTITLEMENT_PRICE_IMPACT\" : \"'+ENTITLEMENT_PRICE_IMPACT+'\",\"EQUIPMENTCATEGORY_ID\" : \"'+EQUIPMENTCATEGORY_ID+'\",\"EQUIPMENT_ID\" : \"'+EQUIPMENT_ID+'\",\"EQUIPMENT_LINE_ID\" : \"'+EQUIPMENT_LINE_ID+'\",\"EQUIPMENT_QUANTITY\" : \"'+EQUIPMENT_QUANTITY+'\",\"EQUIPMENT_STATUS\" : \"'+EQUIPMENT_STATUS+'\",\"EXCHANGE_RATE\" : \"'+EXCHANGE_RATE+'\",\"EXCHANGE_RATE_DATE\" : \"'+EXCHANGE_RATE_DATE+'\",\"EXTENDED_PRICE\" : \"'+EXTENDED_PRICE+'\",\"FABLOCATION_ID\" : \"'+FABLOCATION_ID+'\",\"FAB_VALUEDRIVER_COEFFICIENT\" : \"'+FAB_VALUEDRIVER_COEFFICIENT+'\",\"GLOBAL_CURRENCY\" : \"'+GLOBAL_CURRENCY+'\",\"GREATER_THAN_QTLY_HRS\" : \"'+GREATER_THAN_QTLY_HRS+'\",\"GREENBOOK\" : \"'+GREENBOOK+'\",\"KPI_COST\" : \"'+KPI_COST+'\",\"LABOR_COST\" : \"'+LABOR_COST+'\",\"LABOR_HOURS\" : \"'+LABOR_HOURS+'\",\"LABOR_RATE\" : \"'+LABOR_RATE+'\",\"LESS_THAN_QTLY_HRS\" : \"'+LESS_THAN_QTLY_HRS+'\",\"LINE\" : \"'+LINE+'\",\"LINE_ITEM_ID\" : \"'+LINE_ITEM_ID+'\",\"LIST_PRICE\" : \"'+LIST_PRICE+'\",\"LIST_PRICE_MARGIN\" : \"'+LIST_PRICE_MARGIN+'\",\"MNT_PLANT_ID\" : \"'+MNT_PLANT_ID+'\",\"MONTHLY_PM_HRS\" : \"'+MONTHLY_PM_HRS+'\",\"PLATFORM\" : \"'+PLATFORM+'\",\"PM_COST\" : \"'+PM_COST+'\",\"PM_PART_COST\" : \"'+PM_PART_COST+'\",\"PM_TECH_LABOR_RATE\" : \"'+PM_TECH_LABOR_RATE+'\",\"PRICE_BENCHMARK_TYPE\" : \"'+PRICE_BENCHMARK_TYPE+'\",\"PBG\" : \"'+PBG+'\",\"QUOTE_CURRENCY\" : \"'+QUOTE_CURRENCY+'\" ,\"QUOTE_ID\" : \"'+QUOTE_ID+'\",\"SALES_DISCOUNT\" : \"'+SALES_DISCOUNT+'\",\"SALES_DISCOUNT_PRICE\" : \"'+SALES_DISCOUNT_PRICE+'\",\"SORG_CURRENCY\" : \"'+SORG_CURRENCY+'\",\"SALESORG_ID\" : \"'+SALESORG_ID+'\",\"SALES_PRICE\" : \"'+SALES_PRICE+'\" ,\"SALES_PRICE_MARGIN\" : \"'+SALES_PRICE_MARGIN+'\",\"SAP_PART_NUMBER\" : \"'+SAP_PART_NUMBER+'\",\"SERIAL_NO\" : \"'+SERIAL_NO+'\",\"SERVICE_ID\" : \"'+SERVICE_ID+'\",\"SRVTAXCAT_ID\" : \"'+SRVTAXCAT_ID+'\",\"SRVTAXCLA_ID\" : \"'+SRVTAXCLA_ID+'\" ,\"SRCACC_ID\" : \"'+SRCACC_ID+'\",\"SRCFBL_ID\" : \"'+SRCFBL_ID+'\",\"STATUS\" : \"'+STATUS+'\",\"SUBSTRACT_SIZE\" : \"'+SUBSTRACT_SIZE+'\",\"TARGET_PRICE\" : \"'+TARGET_PRICE+'\",\"TARGET_PRICE_MARGIN\" : \"'+TARGET_PRICE_MARGIN+'\" ,\"TAX\" : \"'+TAX+'\",\"TAX_PERCENTAGE\" : \"'+TAX_PERCENTAGE+'\",\"TECHNOLOGY\" : \"'+TECHNOLOGY+'\",\"TOOL_COMPLETION_FLAG\" : \"'+TOOL_COMPLETION_FLAG+'\",\"TOOL_CONFIGURATION\" : \"'+TOOL_CONFIGURATION+'\",\"TOOL_VALUEDRIVER_COEFFICIENT\" : \"'+TOOL_VALUEDRIVER_COEFFICIENT+'\" ,\"TOTAL_COST\" : \"'+TOTAL_COST+'\",\"WARRANTY_END_DATE\" : \"'+WARRANTY_END_DATE+'\",\"WARRANTY_START_DATE\" : \"'+WARRANTY_START_DATE+'\",\"WET_CLEAN_COST\" : \"'+WET_CLEAN_COST+'\" ,\"YEAR_1\" : \"'+YEAR_1+'\",\"YEAR_2\" : \"'+YEAR_2+'\",\"YEAR_3\" : \"'+YEAR_3+'\",\"YEAR_4\" : \"'+YEAR_4+'\",\"YEAR_5\" : \"'+YEAR_5+'\",\"YEAR_OVER_YEAR\" : \"'+YEAR_OVER_YEAR+'\",\"SESSION_ID\" : \"'+SESSION_ID+'\" }' AS JSON from (SELECT DISTINCT  ISNULL(CONVERT(VARCHAR,ANNUAL_BENCHMARK_BOOKING_PRICE),'')	AS	ANNUAL_BENCHMARK_BOOKING_PRICE,ISNULL(CONVERT(VARCHAR,BASE_PRICE),'')	AS	BASE_PRICE,ISNULL(CONVERT(VARCHAR,BASE_PRICE_MARGIN),'') AS	BASE_PRICE_MARGIN,ISNULL(CONVERT(VARCHAR,BD_DISCOUNT),'') AS BD_DISCOUNT,ISNULL(CONVERT(VARCHAR,BD_PRICE),'') AS	BD_PRICE,ISNULL(CONVERT(VARCHAR,BD_PRICE_MARGIN),'') AS BD_PRICE_MARGIN,ISNULL(CONVERT(VARCHAR,BENCHMARKING_THRESHOLD),'')	AS	BENCHMARKING_THRESHOLD,ISNULL(CONVERT(VARCHAR,CEILING_PRICE),'') AS CEILING_PRICE,ISNULL(CONVERT(VARCHAR,CEILING_PRICE_MARGIN),'') AS CEILING_PRICE_MARGIN,ISNULL(CONVERT(VARCHAR,CHAMBER_PM_HRS),'')	AS CHAMBER_PM_HRS,ISNULL(CONVERT(VARCHAR,CLEANING_COST),'') AS	CLEANING_COST,ISNULL(CONVERT(VARCHAR,CONSUMABLE_COST),'') AS CONSUMABLE_COST,ISNULL(CONTRACT_ID,'') AS CONTRACT_ID,ISNULL(CONVERT(VARCHAR(11),CONTRACT_VALID_FROM,101),'') AS CONTRACT_VALID_FROM,ISNULL(CONVERT(VARCHAR(11),CONTRACT_VALID_TO,101),'') AS CONTRACT_VALID_TO,ISNULL(CONVERT(VARCHAR,CM_PART_COST),'') AS CM_PART_COST,ISNULL(COST_CALCULATION_STATUS,'') AS COST_CALCULATION_STATUS,ISNULL(CUSTOMER_TOOL_ID,'') AS	CUSTOMER_TOOL_ID,ISNULL(CONVERT(VARCHAR,DISCOUNT),'')	AS	DISCOUNT,ISNULL(CONVERT(VARCHAR,ENTITLEMENT_COST_IMPACT),'') AS	ENTITLEMENT_COST_IMPACT,ISNULL(CONVERT(VARCHAR,ENTITLEMENT_PRICE_IMPACT),'') AS	ENTITLEMENT_PRICE_IMPACT,ISNULL(EQUIPMENTCATEGORY_ID,'') AS	EQUIPMENTCATEGORY_ID,ISNULL(EQUIPMENT_ID,'') AS	EQUIPMENT_ID,ISNULL(CONVERT(VARCHAR,EQUIPMENT_LINE_ID),'') AS EQUIPMENT_LINE_ID,ISNULL(CONVERT(VARCHAR,EQUIPMENT_QUANTITY),'') AS	EQUIPMENT_QUANTITY,ISNULL(EQUIPMENT_STATUS,'') AS EQUIPMENT_STATUS,ISNULL(CONVERT(VARCHAR,EXCHANGE_RATE),'') AS	EXCHANGE_RATE,ISNULL(CONVERT(VARCHAR(11),EXCHANGE_RATE_DATE,101),'') AS	EXCHANGE_RATE_DATE,ISNULL(CONVERT(VARCHAR,EXTENDED_PRICE),'') AS EXTENDED_PRICE,ISNULL(FABLOCATION_ID,'') AS FABLOCATION_ID,ISNULL(CONVERT(VARCHAR,FAB_VALUEDRIVER_COEFFICIENT),'') AS	FAB_VALUEDRIVER_COEFFICIENT,ISNULL(GLOBAL_CURRENCY,'') AS GLOBAL_CURRENCY,ISNULL(CONVERT(VARCHAR,GREATER_THAN_QTLY_HRS),'')	AS	GREATER_THAN_QTLY_HRS,ISNULL(GREENBOOK,'') AS GREENBOOK,ISNULL(CONVERT(VARCHAR,KPI_COST),'') AS KPI_COST,ISNULL(CONVERT(VARCHAR,LABOR_COST),'') AS LABOR_COST,ISNULL(CONVERT(VARCHAR,LABOR_HOURS),'') AS	LABOR_HOURS,ISNULL(CONVERT(VARCHAR,LABOR_RATE),'') AS LABOR_RATE,ISNULL(CONVERT(VARCHAR,LESS_THAN_QTLY_HRS),'') AS LESS_THAN_QTLY_HRS,ISNULL(LINE,'') AS LINE,ISNULL(LINE_ITEM_ID,'') AS LINE_ITEM_ID,ISNULL(CONVERT(VARCHAR,LIST_PRICE),'') AS LIST_PRICE,ISNULL(CONVERT(VARCHAR,LIST_PRICE_MARGIN),'') AS LIST_PRICE_MARGIN,ISNULL(MNT_PLANT_ID,'') AS	MNT_PLANT_ID,ISNULL(CONVERT(VARCHAR,MONTHLY_PM_HRS),'') AS MONTHLY_PM_HRS,ISNULL(PLATFORM,'') AS PLATFORM,ISNULL(CONVERT(VARCHAR,PM_COST),'') AS PM_COST,ISNULL(CONVERT(VARCHAR,PM_PART_COST),'') AS	PM_PART_COST,ISNULL(CONVERT(VARCHAR,PM_TECH_LABOR_RATE),'')	AS PM_TECH_LABOR_RATE,ISNULL(PRICE_BENCHMARK_TYPE,'') AS	PRICE_BENCHMARK_TYPE,ISNULL(PBG,'') AS	PBG,ISNULL(QUOTE_CURRENCY,'') AS QUOTE_CURRENCY ,ISNULL(QUOTE_ID,'') AS QUOTE_ID,ISNULL(CONVERT(VARCHAR,SALES_DISCOUNT),'') AS SALES_DISCOUNT,ISNULL(CONVERT(VARCHAR,SALES_DISCOUNT_PRICE),'') AS SALES_DISCOUNT_PRICE,ISNULL(DOC_CURRENCY,'') AS	SORG_CURRENCY,ISNULL(SALESORG_ID,'') AS SALESORG_ID,ISNULL(CONVERT(VARCHAR,SALES_PRICE),'') AS SALES_PRICE,ISNULL(CONVERT(VARCHAR,SALES_PRICE_MARGIN),'') AS SALES_PRICE_MARGIN,ISNULL(SAP_PART_NUMBER,'') AS	SAP_PART_NUMBER,ISNULL(SERIAL_NO,'') AS SERIAL_NO,ISNULL(SERVICE_ID,'') AS	SERVICE_ID,ISNULL(SRVTAXCAT_ID,'') AS	SRVTAXCAT_ID,ISNULL(SRVTAXCLA_ID,'') AS SRVTAXCLA_ID ,ISNULL(SRCACC_ID,'') AS SRCACC_ID,ISNULL(SRCFBL_ID,'') AS SRCFBL_ID,'' AS STATUS,ISNULL(SUBSTRACT_SIZE,'') AS	SUBSTRACT_SIZE,ISNULL(CONVERT(VARCHAR,TARGET_PRICE),'') AS TARGET_PRICE,ISNULL(CONVERT(VARCHAR,TARGET_PRICE_MARGIN),'') AS TARGET_PRICE_MARGIN,ISNULL(CONVERT(VARCHAR,TAX),'') AS TAX,ISNULL(CONVERT(VARCHAR,TAX_PERCENTAGE),'') AS	TAX_PERCENTAGE,ISNULL(TECHNOLOGY,'') AS TECHNOLOGY,ISNULL(CONVERT(VARCHAR,TOOL_COMPLETION_FLAG),'') AS	TOOL_COMPLETION_FLAG,ISNULL(TOOL_CONFIGURATION,'') AS TOOL_CONFIGURATION,ISNULL(CONVERT(VARCHAR,TOOL_VALUEDRIVER_COEFFICIENT),'') AS TOOL_VALUEDRIVER_COEFFICIENT,ISNULL(CONVERT(VARCHAR,TOTAL_COST),'') AS TOTAL_COST,ISNULL(WARRANTY_END_DATE,'') AS	WARRANTY_END_DATE,ISNULL(WARRANTY_START_DATE,'') AS WARRANTY_START_DATE,ISNULL(CONVERT(VARCHAR,WET_CLEAN_COST),'') AS WET_CLEAN_COST ,ISNULL(CONVERT(VARCHAR,YEAR_1),'') AS YEAR_1,ISNULL(CONVERT(VARCHAR,YEAR_2),'') AS YEAR_2,ISNULL(CONVERT(VARCHAR,YEAR_3),'') AS YEAR_3,ISNULL(CONVERT(VARCHAR,YEAR_4),'') AS YEAR_4,ISNULL(CONVERT(VARCHAR,YEAR_5),'') AS YEAR_5,ISNULL(CONVERT(VARCHAR,YEAR_OVER_YEAR),'') AS YEAR_OVER_YEAR,"+str(timestamp_sessionid)+" as SESSION_ID FROM SAQICO(NOLOCK)  WHERE QUOTE_ID = '"+str(Qt_ID)+"' ) t 	) A FOR XML PATH ('')  ), 1, 1, '')+']','amp;#','#') AS RESULT ")


	#SAQICA
	SAQICA_QUERY = SqlHelper.GetFirst(
			"SELECT replace ('\"SAQICA\": ['+STUFF((SELECT ','+ JSON FROM (SELECT DISTINCT '{\"ASSEMBLY_ID\" : \"'+ASSEMBLY_ID+'\",\"ASSEMBLY_STATUS\" : \"'+ASSEMBLY_STATUS+'\",\"EQUIPMENTCATEGORY_ID\" : \"'+EQUIPMENTCATEGORY_ID+'\",\"EQUIPMENT_ID\" : \"'+EQUIPMENT_ID+'\",\"EQUIPMENT_LINE_ID\" : \"'+EQUIPMENT_LINE_ID+'\",\"EQUIPMENTTYPE_ID\" : \"'+EQUIPMENTTYPE_ID+'\",\"FABLOCATION_ID\" : \"'+FABLOCATION_ID+'\",\"GOT_CODE\" : \"'+GOT_CODE+'\",\"INCLUDED\" : \"'+INCLUDED+'\"	,\"LINE_ITEM_ID\" : \"'+LINE_ITEM_ID+'\",\"MNT_PLANT_ID\" : \"'+MNT_PLANT_ID+'\",\"PLATFORM\" : \"'+PLATFORM+'\",\"QUOTE_ID\" : \"'+QUOTE_ID+'\",\"SALESORG_ID\" : \"'+SALESORG_ID+'\",\"SERIAL_NUMBER\" : \"'+SERIAL_NUMBER+'\",\"SERVICE_ID\" : \"'+SERVICE_ID+'\",\"SESSION_ID\" : \"'+SESSION_ID+'\"}' AS JSON from (SELECT DISTINCT  ISNULL(ASSEMBLY_ID,'') AS	ASSEMBLY_ID,ISNULL(ASSEMBLY_STATUS,'') AS	ASSEMBLY_STATUS,ISNULL(EQUIPMENTCATEGORY_ID,'')	AS	EQUIPMENTCATEGORY_ID,ISNULL(EQUIPMENT_ID,'') AS	EQUIPMENT_ID,ISNULL(CONVERT(VARCHAR,EQUIPMENT_LINE_ID),'')	AS	EQUIPMENT_LINE_ID,ISNULL(EQUIPMENTTYPE_ID,'')	AS	EQUIPMENTTYPE_ID,ISNULL(FABLOCATION_ID,'')	AS	FABLOCATION_ID,ISNULL(GOT_CODE,'')	AS	GOT_CODE,ISNULL(CONVERT(VARCHAR,INCLUDED),'')  AS INCLUDED,'' AS LINE_ITEM_ID,ISNULL(MNT_PLANT_ID,'')	AS	MNT_PLANT_ID,ISNULL(PLATFORM,'') AS	PLATFORM,ISNULL(QUOTE_ID,'') AS	QUOTE_ID,ISNULL(SALESORG_ID,'')	AS	SALESORG_ID,ISNULL(SERIAL_NUMBER,'') AS SERIAL_NUMBER,ISNULL(SERVICE_ID,'')	AS	SERVICE_ID,"+str(timestamp_sessionid)+" as SESSION_ID FROM SAQICA(NOLOCK)  WHERE QUOTE_ID = '"+str(Qt_ID)+"' ) t 	) A FOR XML PATH ('')  ), 1, 1, '')+']','amp;#','#') AS RESULT "
		)

	#SAQAPP
	SAQAPP_QUERY = SqlHelper.GetFirst(
			"SELECT replace ('\"SAQAPP\": ['+STUFF((SELECT ','+ JSON FROM (SELECT DISTINCT '{\"ASSEMBLY_ID\" : \"'+ASSEMBLY_ID+'\",\"EQUIPMENT_ID\" : \"'+EQUIPMENT_ID+'\",\"EQUIPMENT_LINE_ID\" : \"'+EQUIPMENT_LINE_ID+'\",\"LINE_ITEM_ID\" : \"'+LINE_ITEM_ID+'\",\"KIT_ID\" : \"'+KIT_ID+'\",\"KIT_NAME\" : \"'+KIT_NAME+'\",\"KIT_NUMBER\" : \"'+KIT_NUMBER+'\",\"PART_NUMBER\" : \"'+PART_NUMBER+'\",\"PM_FREQUENCY\" : \"'+PM_FREQUENCY+'\",\"PM_ID\" : \"'+PM_ID+'\",\"QUANTITY\" : \"'+QUANTITY+'\",\"QUOTE_ID\" : \"'+QUOTE_ID+'\",\"TKM_FLAG\" : \"'+TKM_FLAG+'\" ,\"SESSION_ID\" : \"'+SESSION_ID+'\"}' AS JSON from (SELECT DISTINCT  ISNULL(ASSEMBLY_ID,'') AS	ASSEMBLY_ID,ISNULL(EQUIPMENT_ID,'') AS	EQUIPMENT_ID,ISNULL(CONVERT(VARCHAR,EQUIPMENT_LINE_ID),'')	AS	EQUIPMENT_LINE_ID,'' AS LINE_ITEM_ID,ISNULL(KIT_ID,'')	AS	KIT_ID,ISNULL(KIT_NAME,'') AS	KIT_NAME,ISNULL(KIT_NUMBER,'') AS	KIT_NUMBER,ISNULL(PART_NUMBER,'')	AS	PART_NUMBER,ISNULL(CONVERT(VARCHAR,PM_FREQUENCY),'') AS PM_FREQUENCY,ISNULL(PM_ID,'')	AS	PM_ID,ISNULL(CONVERT(VARCHAR,QUANTITY),'') AS QUANTITY,ISNULL(QUOTE_ID,'') AS	QUOTE_ID,'' AS TKM_FLAG,"+str(timestamp_sessionid)+" as SESSION_ID FROM SAQAPP (NOLOCK) WHERE QUOTE_ID = '"+str(Qt_ID)+"' ) t 	) A FOR XML PATH ('')  ), 1, 1, '')+']','amp;#','#') AS RESULT "
		)


	#SAQIFP
	SAQIFP_QUERY = SqlHelper.GetFirst(
			"SELECT replace ('\"SAQIFP\": ['+STUFF((SELECT ','+ JSON FROM (SELECT DISTINCT '{\"ANNUAL_QUANTITY\" : \"'+ANNUAL_QUANTITY+'\",\"BASEUOM_ID\" : \"'+BASEUOM_ID+'\",\"CUSTOMER_PART_NUMBER\" : \"'+CUSTOMER_PART_NUMBER+'\",\"DELIVERY_MODE\" : \"'+DELIVERY_MODE+'\",\"EXTENDED_PRICE\" : \"'+EXTENDED_PRICE+'\",\"LINE\" : \"'+LINE+'\",\"LINE_ITEM_ID\" : \"'+LINE_ITEM_ID+'\",\"MATPRIGRP_ID\" : \"'+MATPRIGRP_ID+'\",\"Part_Line_ID\" : \"'+Part_Line_ID+'\",\"PART_NUMBER\" : \"'+PART_NUMBER+'\",\"PRICINGPROCEDURE_ID\" : \"'+PRICINGPROCEDURE_ID+'\",\"PRICING_STATUS\" : \"'+PRICING_STATUS+'\",\"QUOTE_ID\" : \"'+QUOTE_ID+'\",\"SORG_CURRENCY\" : \"'+SORG_CURRENCY+'\",\"SALESORG_ID\" : \"'+SALESORG_ID+'\",\"SALESUOM_CONVERSION_FACTOR\" : \"'+SALESUOM_CONVERSION_FACTOR+'\",\"SALESUOM_ID\" : \"'+SALESUOM_ID+'\" ,\"SCHEDULE_MODE\" : \"'+SCHEDULE_MODE+'\",\"SERVICE_ID\" : \"'+SERVICE_ID+'\",\"SRVTAXCAT_ID\" : \"'+SRVTAXCAT_ID+'\",\"SRVTAXCLA_ID\" : \"'+SRVTAXCLA_ID+'\",\"TAX\" : \"'+TAX+'\",\"TAX_PERCENTAGE\" : \"'+TAX_PERCENTAGE+'\",\"UNIT_PRICE\" : \"'+UNIT_PRICE+'\",\"VALID_FROM_DATE\" : \"'+VALID_FROM_DATE+'\",\"VALID_TO_DATE\" : \"'+VALID_TO_DATE+'\" ,\"SESSION_ID\" : \"'+SESSION_ID+'\"}' AS JSON from (SELECT DISTINCT  ISNULL(CONVERT(VARCHAR,ANNUAL_QUANTITY),'') AS ANNUAL_QUANTITY,ISNULL(BASEUOM_ID,'') AS	BASEUOM_ID,ISNULL(CUSTOMER_PART_NUMBER,'')	AS	CUSTOMER_PART_NUMBER,ISNULL(DELIVERY_MODE,'') AS	DELIVERY_MODE,ISNULL(CONVERT(VARCHAR,EXTENDED_PRICE),'') AS	EXTENDED_PRICE,ISNULL(LINE,'')	AS	LINE,ISNULL(LINE_ITEM_ID,'')	AS	LINE_ITEM_ID,ISNULL(MATPRIGRP_ID,'') AS	MATPRIGRP_ID,ISNULL(CONVERT(VARCHAR,Part_Line_ID),'')  AS Part_Line_ID,ISNULL(PART_NUMBER,'') AS PART_NUMBER,ISNULL(PRICINGPROCEDURE_ID,'')	AS	PRICINGPROCEDURE_ID,ISNULL(PRICING_STATUS,'') AS	PRICING_STATUS,ISNULL(QUOTE_ID,'') AS	QUOTE_ID,ISNULL(DOC_CURRENCY,'') AS SORG_CURRENCY,ISNULL(SALESORG_ID,'')	AS	SALESORG_ID,ISNULL(CONVERT(VARCHAR,SALESUOM_CONVERSION_FACTOR),'') AS SALESUOM_CONVERSION_FACTOR,ISNULL(SALESUOM_ID,'')	AS SALESUOM_ID,ISNULL(SCHEDULE_MODE,'')  AS SCHEDULE_MODE,ISNULL(SERVICE_ID,'') AS SERVICE_ID,ISNULL(SRVTAXCAT_ID,'')	AS	SRVTAXCAT_ID,ISNULL(SRVTAXCLA_ID,'') AS	SRVTAXCLA_ID,ISNULL(CONVERT(VARCHAR,TAX),'') AS	TAX,ISNULL(CONVERT(VARCHAR,TAX_PERCENTAGE),'') AS TAX_PERCENTAGE,ISNULL(CONVERT(VARCHAR,UNIT_PRICE),'')	AS	UNIT_PRICE,ISNULL(CONVERT(VARCHAR(11),VALID_FROM_DATE,101),'') AS VALID_FROM_DATE,ISNULL(CONVERT(VARCHAR(11),VALID_TO_DATE,101),'')	AS	VALID_TO_DATE ,"+str(timestamp_sessionid)+" as SESSION_ID FROM SAQIFP(NOLOCK)  WHERE QUOTE_ID = '"+str(Qt_ID)+"' ) t 	) A FOR XML PATH ('')  ), 1, 1, '')+']','amp;#','#') AS RESULT "
		)

	#SAQIBP
	SAQIBP_QUERY = SqlHelper.GetFirst(
			"SELECT replace ('\"SAQIBP\": ['+STUFF((SELECT ','+ JSON FROM (SELECT DISTINCT '{\"ANNUAL_BILLING_AMOUNT\" : \"'+ANNUAL_BILLING_AMOUNT+'\",\"BILLING_AMOUNT\" : \"'+BILLING_AMOUNT+'\",\"BILLING_CURRENCY\" : \"'+BILLING_CURRENCY+'\",\"BILLING_DATE\" : \"'+BILLING_DATE+'\",\"BILLING_DAY\" : \"'+BILLING_DAY+'\",\"BILLING_END_DATE\" : \"'+BILLING_END_DATE+'\",\"BILLING_INTERVAL\" : \"'+BILLING_INTERVAL+'\",\"BILLING_START_DATE\" : \"'+BILLING_START_DATE+'\",\"BILLING_TYPE\" : \"'+BILLING_TYPE+'\",\"BILLING_YEAR\" : \"'+BILLING_YEAR+'\",\"EQUIPMENT_ID\" : \"'+EQUIPMENT_ID+'\",\"EQUIPMENT_LINE_ID\" : \"'+EQUIPMENT_LINE_ID+'\",\"EQUIPMENT_QUANTITY\" : \"'+EQUIPMENT_QUANTITY+'\",\"GREENBOOK\" : \"'+GREENBOOK+'\",\"LINE_ITEM_ID\" : \"'+LINE_ITEM_ID+'\",\"PO_ITEM\" : \"'+PO_ITEM+'\",\"PO_NUMBER\" : \"'+PO_NUMBER+'\" ,\"QUOTE_ID\" : \"'+QUOTE_ID+'\",\"QUOTE_NAME\" : \"'+QUOTE_NAME+'\",\"SALESORG_ID\" : \"'+SALESORG_ID+'\",\"SERVICE_ID\" : \"'+SERVICE_ID+'\",\"SPLIT_BILLING\" : \"'+SPLIT_BILLING+'\",\"WARRANTY_END_DATE\" : \"'+WARRANTY_END_DATE+'\",\"WARRANTY_START_DATE\" : \"'+WARRANTY_START_DATE+'\",\"SESSION_ID\" : \"'+SESSION_ID+'\"}' AS JSON from (SELECT DISTINCT  ISNULL(CONVERT(VARCHAR,ANNUAL_BILLING_AMOUNT),'') AS ANNUAL_BILLING_AMOUNT,ISNULL(CONVERT(VARCHAR,BILLING_AMOUNT),'') AS	BILLING_AMOUNT,ISNULL(BILLING_CURRENCY,'')	AS	BILLING_CURRENCY,ISNULL(CONVERT(VARCHAR(11),BILLING_DATE,101),'') AS BILLING_DATE,ISNULL(CONVERT(VARCHAR,BILLING_DAY),'') AS	BILLING_DAY,ISNULL(CONVERT(VARCHAR(11),BILLING_END_DATE,101),'')	AS	BILLING_END_DATE,ISNULL(BILLING_INTERVAL,'') AS	BILLING_INTERVAL,ISNULL(CONVERT(VARCHAR(11),BILLING_START_DATE,101),'') AS	BILLING_START_DATE,ISNULL(BILLING_TYPE,'')  AS BILLING_TYPE,ISNULL(CONVERT(VARCHAR,BILLING_YEAR),'') AS BILLING_YEAR,ISNULL(EQUIPMENT_ID,'')	AS	EQUIPMENT_ID,ISNULL(CONVERT(VARCHAR,EQUIPMENT_LINE_ID),'') AS EQUIPMENT_LINE_ID,ISNULL(CONVERT(VARCHAR,EQUIPMENT_QUANTITY),'') AS	EQUIPMENT_QUANTITY,ISNULL(GREENBOOK,'') AS GREENBOOK,ISNULL(LINE_ITEM_ID,'')	AS	LINE_ITEM_ID,ISNULL(PO_ITEM,'') AS PO_ITEM,ISNULL(PO_NUMBER,'')	AS PO_NUMBER,ISNULL(QUOTE_ID,'')  AS QUOTE_ID,ISNULL(QUOTE_NAME,'') AS QUOTE_NAME,ISNULL(SALESORG_ID,'')	AS	SALESORG_ID,ISNULL(SERVICE_ID,'') AS SERVICE_ID,ISNULL(CONVERT(VARCHAR,SPLIT_BILLING),'') AS SPLIT_BILLING,ISNULL(CONVERT(VARCHAR(11),WARRANTY_END_DATE,101),'') AS WARRANTY_END_DATE,ISNULL(CONVERT(VARCHAR(11),WARRANTY_START_DATE,101),'')	AS	WARRANTY_START_DATE,"+str(timestamp_sessionid)+" as SESSION_ID FROM SAQIBP(NOLOCK)  WHERE QUOTE_ID = '"+str(Qt_ID)+"' ) t 	) A FOR XML PATH ('')  ), 1, 1, '')+']','amp;#','#') AS RESULT "
		)

		
	#SAQSCV
	SAQSCV_QUERY = SqlHelper.GetFirst(
			"SELECT replace ('\"SAQSCV\": ['+STUFF((SELECT ','+ JSON FROM (SELECT DISTINCT '{\"TOOLVALUEDRIVER_DISPLAY_VALUE\" : \"'+TOOLVALUEDRIVER_DISPLAY_VALUE+'\",\"TOOLVALUEDRIVER_VALUE_CODE\" : \"'+TOOL_VALUEDRIVER_VALUE_CODE+'\",\"TOOLVALUEDRIVER_NAME\" : \"'+TOOL_VALUEDRIVER_VALUE_DESCRIPTION+'\",\"TOOLVALUEDRIVER_ID\" : \"'+TOOL_VALUEDRIVER_ID+'\",\"EQUIPMENT_ID\" : \"'+EQUIPMENT_ID+'\",\"EQUIPMENT_LINE_ID\" : \"'+EQUIPMENT_LINE_ID+'\",\"QUOTE_ID\" : \"'+QUOTE_ID+'\",\"SERVICE_ID\" : \"'+SERVICE_ID+'\",\"TOOLVALUEDRIVER_COEFFICIENT\" : \"'+VALUEDRIVER_COEFFICIENT+'\",\"LINE_ITEM_ID\" : \"'+LINE_ITEM_ID+'\",\"SESSION_ID\" : \"'+SESSION_ID+'\" }' AS JSON from (SELECT DISTINCT  '' AS TOOLVALUEDRIVER_DISPLAY_VALUE,ISNULL(TOOL_VALUEDRIVER_VALUE_CODE,'') AS	TOOL_VALUEDRIVER_VALUE_CODE,ISNULL(TOOL_VALUEDRIVER_VALUE_DESCRIPTION,'')	AS	TOOL_VALUEDRIVER_VALUE_DESCRIPTION,ISNULL(TOOL_VALUEDRIVER_ID,'') AS TOOL_VALUEDRIVER_ID,ISNULL(EQUIPMENT_ID,'') AS	EQUIPMENT_ID,'' AS	EQUIPMENT_LINE_ID,ISNULL(QUOTE_ID,'') AS QUOTE_ID,ISNULL(SERVICE_ID,'') AS	SERVICE_ID,ISNULL(CONVERT(VARCHAR,VALUEDRIVER_COEFFICIENT),'')  AS VALUEDRIVER_COEFFICIENT,'' AS LINE_ITEM_ID,"+str(timestamp_sessionid)+" as SESSION_ID FROM SAQSCV(NOLOCK)  WHERE QUOTE_ID = '"+str(Qt_ID)+"' ) t 	) A FOR XML PATH ('')  ), 1, 1, '')+']','amp;#','#') AS RESULT "
		)
		
	#Entitlement Query 
	start = 1
	end = 1

	tbl_flag = 0
	Check_flag = 1
	while Check_flag == 1:

		ent_query = SqlHelper.GetFirst("SELECT DISTINCT QUOTE_ID,cpqtableentryid FROM (SELECT DISTINCT quote_id,cpqtableentryid, ROW_NUMBER()OVER(ORDER BY cpqtableentryid) AS SNO FROM SAQIEN (NOLOCK) where quote_id='"+str(Qt_ID)+"' AND SERVICE_ID NOT IN (SELECT ADNPRDOFR_ID FROM MAADPR(NOLOCK)) ) A WHERE SNO>= "+str(start)+" AND SNO<="+str(end)+" ")
		SAQIEN = 'SAQIEN_INBOUND'

		if str(ent_query) != "None":
			tbl_flag = 1		
			start = start + 1
			end = end + 1
			
			
			if start == 2:

				SAQIEN_SEL = SqlHelper.GetFirst("sp_executesql @T=N'declare @H int; Declare @val Varchar(MAX);DECLARE @XML XML; SELECT @val = FINAL from(select  REPLACE(entitlement_xml,''<QUOTE_ITEM_ENTITLEMENT>'',sml) AS FINAL FROM (select ''<QUOTE_ITEM_ENTITLEMENT><QUOTE_ID>''+isnull(quote_id,'''')+''</QUOTE_ID><SERVICE_ID>''+isnull(service_id,'''')+''</SERVICE_ID><EQUIPMENT_ID>''+isnull(equipment_id,'''')+''</EQUIPMENT_ID><FABLOCATION_ID>''+isnull(fablocation_id,'''')+''</FABLOCATION_ID><IS_CHANGED>''+isnull(convert(varchar,IS_CHANGED),'''')+''</IS_CHANGED><KB_VERSION>''+isnull(kb_version,'''')+''</KB_VERSION><SALESORG_ID>''+isnull(salesorg_id,'''')+''</SALESORG_ID><SERIAL_NO>''+isnull(serial_no,'''')+''</SERIAL_NO><ENTITLEMENT_GROUP_ID>''+isnull(convert(varchar,entitlement_group_id),'''')+''</ENTITLEMENT_GROUP_ID> 		<EQUIPMENT_LINE_ID>''+isnull(convert(varchar,EQUIPMENT_LINE_ID),'''')+''</EQUIPMENT_LINE_ID><LINE_ITEM_ID>''+isnull(convert(varchar,LINE_ITEM_ID),'''')+''</LINE_ITEM_ID>'' AS sml,replace(entitlement_xml,''&'','';#38'')  as entitlement_xml from SAQIEN(nolock) where quote_id=''"+str(Qt_ID)+"'' AND cpqtableentryid = "+str(ent_query.cpqtableentryid)+" )A )a SELECT @XML = CONVERT(XML,''<ROOT>''+@VAL+''</ROOT>'') exec sys.sp_xml_preparedocument @H output,@XML; select QUOTE_ID,EQUIPMENT_ID,SERVICE_ID,FABLOCATION_ID,IS_CHANGED,KB_VERSION,SALESORG_ID,SERIAL_NO,ENTITLEMENT_GROUP_ID,EQUIPMENT_LINE_ID,LINE_ITEM_ID,ENTITLEMENT_NAME,ENTITLEMENT_DESCRIPTION,ENTITLEMENT_VALUE_CODE,ENTITLEMENT_DISPLAY_VALUE,ENTITLEMENT_COST_IMPACT,ENTITLEMENT_PRICE_IMPACT INTO "+str(SAQIEN)+"  from openxml(@H, ''ROOT/QUOTE_ITEM_ENTITLEMENT'', 0) with (QUOTE_ID VARCHAR(100) ''QUOTE_ID'',EQUIPMENT_ID VARCHAR(100) ''EQUIPMENT_ID'',SERVICE_ID VARCHAR(100) ''SERVICE_ID'',FABLOCATION_ID VARCHAR(100) ''FABLOCATION_ID'',IS_CHANGED VARCHAR(100) ''IS_CHANGED'',KB_VERSION VARCHAR(100) ''KB_VERSION'',SALESORG_ID VARCHAR(100) ''SALESORG_ID'',SERIAL_NO VARCHAR(100) ''SERIAL_NO'',ENTITLEMENT_GROUP_ID VARCHAR(100) ''ENTITLEMENT_GROUP_ID'',EQUIPMENT_LINE_ID VARCHAR(100) ''EQUIPMENT_LINE_ID'',LINE_ITEM_ID VARCHAR(100) ''LINE_ITEM_ID'',ENTITLEMENT_NAME VARCHAR(100) ''ENTITLEMENT_NAME'',ENTITLEMENT_DESCRIPTION VARCHAR(100) ''ENTITLEMENT_DESCRIPTION'',ENTITLEMENT_VALUE_CODE VARCHAR(100) ''ENTITLEMENT_VALUE_CODE'',ENTITLEMENT_DISPLAY_VALUE VARCHAR(100) ''ENTITLEMENT_DISPLAY_VALUE'',ENTITLEMENT_COST_IMPACT VARCHAR(100) ''ENTITLEMENT_COST_IMPACT'',ENTITLEMENT_PRICE_IMPACT VARCHAR(100) ''ENTITLEMENT_PRICE_IMPACT'') ; exec sys.sp_xml_removedocument @H; '")			
			
			else:
				
				SAQIEN_SEL = SqlHelper.GetFirst("sp_executesql @T=N'declare @H int; Declare @val Varchar(MAX);DECLARE @XML XML; SELECT @val = FINAL from(select  REPLACE(entitlement_xml,''<QUOTE_ITEM_ENTITLEMENT>'',sml) AS FINAL FROM (select ''<QUOTE_ITEM_ENTITLEMENT><QUOTE_ID>''+isnull(quote_id,'''')+''</QUOTE_ID><SERVICE_ID>''+isnull(service_id,'''')+''</SERVICE_ID><EQUIPMENT_ID>''+isnull(equipment_id,'''')+''</EQUIPMENT_ID><FABLOCATION_ID>''+isnull(fablocation_id,'''')+''</FABLOCATION_ID><IS_CHANGED>''+isnull(convert(varchar,IS_CHANGED),'''')+''</IS_CHANGED><KB_VERSION>''+isnull(kb_version,'''')+''</KB_VERSION><SALESORG_ID>''+isnull(salesorg_id,'''')+''</SALESORG_ID><SERIAL_NO>''+isnull(serial_no,'''')+''</SERIAL_NO><ENTITLEMENT_GROUP_ID>''+isnull(convert(varchar,entitlement_group_id),'''')+''</ENTITLEMENT_GROUP_ID> <EQUIPMENT_LINE_ID>''+isnull(convert(varchar,EQUIPMENT_LINE_ID),'''')+''</EQUIPMENT_LINE_ID><LINE_ITEM_ID>''+isnull(convert(varchar,LINE_ITEM_ID),'''')+''</LINE_ITEM_ID>'' AS sml,replace(entitlement_xml,''&'','';#38'')  as entitlement_xml from SAQIEN(nolock) where quote_id=''"+str(Qt_ID)+"'' AND cpqtableentryid = "+str(ent_query.cpqtableentryid)+" )A )a SELECT @XML = CONVERT(XML,''<ROOT>''+@VAL+''</ROOT>'') exec sys.sp_xml_preparedocument @H output,@XML; insert "+str(SAQIEN)+" (QUOTE_ID,EQUIPMENT_ID,SERVICE_ID,FABLOCATION_ID,IS_CHANGED,KB_VERSION,SALESORG_ID,SERIAL_NO,ENTITLEMENT_GROUP_ID,EQUIPMENT_LINE_ID,LINE_ITEM_ID,ENTITLEMENT_NAME,ENTITLEMENT_DESCRIPTION,ENTITLEMENT_VALUE_CODE,ENTITLEMENT_DISPLAY_VALUE,ENTITLEMENT_COST_IMPACT,ENTITLEMENT_PRICE_IMPACT) select QUOTE_ID,EQUIPMENT_ID,SERVICE_ID,FABLOCATION_ID,IS_CHANGED,KB_VERSION,SALESORG_ID,SERIAL_NO,ENTITLEMENT_GROUP_ID,EQUIPMENT_LINE_ID,LINE_ITEM_ID,ENTITLEMENT_NAME,ENTITLEMENT_DESCRIPTION,ENTITLEMENT_VALUE_CODE,ENTITLEMENT_DISPLAY_VALUE,ENTITLEMENT_COST_IMPACT,ENTITLEMENT_PRICE_IMPACT  from openxml(@H, ''ROOT/QUOTE_ITEM_ENTITLEMENT'', 0) with (QUOTE_ID VARCHAR(100) ''QUOTE_ID'',EQUIPMENT_ID VARCHAR(100) ''EQUIPMENT_ID'',SERVICE_ID VARCHAR(100) ''SERVICE_ID'',FABLOCATION_ID VARCHAR(100) ''FABLOCATION_ID'',IS_CHANGED VARCHAR(100) ''IS_CHANGED'',KB_VERSION VARCHAR(100) ''KB_VERSION'',SALESORG_ID VARCHAR(100) ''SALESORG_ID'',SERIAL_NO VARCHAR(100) ''SERIAL_NO'',ENTITLEMENT_GROUP_ID VARCHAR(100) ''ENTITLEMENT_GROUP_ID'',EQUIPMENT_LINE_ID VARCHAR(100) ''EQUIPMENT_LINE_ID'',LINE_ITEM_ID VARCHAR(100) ''LINE_ITEM_ID'',ENTITLEMENT_NAME VARCHAR(100) ''ENTITLEMENT_NAME'',ENTITLEMENT_DESCRIPTION VARCHAR(100) ''ENTITLEMENT_DESCRIPTION'',ENTITLEMENT_VALUE_CODE VARCHAR(100) ''ENTITLEMENT_VALUE_CODE'',ENTITLEMENT_DISPLAY_VALUE VARCHAR(100) ''ENTITLEMENT_DISPLAY_VALUE'',ENTITLEMENT_COST_IMPACT VARCHAR(100) ''ENTITLEMENT_COST_IMPACT'',ENTITLEMENT_PRICE_IMPACT VARCHAR(100) ''ENTITLEMENT_PRICE_IMPACT''); exec sys.sp_xml_removedocument @H; '")
				
		
		else:
			Check_flag=0

	if tbl_flag == 1:
		#SAQIEN
		SAQIEN_QUERY = SqlHelper.GetFirst(
				"SELECT replace ('\"SAQIEN\": ['+STUFF((SELECT ','+ JSON FROM (SELECT DISTINCT '{\"ENTITLEMENT_NAME\" : \"'+ENTITLEMENT_NAME+'\",\"ENTITLEMENT_VALUE_CODE\" : \"'+ENTITLEMENT_VALUE_CODE+'\",\"ENTITLEMENT_DISPLAY_VALUE\" : \"'+ENTITLEMENT_DISPLAY_VALUE+'\",\"ENTITLEMENT_COST_IMPACT\" : \"'+ENTITLEMENT_COST_IMPACT+'\",\"ENTITLEMENT_PRICE_IMPACT\" : \"'+ENTITLEMENT_PRICE_IMPACT+'\",\"ENTITLEMENT_DESCRIPTION\" : \"'+ENTITLEMENT_DESCRIPTION+'\",\"EQUIPMENT_ID\" : \"'+EQUIPMENT_ID+'\",\"FABLOCATION_ID\" : \"'+FABLOCATION_ID+'\",\"IS_CHANGED\" : \"'+IS_CHANGED+'\",\"KB_VERSION\" : \"'+KB_VERSION+'\",\"QUOTE_ID\" : \"'+QUOTE_ID+'\",\"SALESORG_ID\" : \"'+SALESORG_ID+'\",\"SERIAL_NO\" : \"'+SERIAL_NO+'\",\"SERVICE_ID\" : \"'+SERVICE_ID+'\",\"ENTITLEMENT_GROUP_ID\" : \"'+ENTITLEMENT_GROUP_ID+'\",		\"EQUIPMENT_LINE_ID\" : \"'+EQUIPMENT_LINE_ID+'\",\"LINE_ITEM_ID\" : \"'+LINE_ITEM_ID+'\",\"SESSION_ID\" : \"'+SESSION_ID+'\"}' AS JSON from (SELECT DISTINCT  ISNULL(ENTITLEMENT_NAME,'') AS ENTITLEMENT_NAME,ISNULL(ENTITLEMENT_VALUE_CODE,'') AS	ENTITLEMENT_VALUE_CODE,ISNULL(ENTITLEMENT_DISPLAY_VALUE,'')	AS	ENTITLEMENT_DISPLAY_VALUE,ISNULL(ENTITLEMENT_COST_IMPACT,'') AS ENTITLEMENT_COST_IMPACT,ISNULL(ENTITLEMENT_PRICE_IMPACT,'') AS	ENTITLEMENT_PRICE_IMPACT,ISNULL(ENTITLEMENT_DESCRIPTION,'')	AS ENTITLEMENT_DESCRIPTION,ISNULL(EQUIPMENT_ID,'') AS	EQUIPMENT_ID,ISNULL(FABLOCATION_ID,'') AS FABLOCATION_ID,ISNULL(IS_CHANGED,'')  AS IS_CHANGED,ISNULL(KB_VERSION,'') AS KB_VERSION,ISNULL(QUOTE_ID,'') AS QUOTE_ID,ISNULL(SALESORG_ID,'') AS SALESORG_ID,ISNULL(SERIAL_NO,'') AS	SERIAL_NO,ISNULL(SERVICE_ID,'') AS SERVICE_ID,ISNULL(ENTITLEMENT_GROUP_ID,'')	AS	ENTITLEMENT_GROUP_ID,ISNULL(EQUIPMENT_LINE_ID,'') AS EQUIPMENT_LINE_ID,ISNULL(LINE_ITEM_ID,'') AS LINE_ITEM_ID,"+str(timestamp_sessionid)+" as SESSION_ID FROM SAQIEN_INBOUND(NOLOCK)  WHERE QUOTE_ID = '"+str(Qt_ID)+"' ) t 	) A FOR XML PATH ('')  ), 1, 1, '')+']','amp;#','#') AS RESULT ")

	Table_Name = 'SAQIEN_INBOUND'
		
	TempTable = SqlHelper.GetFirst("sp_executesql @T=N'IF EXISTS (SELECT ''X'' FROM SYS.OBJECTS WHERE NAME= ''"+str(Table_Name)+"'' ) BEGIN DROP TABLE "+str(Table_Name)+" END'")

	final_json = ''
	if str(SAQTMT_QUERY.RESULT) != '':
		final_json = str(SAQTMT_QUERY.RESULT)+','
	if str(SAQTSO_QUERY.RESULT) != '':
		final_json = final_json+str(SAQTSO_QUERY.RESULT)+','
	if str(SAQTIP_QUERY.RESULT) != '':
		final_json = final_json+str(SAQTIP_QUERY.RESULT)+','
	if str(SAQTBP_QUERY.RESULT) != '':
		final_json = final_json+str(SAQTBP_QUERY.RESULT)+','
	if str(SAQDOC_QUERY.RESULT) != '':
		final_json = final_json+str(SAQDOC_QUERY.RESULT)+','
	if str(SAQITM_QUERY.RESULT) != '':
		final_json = final_json+str(SAQITM_QUERY.RESULT)+','
	if str(SAQICO_QUERY.RESULT) != '':
		final_json = final_json+str(SAQICO_QUERY.RESULT)+','
	if str(SAQICA_QUERY.RESULT) != '':
		final_json = final_json+str(SAQICA_QUERY.RESULT)+','
	if str(SAQAPP_QUERY.RESULT) != '':
		final_json = final_json+str(SAQAPP_QUERY.RESULT)+','
	if str(SAQIFP_QUERY.RESULT) != '':
		final_json = final_json+str(SAQIFP_QUERY.RESULT)+','
	if str(SAQIBP_QUERY.RESULT) != '':
		final_json = final_json+str(SAQIBP_QUERY.RESULT)+','
	if str(SAQSCV_QUERY.RESULT) != '':
		final_json = final_json+str(SAQSCV_QUERY.RESULT)+','
	if tbl_flag == 1:
		if str(SAQIEN_QUERY.RESULT) != '':
			final_json = final_json+str(SAQIEN_QUERY.RESULT)+','
		
	Final_json = '{"CPQ_Columns": {'+str(final_json)[:-1]+'}}'
	#Trace.Write("456 ------>"+str(Final_json))
	if len(Final_json)>0:
		LOGIN_CRE = SqlHelper.GetFirst("SELECT  URL FROM SYCONF where EXTERNAL_TABLE_NAME ='CPQ_TO_HADOOP'")
		Oauth_info = SqlHelper.GetFirst("SELECT  DOMAIN,URL FROM SYCONF where EXTERNAL_TABLE_NAME ='OAUTH'")

		requestdata =Oauth_info.DOMAIN
		webclient = System.Net.WebClient()
		webclient.Headers[System.Net.HttpRequestHeader.ContentType] = "application/x-www-form-urlencoded"
		response = webclient.UploadString(Oauth_info.URL,str(requestdata))

		response = eval(response)
		access_token = response['access_token']

		authorization = "Bearer " + access_token
		webclient = System.Net.WebClient()
		webclient.Headers[System.Net.HttpRequestHeader.ContentType] = "application/json"
		webclient.Headers[System.Net.HttpRequestHeader.Authorization] = authorization;	

		Hadoop_response = webclient.UploadString(str(LOGIN_CRE.URL),str(Final_json))	
		Log.Info("789 Hadoop_response --->"+str(Hadoop_response))
		
		if "True" in Hadoop_response: 
			StatusUpdateQuery = SqlHelper.GetFirst(""+ str(Parameter1.QUERY_CRITERIA_1)+ "  A SET HADOOP_FLAG = ''True'' FROM SAQTMT(NOLOCK) A WHERE QUOTE_ID=''"+str(data.Quote_id)+"''  '")
		

		ApiResponse = ApiResponseFactory.JsonResponse(Hadoop_response)
	else:
		ApiResponse = ApiResponseFactory.JsonResponse({"Response": [{"Status": "200", "Message": "Data not available"}]})