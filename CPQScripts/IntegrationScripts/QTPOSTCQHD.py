# =========================================================================================================================================
#   __script_name : QTPOSTCQHD.PY
#   __script_description : THIS SCRIPT IS USED TO CREATE QUOTE JSON FOR HADOOP
#   __primary_author__ : SURESH MUNIYANDI, Baji
#   __create_date :
#   Â© BOSTON HARBOR TECHNOLOGY LLC - ALL RIGHTS RESERVED
# ==========================================================================================================================================
import sys
import clr
import System.Net
from System.Text.Encoding import UTF8
from System import Convert
from System.Net import HttpWebRequest, NetworkCredential
from System.Net import *
from System.Net import CookieContainer
from System.Net import Cookie
from System.Net import WebRequest
from System.Net import HttpWebResponse
from System import Uri
clr.AddReference("System.Net")
from System.Net import CookieContainer, NetworkCredential, Mail
from System.Net.Mail import SmtpClient, MailAddress, Attachment, MailMessage

try:

	SAQIEN = 'SAQIEN_INBOUND'
	SAQIEN_DRP = SqlHelper.GetFirst("sp_executesql @T=N'IF EXISTS (SELECT ''X'' FROM SYS.OBJECTS WHERE NAME= ''"+str(SAQIEN)+"'' ) BEGIN DROP TABLE "+str(SAQIEN)+" END  ' ")  

	Jsonquery = SqlHelper.GetFirst("select getdate() as date,DATEADD(HOUR,-2,getdate()) as filter  ")

	Quoteinfoquery = SqlHelper.GetList("SELECT DISTINCT Quote_id,'' as QTEREV_ID FROM (SELECT  Quote_id,QTEREV_ID FROM SAQTMT(NOLOCK) WHERE CPQTABLEENTRYDATEADDED >'"+str(Jsonquery.filter)+"' OR CpqTableEntryDateModified > '"+str(Jsonquery.filter)+"' union select  Quote_id,QTEREV_ID from SAQTMT where isnull(hadoop_flag,'False') = 'False' UNION SELECT  Quote_id,QTEREV_ID FROM SAQTRV(NOLOCK) WHERE CPQTABLEENTRYDATEADDED >'"+str(Jsonquery.filter)+"' OR CpqTableEntryDateModified > '"+str(Jsonquery.filter)+"' UNION SELECT  Quote_id,QTEREV_ID FROM SAQTIP(NOLOCK) WHERE CPQTABLEENTRYDATEADDED >'"+str(Jsonquery.filter)+"' OR CpqTableEntryDateModified > '"+str(Jsonquery.filter)+"' UNION SELECT  Quote_id,QTEREV_ID FROM SAQRIB(NOLOCK) WHERE CPQTABLEENTRYDATEADDED >'"+str(Jsonquery.filter)+"' OR CpqTableEntryDateModified > '"+str(Jsonquery.filter)+"' UNION SELECT  Quote_id,QTEREV_ID FROM SAQDOC(NOLOCK) WHERE CPQTABLEENTRYDATEADDED >'"+str(Jsonquery.filter)+"' OR CpqTableEntryDateModified > '"+str(Jsonquery.filter)+"' UNION SELECT  Quote_id,QTEREV_ID FROM SAQRIT(NOLOCK) WHERE CPQTABLEENTRYDATEADDED >'"+str(Jsonquery.filter)+"' OR CpqTableEntryDateModified > '"+str(Jsonquery.filter)+"' UNION SELECT  Quote_id,QTEREV_ID FROM SAQICO(NOLOCK) WHERE CPQTABLEENTRYDATEADDED >'"+str(Jsonquery.filter)+"' OR CpqTableEntryDateModified > '"+str(Jsonquery.filter)+"' UNION SELECT  Quote_id,QTEREV_ID FROM SAQICA(NOLOCK) WHERE CPQTABLEENTRYDATEADDED >'"+str(Jsonquery.filter)+"' OR CpqTableEntryDateModified > '"+str(Jsonquery.filter)+"' UNION SELECT  Quote_id,QTEREV_ID FROM SAQIFP(NOLOCK) WHERE CPQTABLEENTRYDATEADDED >'"+str(Jsonquery.filter)+"' OR CpqTableEntryDateModified > '"+str(Jsonquery.filter)+"' UNION SELECT  Quote_id,QTEREV_ID FROM SAQIBP(NOLOCK) WHERE CPQTABLEENTRYDATEADDED >'"+str(Jsonquery.filter)+"' OR CpqTableEntryDateModified > '"+str(Jsonquery.filter)+"'  UNION SELECT  Quote_id,QTEREV_ID FROM SAQIEN(NOLOCK) WHERE CPQTABLEENTRYDATEADDED >'"+str(Jsonquery.filter)+"' OR CpqTableEntryDateModified > '"+str(Jsonquery.filter)+"' )A ")

	Parameter = SqlHelper.GetFirst("SELECT QUERY_CRITERIA_1 FROM SYDBQS (NOLOCK) WHERE QUERY_NAME = 'SELECT' ")
	Parameter1 = SqlHelper.GetFirst("SELECT QUERY_CRITERIA_1 FROM SYDBQS (NOLOCK) WHERE QUERY_NAME = 'UPD' ")

	Qtinfoquery = SqlHelper.GetFirst("sp_executesql @T=N'UPDATE  SAQTMT SET HADOOP_FLAG = ''FALSE'' WHERE CPQTABLEENTRYDATEADDED >''"+str(Jsonquery.filter)+"'' '")

	for data in Quoteinfoquery:
		
		Dateinfo = SqlHelper.GetFirst("SELECT GETDATE() AS A")
		FILE_CREATED_DATETIME = "'" + str(Dateinfo.A) + "'"		

		sessionid = SqlHelper.GetFirst("SELECT NEWID() AS A")
		timestamp_sessionid = "'" + str(sessionid.A) + "'"
		
		Qt_ID = str(data.Quote_id)
		Revision_ID = str(data.QTEREV_ID)
		
		Log.Info("45678 Qt_ID------>"+str(Qt_ID))

		SAQTMT_QUERY = SqlHelper.GetFirst("	SELECT CASE WHEN ISNULL(RESULT,'') = '' THEN '' ELSE RESULT END AS RESULT FROM (SELECT replace ('\"SAQTMT\": ['+STUFF((SELECT ','+ JSON FROM (SELECT DISTINCT '{\"ACCOUNT_ID\" : \"'+ACCOUNT_ID+'\",\"C4C_QUOTE_ID\" : \"'+C4C_QUOTE_ID+'\",\"CONTRACT_VALID_FROM\" : \"'+CONTRACT_VALID_FROM+'\",\"CONTRACT_VALID_TO\" : \"'+CONTRACT_VALID_TO+'\",\"CRM_CONTRACT_ID\" : \"'+CRM_CONTRACT_ID+'\",\"CUSTOMER_NOTES\" : \"'+CUSTOMER_NOTES+'\",\"GLOBAL_CURRENCY\" : \"'+GLOBAL_CURRENCY+'\",\"NET_VALUE\" : \"'+NET_VALUE+'\",\"QUOTE_APPROVE_DATE\" : \"'+QUOTE_APPROVE_DATE+'\",\"QUOTE_CREATED_DATE\" : \"'+QUOTE_CREATED_DATE+'\",\"QUOTE_EXPIRE_DATE\" : \"'+QUOTE_EXPIRE_DATE+'\",\"QUOTE_ID\" : \"'+QUOTE_ID+'\",\"QUOTE_NAME\" : \"'+QUOTE_NAME+'\",\"QUOTE_STATUS\" : \"'+QUOTE_STATUS+'\",\"REASONFOR_REJECTION\" : \"'+REASONFOR_REJECTION+'\",\"SALE_TYPE\" : \"'+SALE_TYPE+'\",\"SOURCE_CONTRACT_ID\" : \"'+SOURCE_CONTRACT_ID+'\",\"POES\" : \"'+POES+'\",\"OPPORTUNITY_ID\" : \"'+OPPORTUNITY_ID+'\",\"OPPORTUNITY_NAME\" : \"'+OPPORTUNITY_NAME+'\",\"QTEREV_ID\" : \"'+QTEREV_ID+'\",\"CRM_OPPORTUNITY_ID\" : \"'+CRM_OPPORTUNITY_ID+'\",\"CRM_QUOTE_ID\" : \"'+CRM_QUOTE_ID+'\",\"LOW\" : \"'+LOW+'\",\"OWNER_ID\" : \"'+OWNER_ID+'\",\"OWNER_NAME\" : \"'+OWNER_NAME+'\",\"SESSION_ID\" : \"'+SESSION_ID+'\",\"FILE_CREATED_DATETIME\" : \"'+FILE_CREATED_DATETIME+'\"}' AS JSON from (SELECT DISTINCT  ISNULL(SAQTMT.ACCOUNT_ID,'') AS	ACCOUNT_ID,ISNULL(SAQTMT.C4C_QUOTE_ID,'')	AS	C4C_QUOTE_ID,ISNULL(CONVERT(VARCHAR(11),SAQTMT.CONTRACT_VALID_FROM,101),'')	AS	CONTRACT_VALID_FROM,ISNULL(CONVERT(VARCHAR(11),SAQTMT.CONTRACT_VALID_TO,101),'')	AS	CONTRACT_VALID_TO,ISNULL(SAQTMT.CRM_CONTRACT_ID,'')	AS	CRM_CONTRACT_ID,ISNULL(SAQTMT.CUSTOMER_NOTES,'')	AS	CUSTOMER_NOTES,ISNULL(SAQTMT.GLOBAL_CURRENCY,'')	AS	GLOBAL_CURRENCY,ISNULL(CONVERT(VARCHAR,SAQTMT.NET_VALUE),'')	AS	NET_VALUE,ISNULL(CONVERT(VARCHAR(11),SAQTMT.QUOTE_APPROVE_DATE,101),'') AS	QUOTE_APPROVE_DATE,ISNULL(CONVERT(VARCHAR(11),SAQTMT.QUOTE_CREATED_DATE,101),'') AS	QUOTE_CREATED_DATE,ISNULL(CONVERT(VARCHAR(11),SAQTMT.QUOTE_EXPIRE_DATE,101),'')	AS	QUOTE_EXPIRE_DATE,ISNULL(SAQTMT.QUOTE_ID,'')	AS	QUOTE_ID,ISNULL(SAQTMT.QUOTE_NAME,'')	AS	QUOTE_NAME,ISNULL(SAQTMT.QUOTE_STATUS,'')	AS	QUOTE_STATUS,ISNULL(SAQTMT.REASONFOR_REJECTION,'') AS	REASONFOR_REJECTION,ISNULL(SAQTMT.SALE_TYPE,'')	AS	SALE_TYPE,ISNULL(SAQTMT.SOURCE_CONTRACT_ID,'')	AS	SOURCE_CONTRACT_ID,ISNULL(CONVERT(VARCHAR,SAQTMT.POES),'')	AS	POES,ISNULL(SAOPQT.OPPORTUNITY_ID,'')	AS	OPPORTUNITY_ID,ISNULL(SAOPQT.OPPORTUNITY_NAME,'')	AS	OPPORTUNITY_NAME,ISNULL(CONVERT(VARCHAR,SAQTMT.QTEREV_ID),'') AS	QTEREV_ID,ISNULL(CONVERT(VARCHAR,SAQTMT.CRM_OPPORTUNITY_ID),'') AS	CRM_OPPORTUNITY_ID,ISNULL(CONVERT(VARCHAR,SAQTMT.CRM_QUOTE_ID),'') AS	CRM_QUOTE_ID,ISNULL(CONVERT(VARCHAR,SAQTMT.LOW),'') AS	LOW,"+str(timestamp_sessionid)+" as SESSION_ID,"+str(FILE_CREATED_DATETIME)+" as FILE_CREATED_DATETIME,ISNULL(OWNER_ID,'') AS OWNER_ID,ISNULL(OWNER_NAME,'') AS OWNER_NAME FROM SAQTMT (NOLOCK) LEFT JOIN SAQTRV(NOLOCK) ON SAQTMT.QUOTE_ID = SAQTRV.QUOTE_ID LEFT JOIN SAOPQT(NOLOCK) ON SAQTMT.QUOTE_ID = SAOPQT.QUOTE_ID WHERE SAQTMT.QUOTE_ID = '"+str(Qt_ID)+"'  ) t 	) A FOR XML PATH ('')  ), 1, 1, '')+']','amp;#','#') AS RESULT)A ")  
		
		#SAQTRV
		SAQTRV_QUERY = SqlHelper.GetFirst("SELECT CASE WHEN ISNULL(RESULT,'') = '' THEN '' ELSE RESULT END AS RESULT FROM (SELECT replace ('\"SAQTRV\": ['+STUFF((SELECT ','+ JSON FROM (SELECT DISTINCT '{\"ACCOUNT_ID\" : \"'+ACCOUNT_ID+'\",\"ACCOUNT_PRICING_PROCEDURE\" : \"'+ACCOUNT_PRICING_PROCEDURE+'\",\"ACCTAXCAT_ID\" : \"'+ACCTAXCAT_ID+'\",\"ACCTAXCLA_ID\" : \"'+ACCTAXCLA_ID+'\",\"COUNTRY\" : \"'+COUNTRY+'\",\"DISTRIBUTIONCHANNEL_ID\" : \"'+DISTRIBUTIONCHANNEL_ID+'\",\"DIVISION_ID\" : \"'+DIVISION_ID+'\",\"DOCUMENT_PRICING_PROCEDURE\" : \"'+DOCUMENT_PRICING_PROCEDURE+'\",\"EXCHANGE_RATE\" : \"'+EXCHANGE_RATE+'\"		,\"EXCHANGE_RATE_DATE\" : \"'+EXCHANGE_RATE_DATE+'\",\"EXCHANGE_RATE_TYPE\" : \"'+EXCHANGE_RATE_TYPE+'\",\"GLOBAL_CURRENCY\" : \"'+GLOBAL_CURRENCY+'\",\"PRICINGPROCEDURE_ID\" : \"'+PRICINGPROCEDURE_ID+'\",\"QUOTE_ID\" : \"'+QUOTE_ID+'\",\"REGION\" : \"'+REGION+'\",\"SALESOFFICE_ID\" : \"'+SALESOFFICE_ID+'\",\"SORG_CURRENCY\" : \"'+SORG_CURRENCY+'\",\"SALESORG_ID\" : \"'+SALESORG_ID+'\",\"BLUEBOOK\" : \"'+BLUEBOOK+'\",\"DOCTYP_ID\" : \"'+DOCTYP_ID+'\",\"QTEREV_ID\" : \"'+QTEREV_ID+'\",\"REVISION_NAME\" : \"'+REVISION_NAME+'\",\"REVISION_DESCRIPTION\" : \"'+REVISION_DESCRIPTION+'\",\"REVISION_STATUS\" : \"'+REVISION_STATUS+'\",\"REV_CREATE_DATE\" : \"'+REV_CREATE_DATE+'\",\"REV_APPROVE_DATE\" : \"'+REV_APPROVE_DATE+'\",\"REV_EXPIRE_DATE\" : \"'+REV_EXPIRE_DATE+'\",\"ACTIVE\" : \"'+ACTIVE+'\",\"CONTRACT_VALID_FROM\" : \"'+CONTRACT_VALID_FROM+'\",\"CONTRACT_VALID_TO\" : \"'+CONTRACT_VALID_TO+'\",\"INCOTERM_ID\" : \"'+INCOTERM_ID+'\",\"INCOTERM_NAME\" : \"'+INCOTERM_NAME+'\",\"PAYMENTTERM_ID\" : \"'+PAYMENTTERM_ID+'\",\"PAYMENTTERM_NAME\" : \"'+PAYMENTTERM_NAME+'\",\"ADVANCED_SHIPPING_EMAIL\" : \"'+ADVANCED_SHIPPING_EMAIL+'\",\"BD_PRICE_INGL_CURR\" : \"'+BD_PRICE_INGL_CURR+'\",\"CEILING_PRICE_INGL_CURR\" : \"'+CEILING_PRICE_INGL_CURR+'\",\"COMPANY_ID\" : \"'+COMPANY_ID+'\",\"CONTRACT_TYPE\" : \"'+CONTRACT_TYPE+'\",\"TARGET_PRICE_INGL_CURR\" : \"'+TARGET_PRICE_INGL_CURR+'\",\"TAX_AMOUNT_INGL_CURR\" : \"'+TAX_AMOUNT_INGL_CURR+'\",\"DISCOUNT_PERCENT\" : \"'+DISCOUNT_PERCENT+'\",\"SESSION_ID\" : \"'+SESSION_ID+'\",\"APPDTE_EXCH_RATE\" : \"'+APPDTE_EXCH_RATE+'\",\"APPLIED_EMAIL\" : \"'+APPLIED_EMAIL+'\",\"APPLIED_NAME\" : \"'+APPLIED_NAME+'\",\"APPLIED_TITLE\" : \"'+APPLIED_TITLE+'\",\"BANK_ID\" : \"'+BANK_ID+'\",\"CANCELLATION_PERIOD_EXCEPTION\" : \"'+CANCELLATION_PERIOD_EXCEPTION+'\",\"CANCELLATION_PERIOD\" : \"'+CANCELLATION_PERIOD+'\",\"CLM_AGREEMENT_NUM\" : \"'+CLM_AGREEMENT_NUM+'\",\"CLM_AGREEMENT_OWNER\" : \"'+CLM_AGREEMENT_OWNER+'\",\"CLM_CONTRACT_TYPE\" : \"'+CLM_CONTRACT_TYPE+'\",\"CLM_TEMPLATE_NAME\" : \"'+CLM_TEMPLATE_NAME+'\",\"CUSTOMER_NOTES\" : \"'+CUSTOMER_NOTES+'\",\"EXTERNAL_EMAIL\" : \"'+EXTERNAL_EMAIL+'\",\"EXTERNAL_NAME\" : \"'+EXTERNAL_NAME+'\",\"EXTERNAL_TITLE\" : \"'+EXTERNAL_TITLE+'\",\"HLV_ORG_BUN\" : \"'+HLV_ORG_BUN+'\",\"INTERNAL_NOTES\" : \"'+INTERNAL_NOTES+'\",\"DISCOUNT_AMOUNT_INGL_CURR\" : \"'+DISCOUNT_AMOUNT_INGL_CURR+'\",\"CREDIT_INGL_CURR\" : \"'+CREDIT_INGL_CURR+'\",\"NET_VALUE_INGL_CURR\" : \"'+NET_VALUE_INGL_CURR+'\",\"SALES_PRICE_INGL_CURR\" : \"'+SALES_PRICE_INGL_CURR+'\",\"NET_PRICE_INGL_CURR\" : \"'+NET_PRICE_INGL_CURR+'\",\"PAYMENTTERM_DAYS\" : \"'+PAYMENTTERM_DAYS+'\"}' AS JSON from (SELECT DISTINCT  ISNULL(SAQTMT.ACCOUNT_ID,'')	AS	ACCOUNT_ID,ISNULL(SAQTRV.ACCOUNT_PRICING_PROCEDURE,'')	AS	ACCOUNT_PRICING_PROCEDURE,ISNULL(SAQTRV.ACCTAXCAT_ID,'') AS	ACCTAXCAT_ID,ISNULL(SAQTRV.ACCTAXCLA_ID,'')	AS	ACCTAXCLA_ID,ISNULL(SAQTRV.COUNTRY,'')	AS	COUNTRY,ISNULL(SAQTRV.DISTRIBUTIONCHANNEL_ID,'')	AS	DISTRIBUTIONCHANNEL_ID,ISNULL(SAQTRV.DIVISION_ID,'') AS	DIVISION_ID,ISNULL(SAQTRV.DOCUMENT_PRICING_PROCEDURE,'')	AS	DOCUMENT_PRICING_PROCEDURE,ISNULL(CONVERT(VARCHAR,SAQTRV.EXCHANGE_RATE),'')  AS	EXCHANGE_RATE,ISNULL(CONVERT(VARCHAR(11),SAQTRV.EXCHANGE_RATE_DATE,101),'')	AS	EXCHANGE_RATE_DATE,ISNULL(SAQTRV.EXCHANGE_RATE_TYPE,'')	AS	EXCHANGE_RATE_TYPE,ISNULL(SAQTRV.GLOBAL_CURRENCY,'') AS	GLOBAL_CURRENCY,ISNULL(SAQTRV.PRICINGPROCEDURE_ID,'')	AS	PRICINGPROCEDURE_ID,ISNULL(SAQTRV.QUOTE_ID,'')	AS	QUOTE_ID,ISNULL(SAQTRV.REGION,'')	AS	REGION,ISNULL(SAQTRV.SALESOFFICE_ID,'')	AS	SALESOFFICE_ID,ISNULL(SAQTRV.DOC_CURRENCY,'') AS	SORG_CURRENCY,ISNULL(SAQTRV.SALESORG_ID,'')	AS	SALESORG_ID,ISNULL(CONVERT(VARCHAR,SAQTRV.BLUEBOOK),'')	AS	BLUEBOOK,ISNULL(CONVERT(VARCHAR,SAQTRV.DOCTYP_ID),'')	AS	DOCTYP_ID,ISNULL(CONVERT(VARCHAR,SAQTRV.QTEREV_ID),'')	AS	QTEREV_ID,ISNULL(SAQTRV.REVISION_NAME,'')	AS	REVISION_NAME,ISNULL(SAQTRV.REVISION_DESCRIPTION,'')	AS	REVISION_DESCRIPTION,ISNULL(SAQTRV.REVISION_STATUS,'')	AS	REVISION_STATUS,ISNULL(CONVERT(VARCHAR(11),SAQTRV.REV_CREATE_DATE,101),'')	AS	REV_CREATE_DATE,ISNULL(CONVERT(VARCHAR(11),SAQTRV.REV_APPROVE_DATE,101),'')	AS	REV_APPROVE_DATE,ISNULL(CONVERT(VARCHAR(11),SAQTRV.REV_EXPIRE_DATE,101),'')	AS	REV_EXPIRE_DATE,ISNULL(CONVERT(VARCHAR,SAQTRV.ACTIVE),'')	AS	ACTIVE,ISNULL(CONVERT(VARCHAR(11),SAQTRV.CONTRACT_VALID_FROM,101),'')	AS	CONTRACT_VALID_FROM,ISNULL(CONVERT(VARCHAR(11),SAQTRV.CONTRACT_VALID_TO,101),'')	AS	CONTRACT_VALID_TO,ISNULL(SAQTRV.INCOTERM_ID,'')	AS	INCOTERM_ID,ISNULL(SAQTRV.INCOTERM_NAME,'')	AS	INCOTERM_NAME,ISNULL(SAQTRV.PAYMENTTERM_ID,'')	AS	PAYMENTTERM_ID,ISNULL(SAQTRV.PAYMENTTERM_NAME,'') AS PAYMENTTERM_NAME,ISNULL(CONVERT(VARCHAR,SAQTRV.ADVANCED_SHIPPING_EMAIL),'')  AS	ADVANCED_SHIPPING_EMAIL,ISNULL(CONVERT(VARCHAR,SAQTRV.BD_PRICE_INGL_CURR),'')  AS	BD_PRICE_INGL_CURR,ISNULL(CONVERT(VARCHAR,SAQTRV.CEILING_PRICE_INGL_CURR),'') AS CEILING_PRICE_INGL_CURR,ISNULL(CONVERT(VARCHAR,SAQTRV.COMPANY_ID),'') AS COMPANY_ID,ISNULL(CONVERT(VARCHAR,SAQTRV.CONTRACT_TYPE),'') AS CONTRACT_TYPE,ISNULL(CONVERT(VARCHAR,SAQTRV.TARGET_PRICE_INGL_CURR),'') AS TARGET_PRICE_INGL_CURR,ISNULL(CONVERT(VARCHAR,SAQTRV.TAX_AMOUNT_INGL_CURR),'') AS TAX_AMOUNT_INGL_CURR,ISNULL(CONVERT(VARCHAR,SAQTRV.DISCOUNT_PERCENT),'') AS DISCOUNT_PERCENT,"+str(timestamp_sessionid)+" as SESSION_ID,ISNULL(SAQTRV.PAYMENTTERM_DAYS,'')	AS	PAYMENTTERM_DAYS,ISNULL(CONVERT(VARCHAR,SAQTRV.NET_PRICE_INGL_CURR),'') AS NET_PRICE_INGL_CURR,ISNULL(APPDTE_EXCH_RATE,'') AS APPDTE_EXCH_RATE,ISNULL(APPLIED_EMAIL,'') AS APPLIED_EMAIL,ISNULL(APPLIED_NAME,'') AS APPLIED_NAME,ISNULL(APPLIED_TITLE,'') AS APPLIED_TITLE,ISNULL(BANK_ID,'') AS BANK_ID,ISNULL(CANCELLATION_PERIOD_EXCEPTION,'') AS CANCELLATION_PERIOD_EXCEPTION,ISNULL(CANCELLATION_PERIOD,'') AS CANCELLATION_PERIOD,ISNULL(CLM_AGREEMENT_NUM,'') AS CLM_AGREEMENT_NUM,ISNULL(CLM_AGREEMENT_OWNER,'') AS CLM_AGREEMENT_OWNER,ISNULL(CLM_CONTRACT_TYPE,'') AS CLM_CONTRACT_TYPE,ISNULL(CLM_TEMPLATE_NAME,'') AS CLM_TEMPLATE_NAME,ISNULL(SAQTRV.CUSTOMER_NOTES,'') AS CUSTOMER_NOTES,ISNULL(EXTERNAL_EMAIL,'') AS EXTERNAL_EMAIL,ISNULL(EXTERNAL_NAME,'') AS EXTERNAL_NAME,ISNULL(EXTERNAL_TITLE,'') AS EXTERNAL_TITLE,ISNULL(HLV_ORG_BUN,'') AS HLV_ORG_BUN,ISNULL(INTERNAL_NOTES,'') AS INTERNAL_NOTES,ISNULL(CONVERT(VARCHAR,DISCOUNT_AMOUNT_INGL_CURR),'') AS DISCOUNT_AMOUNT_INGL_CURR,ISNULL(CONVERT(VARCHAR,CREDIT_INGL_CURR),'')AS CREDIT_INGL_CURR,ISNULL(CONVERT(VARCHAR,NET_VALUE_INGL_CURR),'') AS NET_VALUE_INGL_CURR,ISNULL(CONVERT(VARCHAR,SALES_PRICE_INGL_CURR),'') AS SALES_PRICE_INGL_CURR FROM SAQTRV(NOLOCK) LEFT JOIN SAQTMT(NOLOCK) ON SAQTMT.QUOTE_ID = SAQTRV.QUOTE_ID WHERE SAQTRV.QUOTE_ID = '"+str(Qt_ID)+"' ) t 	) A FOR XML PATH ('')  ), 1, 1, '')+']','amp;#','#') AS RESULT)A ")
			
		#SAQTIP
		
		SAQTIP_QUERY = SqlHelper.GetFirst(
				"SELECT CASE WHEN ISNULL(RESULT,'') = '' THEN '' ELSE RESULT END AS RESULT FROM (SELECT replace ('\"SAQTIP\": ['+STUFF((SELECT ','+ JSON FROM (SELECT DISTINCT '{\"ADDRESS\" : \"'+ADDRESS+'\",\"EMAIL\" : \"'+EMAIL+'\",\"PRIMARY\" : \"'+PRIMARY+'\",\"PARTY_ID\" : \"'+PARTY_ID+'\",\"PARTY_NAME\" : \"'+PARTY_NAME+'\",\"PARTY_ROLE\" : \"'+PARTY_ROLE+'\",\"PHONE\" : \"'+PHONE+'\",\"QUOTE_ID\" : \"'+QUOTE_ID+'\",\"SALESORG_ID\" : \"'+SALESORG_ID+'\",\"SESSION_ID\" : \"'+SESSION_ID+'\",\"QTEREV_ID\" : \"'+QTEREV_ID+'\"}' AS JSON from (SELECT DISTINCT  ISNULL(ADDRESS,'')	AS	ADDRESS,ISNULL(EMAIL,'') AS	EMAIL,ISNULL(CONVERT(VARCHAR,PRIMARY),'')	AS	PRIMARY,ISNULL(PARTY_ID,'')	AS	PARTY_ID,ISNULL(PARTY_NAME,'')	AS	PARTY_NAME,ISNULL(PARTY_ROLE,'')	AS	PARTY_ROLE,ISNULL(PHONE,'')	AS	PHONE,ISNULL(QUOTE_ID,'')	AS	QUOTE_ID,ISNULL(SALESORG_ID,'')  AS	SALESORG_ID,"+str(timestamp_sessionid)+" as SESSION_ID,ISNULL(CONVERT(VARCHAR,QTEREV_ID),'')  AS	QTEREV_ID FROM SAQTIP(NOLOCK) WHERE SAQTIP.QUOTE_ID = '"+str(Qt_ID)+"' ) t ) A FOR XML PATH ('')  ), 1, 1, '')+']','amp;#','#') AS RESULT)A "
			)

		#SAQRIB 
		SAQTBP_QUERY = SqlHelper.GetFirst("SELECT CASE WHEN ISNULL(RESULT,'') = '' THEN '' ELSE RESULT END AS RESULT FROM (SELECT replace ('\"SAQRIB\": ['+STUFF((SELECT ','+ JSON FROM (SELECT DISTINCT '{\"BILLING_DAY\" : \"'+BILLING_DAY+'\",\"BILLING_END_DATE\" : \"'+BILLING_END_DATE+'\",\"BILLING_NOTES\" : \"'+BILLING_NOTES+'\",\"BILLING_START_DATE\" : \"'+BILLING_START_DATE+'\",\"BOOKING_METHOD\" : \"'+BOOKING_METHOD+'\",\"PO_DATE\" : \"'+PO_DATE+'\",\"PO_NUMBER\" : \"'+PO_NUMBER+'\",\"QUOTE_ID\" : \"'+QUOTE_ID+'\",\"SERVICE_AGREEMENT_NUMBER\" : \"'+SERVICE_AGREEMENT_NUMBER+'\",\"SESSION_ID\" : \"'+SESSION_ID+'\",\"LINE\" : \"'+LINE+'\",\"SERVICE_ID\" : \"'+SERVICE_ID+'\",\"IS_CHANGED\" : \"'+IS_CHANGED+'\",\"QTEREV_ID\" : \"'+QTEREV_ID+'\" }' AS JSON from (SELECT DISTINCT ISNULL(CONVERT(VARCHAR,BILLING_DAY),'') AS	BILLING_DAY,ISNULL(CONVERT(VARCHAR(11),BILLING_END_DATE,101),'') AS	BILLING_END_DATE,ISNULL(BILLING_NOTES,'') AS BILLING_NOTES,ISNULL(CONVERT(VARCHAR(11),BILLING_START_DATE,101),'') AS	BILLING_START_DATE,ISNULL(BOOKING_METHOD,'') AS	BOOKING_METHOD,ISNULL(CONVERT(VARCHAR(11),PO_DATE,101),'') AS PO_DATE,ISNULL(PO_NUMBER,'')  AS	PO_NUMBER ,ISNULL(QUOTE_ID,'') AS	QUOTE_ID,ISNULL(SERVICE_AGREEMENT_NUMBER,'')  AS	SERVICE_AGREEMENT_NUMBER,"+str(timestamp_sessionid)+" as SESSION_ID ,ISNULL(CONVERT(VARCHAR,QTEREV_ID),'') AS	QTEREV_ID,ISNULL(CONVERT(VARCHAR,LINE),'') AS LINE,ISNULL(SERVICE_ID,'') AS SERVICE_ID,'' AS IS_CHANGED FROM SAQRIB(NOLOCK)  WHERE SAQRIB.QUOTE_ID = '"+str(Qt_ID)+"' ) t	) A FOR XML PATH ('')  ), 1, 1, '')+']','amp;#','#') AS RESULT)A ")

		#SAQDOC
		SAQDOC_QUERY = SqlHelper.GetFirst(
				"SELECT CASE WHEN ISNULL(RESULT,'') = '' THEN '' ELSE RESULT END AS RESULT FROM (SELECT replace ('\"SAQDOC\": ['+STUFF((SELECT ','+ JSON FROM (SELECT DISTINCT '{\"DOCUMENT_ID\" : \"'+DOCUMENT_ID+'\",\"DOCUMENT_NAME\" : \"'+DOCUMENT_NAME+'\",\"DOCUMENT_PATH\" : \"'+DOCUMENT_PATH+'\",\"LANGUAGE_ID\" : \"'+LANGUAGE_ID+'\",\"QUOTE_ID\" : \"'+QUOTE_ID+'\",\"STATUS\" : \"'+STATUS+'\",\"SESSION_ID\" : \"'+SESSION_ID+'\",\"QTEREV_ID\" : \"'+QTEREV_ID+'\"}' AS JSON from (SELECT DISTINCT  ISNULL(DOCUMENT_ID,'') AS	DOCUMENT_ID,ISNULL(DOCUMENT_NAME,'') AS	DOCUMENT_NAME,ISNULL(DOCUMENT_PATH,'') AS DOCUMENT_PATH,ISNULL(LANGUAGE_ID,'')	AS	LANGUAGE_ID,ISNULL(QUOTE_ID,'')	AS	QUOTE_ID,ISNULL(STATUS,'')	AS	STATUS,"+str(timestamp_sessionid)+" as SESSION_ID,ISNULL(CONVERT(VARCHAR,QTEREV_ID),'') AS	QTEREV_ID FROM SAQDOC(NOLOCK)  WHERE SAQDOC.QUOTE_ID = '"+str(Qt_ID)+"'  ) t 	) A FOR XML PATH ('')  ), 1, 1, '')+']','amp;#','#') AS RESULT)A "
			)

		#SAQRIT 
		SAQITM_QUERY = SqlHelper.GetFirst("SELECT CASE WHEN ISNULL(RESULT,'') = '' THEN '' ELSE RESULT END AS RESULT FROM (SELECT replace ('\"SAQRIT\": ['+STUFF((SELECT ','+ JSON FROM (SELECT DISTINCT '{\"GLOBAL_CURRENCY\" : \"'+GLOBAL_CURRENCY+'\",\"PLANT_ID\" : \"'+PLANT_ID+'\",\"QUANTITY\" : \"'+QUANTITY+'\",\"QUOTE_ID\" : \"'+QUOTE_ID+'\",\"SERVICE_ID\" : \"'+SERVICE_ID+'\",\"TAXCLASSIFICATION_DESCRIPTION\" : \"'+TAXCLASSIFICATION_DESCRIPTION+'\",\"TAX_AMOUNT\" : \"'+TAX_AMOUNT+'\",\"TAX_PERCENTAGE\" : \"'+TAX_PERCENTAGE+'\",\"QTEREV_ID\" : \"'+QTEREV_ID+'\",\"NET_PRICE_INGL_CURR\" : \"'+NET_PRICE_INGL_CURR+'\",\"TAX_AMOUNT_INGL_CURR\" : \"'+TAX_AMOUNT_INGL_CURR+'\",\"SESSION_ID\" : \"'+SESSION_ID+'\",\"YEAR_1\" : \"'+YEAR_1+'\",\"YEAR_2\" : \"'+YEAR_2+'\",\"YEAR_3\" : \"'+YEAR_3+'\",\"YEAR_4\" : \"'+YEAR_4+'\",\"YEAR_5\" : \"'+YEAR_5+'\",\"NET_VALUE_INGL_CURR\" : \"'+NET_VALUE_INGL_CURR+'\",\"YEAR_1_INGL_CURR\" : \"'+YEAR_1_INGL_CURR+'\",\"YEAR_2_INGL_CURR\" : \"'+YEAR_2_INGL_CURR+'\",\"YEAR_3_INGL_CURR\" : \"'+YEAR_3_INGL_CURR+'\",\"YEAR_4_INGL_CURR\" : \"'+YEAR_4_INGL_CURR+'\",\"YEAR_5_INGL_CURR\" : \"'+YEAR_5_INGL_CURR+'\",\"CONTRACT_VALID_FROM\" : \"'+CONTRACT_VALID_FROM+'\",\"CONTRACT_VALID_TO\" : \"'+CONTRACT_VALID_TO+'\",\"DOC_CURRENCY\" : \"'+DOC_CURRENCY+'\",\"EXCHANGE_RATE\" : \"'+EXCHANGE_RATE+'\",\"EXCHANGE_RATE_DATE\" : \"'+EXCHANGE_RATE_DATE+'\",\"FABLOCATION_ID\" : \"'+FABLOCATION_ID+'\",\"GL_ACCOUNT_NO\" : \"'+GL_ACCOUNT_NO+'\",\"GREENBOOK\" : \"'+GREENBOOK+'\",\"LINE\" : \"'+LINE+'\",\"DISCOUNT_AMOUNT_INGL_CURR\" : \"'+DISCOUNT_AMOUNT_INGL_CURR+'\",\"TAXCLASSIFICATION_ID\" : \"'+TAXCLASSIFICATION_ID+'\",\"MODULE_ID\" : \"'+MODULE_ID+'\",\"MODULE_NAME\" : \"'+MODULE_NAME+'\",\"OBJECT_ID\" : \"'+OBJECT_ID+'\",\"OBJECT_TYPE\" : \"'+OBJECT_TYPE+'\",\"PM_LEVEL\" : \"'+PM_LEVEL+'\",\"PROFIT_CENTER\" : \"'+PROFIT_CENTER+'\",\"REF_SALESORDER\" : \"'+REF_SALESORDER+'\",\"STATUS\" : \"'+STATUS+'\",\"COMVAL_INGL_CURR\" : \"'+COMVAL_INGL_CURR+'\",\"ESTVAL_INGL_CURR\" : \"'+ESTVAL_INGL_CURR+'\",\"NET_VALUE\" : \"'+NET_VALUE+'\",\"UNIT_PRICE\" : \"'+UNIT_PRICE+'\",\"UNIT_PRICE_INGL_CURR\" : \"'+UNIT_PRICE_INGL_CURR+'\",\"NET_PRICE\" : \"'+NET_PRICE+'\"}' AS JSON from (SELECT DISTINCT ISNULL(GLOBAL_CURRENCY,'') AS	GLOBAL_CURRENCY,ISNULL(STATUS,'') AS STATUS,ISNULL(CONVERT(VARCHAR(11),CONTRACT_VALID_FROM,101),'') AS CONTRACT_VALID_FROM,ISNULL(CONVERT(VARCHAR,LINE),'') AS	LINE,'' AS DISCOUNT_AMOUNT_INGL_CURR,ISNULL(CONVERT(VARCHAR,TAXCLASSIFICATION_ID),'') AS	TAXCLASSIFICATION_ID,ISNULL(CONVERT(VARCHAR(11),CONTRACT_VALID_TO,101),'')	AS	CONTRACT_VALID_TO,ISNULL(PLANT_ID,'') AS PLANT_ID,ISNULL(CONVERT(VARCHAR,QUANTITY),'')	AS	QUANTITY,ISNULL(QUOTE_ID,'') AS QUOTE_ID,ISNULL(DOC_CURRENCY,'') AS DOC_CURRENCY,ISNULL(CONVERT(VARCHAR,NET_PRICE),'') AS NET_PRICE,ISNULL(SERVICE_ID,'') AS	SERVICE_ID,ISNULL(TAXCLASSIFICATION_DESCRIPTION,'') AS TAXCLASSIFICATION_DESCRIPTION,ISNULL(CONVERT(VARCHAR,TAX_AMOUNT),'')	AS TAX_AMOUNT,ISNULL(CONVERT(VARCHAR,TAX_PERCENTAGE),'') AS	TAX_PERCENTAGE,ISNULL(CONVERT(VARCHAR,QTEREV_ID),'') AS	QTEREV_ID,ISNULL(CONVERT(VARCHAR,NET_PRICE_INGL_CURR),'') AS NET_PRICE_INGL_CURR,ISNULL(CONVERT(VARCHAR,TAX_AMOUNT_INGL_CURR),'') AS TAX_AMOUNT_INGL_CURR,"+str(timestamp_sessionid)+" as SESSION_ID,ISNULL(CONVERT(VARCHAR,YEAR_1),'') AS YEAR_1,ISNULL(CONVERT(VARCHAR,YEAR_2),'') AS YEAR_2,ISNULL(CONVERT(VARCHAR,YEAR_3),'') AS YEAR_3,ISNULL(CONVERT(VARCHAR,YEAR_4),'') AS YEAR_4,ISNULL(CONVERT(VARCHAR,YEAR_5),'') AS YEAR_5,ISNULL(CONVERT(VARCHAR,YEAR_1_INGL_CURR),'') AS YEAR_1_INGL_CURR,ISNULL(CONVERT(VARCHAR,YEAR_2_INGL_CURR),'') AS YEAR_2_INGL_CURR,ISNULL(CONVERT(VARCHAR,YEAR_3_INGL_CURR),'') AS YEAR_3_INGL_CURR,ISNULL(CONVERT(VARCHAR,YEAR_4_INGL_CURR),'') AS YEAR_4_INGL_CURR,ISNULL(CONVERT(VARCHAR,YEAR_5_INGL_CURR),'') AS YEAR_5_INGL_CURR,ISNULL(CONVERT(VARCHAR,NET_VALUE_INGL_CURR),'') AS NET_VALUE_INGL_CURR,ISNULL(CONVERT(VARCHAR,EXCHANGE_RATE),'') AS EXCHANGE_RATE,ISNULL(EXCHANGE_RATE_DATE,'') AS EXCHANGE_RATE_DATE,ISNULL(FABLOCATION_ID,'') AS FABLOCATION_ID,ISNULL(GL_ACCOUNT_NO,'') AS GL_ACCOUNT_NO,ISNULL(GREENBOOK,'') AS GREENBOOK,ISNULL(MODULE_ID,'') AS MODULE_ID,ISNULL(MODULE_NAME,'') AS MODULE_NAME,ISNULL(OBJECT_ID,'') AS OBJECT_ID,ISNULL(OBJECT_TYPE,'') AS OBJECT_TYPE,ISNULL(NULL,'') AS PM_LEVEL,ISNULL(PROFIT_CENTER,'') AS PROFIT_CENTER,ISNULL(REF_SALESORDER,'') AS REF_SALESORDER,ISNULL(CONVERT(VARCHAR,COMVAL_INGL_CURR),'') AS COMVAL_INGL_CURR,ISNULL(CONVERT(VARCHAR,ESTVAL_INGL_CURR),'') AS ESTVAL_INGL_CURR,ISNULL(CONVERT(VARCHAR,NET_VALUE),'') AS NET_VALUE,ISNULL(CONVERT(VARCHAR,UNIT_PRICE),'') AS UNIT_PRICE,ISNULL(CONVERT(VARCHAR,UNIT_PRICE_INGL_CURR),'') AS UNIT_PRICE_INGL_CURR FROM SAQRIT(NOLOCK)  WHERE SAQRIT.QUOTE_ID = '"+str(Qt_ID)+"' ) t 	) A FOR XML PATH ('')  ), 1, 1, '')+']','amp;#','#') AS RESULT)A ")	

		#SAQRIO
		SAQRIO_QUERY = SqlHelper.GetFirst("SELECT CASE WHEN ISNULL(RESULT,'') = '' THEN '' ELSE RESULT END AS RESULT FROM (SELECT replace ('\"SAQRIO\": ['+STUFF((SELECT ','+ JSON FROM (SELECT DISTINCT '{\"CUSTOMER_TOOL_ID\" : \"'+CUSTOMER_TOOL_ID+'\",\"EQUIPMENT_ID\" : \"'+EQUIPMENT_ID+'\",\"FABLOCATION_ID\" : \"'+FABLOCATION_ID+'\",\"GREENBOOK\" : \"'+GREENBOOK+'\",\"KPU\" : \"'+KPU+'\",\"LINE\" : \"'+LINE+'\",\"SERVICE_ID\" : \"'+SERVICE_ID+'\",\"QUOTE_ID\" : \"'+QUOTE_ID+'\",\"SERIAL_NUMBER\" : \"'+SERIAL_NUMBER+'\",\"TECHNOLOGY\" : \"'+TECHNOLOGY+'\",\"TOOL_CONFIGURATION\" : \"'+TOOL_CONFIGURATION+'\",\"WAFER_SIZE\" : \"'+WAFER_SIZE+'\",\"QTEREV_ID\" : \"'+QTEREV_ID+'\",\"SESSION_ID\" : \"'+SESSION_ID+'\"}' AS JSON from (SELECT DISTINCT ISNULL(CUSTOMER_TOOL_ID,'') AS	CUSTOMER_TOOL_ID,ISNULL(EQUIPMENT_ID,'') AS EQUIPMENT_ID,ISNULL(NULL,'') AS FABLOCATION_ID,ISNULL(GREENBOOK,'') AS	GREENBOOK,ISNULL(KPU,'')	AS	KPU,ISNULL(CONVERT(VARCHAR,LINE),'') AS LINE,ISNULL(SERVICE_ID,'')	AS	SERVICE_ID,ISNULL(QUOTE_ID,'') AS QUOTE_ID,ISNULL(SERIAL_NUMBER,'') AS SERIAL_NUMBER,ISNULL(TECHNOLOGY,'') AS TECHNOLOGY,ISNULL(TOOL_CONFIGURATION,'') AS TOOL_CONFIGURATION,ISNULL(WAFER_SIZE,'') AS	WAFER_SIZE,ISNULL(CONVERT(VARCHAR,QTEREV_ID),'') AS	QTEREV_ID,"+str(timestamp_sessionid)+" as SESSION_ID FROM SAQRIO(NOLOCK)  WHERE SAQRIO.QUOTE_ID = '"+str(Qt_ID)+"' ) t 	) A FOR XML PATH ('')  ), 1, 1, '')+']','amp;#','#') AS RESULT)A ")	
		
		#SAQRIP
		SAQRIP_QUERY = SqlHelper.GetFirst("SELECT CASE WHEN ISNULL(RESULT,'') = '' THEN '' ELSE RESULT END AS RESULT FROM (SELECT replace ('\"SAQRIP\": ['+STUFF((SELECT ','+ JSON FROM (SELECT DISTINCT '{\"PROD_INSP_MEMO\" : \"'+PROD_INSP_MEMO+'\",\"PART_NUMBER\" : \"'+PART_NUMBER+'\",\"NEW_PART\" : \"'+NEW_PART+'\",\"QUANTITY\" : \"'+QUANTITY+'\",\"LINE\" : \"'+LINE+'\",\"SERVICE_ID\" : \"'+SERVICE_ID+'\",\"QTEREV_ID\" : \"'+QTEREV_ID+'\",\"QUOTE_ID\" : \"'+QUOTE_ID+'\",\"SESSION_ID\" : \"'+SESSION_ID+'\"}' AS JSON from (SELECT DISTINCT ISNULL(NULL,'') AS	PROD_INSP_MEMO,ISNULL(PART_NUMBER,'') AS PART_NUMBER,ISNULL(NULL,'') AS NEW_PART,ISNULL(CONVERT(VARCHAR,LINE),'') AS LINE,ISNULL(SERVICE_ID,'')	AS	SERVICE_ID,ISNULL(QUOTE_ID,'') AS QUOTE_ID,ISNULL(CONVERT(VARCHAR,QTEREV_ID),'') AS	QTEREV_ID,"+str(timestamp_sessionid)+" as SESSION_ID,ISNULL(CONVERT(VARCHAR,QUANTITY),'') AS QUANTITY FROM SAQRIP(NOLOCK)  WHERE SAQRIP.QUOTE_ID = '"+str(Qt_ID)+"' ) t 	) A FOR XML PATH ('')  ), 1, 1, '')+']','amp;#','#') AS RESULT)A ")	

		#SAQICO
		SAQICO_QUERY = SqlHelper.GetFirst("SELECT CASE WHEN ISNULL(RESULT,'') = '' THEN '' ELSE RESULT END AS RESULT FROM (SELECT replace ('\"SAQICO\": ['+STUFF((SELECT ','+ JSON FROM (SELECT DISTINCT '{\"ANNUAL_BENCHMARK_BOOKING_PRICE\" : \"'+ANNUAL_BENCHMARK_BOOKING_PRICE+'\",\"BD_DISCOUNT\" : \"'+BD_DISCOUNT+'\",\"BD_PRICE_MARGIN\" : \"'+BD_PRICE_MARGIN+'\",\"BENCHMARKING_THRESHOLD\" : \"'+BENCHMARKING_THRESHOLD+'\",\"CEILING_PRICE_MARGIN\" : \"'+CEILING_PRICE_MARGIN+'\",\"CLEANING_COST\" : \"'+CLEANING_COST+'\",\"CONTRACT_ID\" : \"'+CONTRACT_ID+'\",\"CONTRACT_VALID_FROM\" : \"'+CONTRACT_VALID_FROM+'\",\"CONTRACT_VALID_TO\" : \"'+CONTRACT_VALID_TO+'\",\"CM_PART_COST\" : \"'+CM_PART_COST+'\",\"CUSTOMER_TOOL_ID\" : \"'+CUSTOMER_TOOL_ID+'\",\"DISCOUNT\" : \"'+DISCOUNT+'\",\"ENTITLEMENT_COST_IMPACT\" : \"'+ENTITLEMENT_COST_IMPACT+'\",\"EQUIPMENTCATEGORY_ID\" : \"'+EQUIPMENTCATEGORY_ID+'\",\"EQUIPMENT_ID\" : \"'+EQUIPMENT_ID+'\",\"EQUIPMENT_STATUS\" : \"'+EQUIPMENT_STATUS+'\",\"FABLOCATION_ID\" : \"'+FABLOCATION_ID+'\",\"GLOBAL_CURRENCY\" : \"'+GLOBAL_CURRENCY+'\",\"GREENBOOK\" : \"'+GREENBOOK+'\",\"KPI_COST\" : \"'+KPI_COST+'\",\"LABOR_COST\" : \"'+LABOR_COST+'\",\"LINE\" : \"'+LINE+'\",\"MNT_PLANT_ID\" : \"'+MNT_PLANT_ID+'\",\"PLATFORM\" : \"'+PLATFORM+'\",\"PM_PART_COST\" : \"'+PM_PART_COST+'\",\"PRICE_BENCHMARK_TYPE\" : \"'+PRICE_BENCHMARK_TYPE+'\",\"QUOTE_ID\" : \"'+QUOTE_ID+'\",\"SALESORG_ID\" : \"'+SALESORG_ID+'\" ,\"SERIAL_NO\" : \"'+SERIAL_NO+'\",\"SERVICE_ID\" : \"'+SERVICE_ID+'\",\"STATUS\" : \"'+STATUS+'\",\"TARGET_PRICE_MARGIN\" : \"'+TARGET_PRICE_MARGIN+'\" ,\"TECHNOLOGY\" : \"'+TECHNOLOGY+'\",\"TOOL_CONFIGURATION\" : \"'+TOOL_CONFIGURATION+'\",\"WARRANTY_END_DATE\" : \"'+WARRANTY_END_DATE+'\",\"WARRANTY_START_DATE\" : \"'+WARRANTY_START_DATE+'\",\"QTEREV_ID\" : \"'+QTEREV_ID+'\",\"BD_PRICE_INGL_CURR\" : \"'+BD_PRICE_INGL_CURR+'\",\"CEILING_PRICE_INGL_CURR\" : \"'+CEILING_PRICE_INGL_CURR+'\",\"DISCOUNT_AMOUNT_INGL_CURR\" : \"'+DISCOUNT_AMOUNT_INGL_CURR+'\",\"ENTPRCIMP_INGL_CURR\" : \"'+ENTPRCIMP_INGL_CURR+'\",\"MODEL_PRICE_INGL_CURR\" : \"'+MODEL_PRICE_INGL_CURR+'\",\"NET_PRICE_INGL_CURR\" : \"'+NET_PRICE_INGL_CURR+'\",\"SLSDIS_PRICE_INGL_CURR\" : \"'+SLSDIS_PRICE_INGL_CURR+'\",\"TARGET_PRICE_INGL_CURR\" : \"'+TARGET_PRICE_INGL_CURR+'\",\"TOTAL_COST_WOSEEDSTOCK\" : \"'+TOTAL_COST_WOSEEDSTOCK+'\",\"TOTAL_COST_WSEEDSTOCK\" : \"'+TOTAL_COST_WSEEDSTOCK+'\",\"SESSION_ID\" : \"'+SESSION_ID+'\",\"ASSEMBLY_ID\" : \"'+ASSEMBLY_ID+'\",\"LESS_THAN_QTLY_PM_COST\" : \"'+LESS_THAN_QTLY_PM_COST+'\",\"GREATER_THAN_QTLY_PM_COST\" : \"'+GREATER_THAN_QTLY_PM_COST+'\",\"ADD_COST_IMPACT\" : \"'+ADD_COST_IMPACT+'\",\"ADD_PRICE_IMPACT\" : \"'+ADD_PRICE_IMPACT+'\",\"ANNUAL_PMSA_COST\" : \"'+ANNUAL_PMSA_COST+'\",\"ANNUAL_PMSA_PRICE\" : \"'+ANNUAL_PMSA_PRICE+'\",\"BILLING_TYPE\" : \"'+BILLING_TYPE+'\",\"CNTPRI_INGL_CURR\" : \"'+CNTPRI_INGL_CURR+'\",\"CNTCST_INGL_CURR\" : \"'+CNTCST_INGL_CURR+'\",\"ESTVAL_INGL_CURR\" : \"'+ESTVAL_INGL_CURR+'\",\"FAILURE_COST\" : \"'+FAILURE_COST+'\",\"GOT_CODE\" : \"'+GOT_CODE+'\",\"HEAD_REBUILD_QTY\" : \"'+HEAD_REBUILD_QTY+'\",\"WARRANTY_PERIOD\" : \"'+WARRANTY_PERIOD+'\",\"KIT_NAME\" : \"'+KIT_NAME+'\",\"KIT_NUMBER\" : \"'+KIT_NUMBER+'\",\"KPU\" : \"'+KPU+'\",\"YEAR_OVER_YEAR\" : \"'+YEAR_OVER_YEAR+'\",\"SALDIS_PERCENT\" : \"'+SALDIS_PERCENT+'\",\"SLSDIS_PRICE_MARGIN\" : \"'+SLSDIS_PRICE_MARGIN+'\",\"LOGISTICS_COST\" : \"'+LOGISTICS_COST+'\",\"METROLOGY_COST\" : \"'+METROLOGY_COST+'\",\"MODULE_ID\" : \"'+MODULE_ID+'\",\"MODULE_NAME\" : \"'+MODULE_NAME+'\",\"OBJECT_ID\" : \"'+OBJECT_ID+'\",\"OBJECT_TYPE\" : \"'+OBJECT_TYPE+'\",\"OUTSOURCE_COST\" : \"'+OUTSOURCE_COST+'\",\"PER_EVENT_PMSA_COST\" : \"'+PER_EVENT_PMSA_COST+'\",\"PER_EVENT_PMSA_PRICE\" : \"'+PER_EVENT_PMSA_PRICE+'\",\"PM_COUNT_YEAR\" : \"'+PM_COUNT_YEAR+'\",\"NET_VALUE_INGL_CURR\" : \"'+NET_VALUE_INGL_CURR+'\",\"TAX_AMOUNT_INGL_CURR\" : \"'+TAX_AMOUNT_INGL_CURR+'\",\"ENTITLEMENT_PRICE_IMPACT\" : \"'+ENTITLEMENT_PRICE_IMPACT+'\",\"SAP_PART_NUMBER\" : \"'+SAP_PART_NUMBER+'\",\"SRVTAXCAT_ID\" : \"'+SRVTAXCAT_ID+'\",\"SRVTAXCLA_ID\" : \"'+SRVTAXCLA_ID+'\",\"SRCACC_ID\" : \"'+SRCACC_ID+'\",\"PM_LEVEL\" : \"'+PM_LEVEL+'\",\"SRCFBL_ID\" : \"'+SRCFBL_ID+'\",\"PM_ID\" : \"'+PM_ID+'\",\"QUANTITY\" : \"'+QUANTITY+'\",\"RECOATING_COST\" : \"'+RECOATING_COST+'\",\"REFURB_COST\" : \"'+REFURB_COST+'\",\"REPLACE_COST\" : \"'+REPLACE_COST+'\",\"ADJ_PM_FREQUENCY\" : \"'+ADJ_PM_FREQUENCY+'\",\"SEEDSTOCK_COST\" : \"'+SEEDSTOCK_COST+'\",\"SSCM_PM_FREQUENCY\" : \"'+SSCM_PM_FREQUENCY+'\",\"YEAR\" : \"'+YEAR+'\"}' AS JSON from (SELECT DISTINCT  ISNULL(CONVERT(VARCHAR,ANNUAL_BENCHMARK_BOOKING_PRICE),'')	AS	ANNUAL_BENCHMARK_BOOKING_PRICE,ISNULL(CONVERT(VARCHAR,BD_DISCOUNT),'') AS BD_DISCOUNT,ISNULL(CONVERT(VARCHAR,BD_PRICE_MARGIN),'') AS BD_PRICE_MARGIN,ISNULL(CONVERT(VARCHAR,BENCHMARKING_THRESHOLD),'')	AS	BENCHMARKING_THRESHOLD,ISNULL(CONVERT(VARCHAR,CEILING_PRICE_MARGIN),'') AS CEILING_PRICE_MARGIN,ISNULL(CONVERT(VARCHAR,CLEANING_COST),'') AS	CLEANING_COST,ISNULL(CONTRACT_ID,'') AS CONTRACT_ID,ISNULL(CONVERT(VARCHAR(11),CONTRACT_VALID_FROM,101),'') AS CONTRACT_VALID_FROM,ISNULL(CONVERT(VARCHAR(11),CONTRACT_VALID_TO,101),'') AS CONTRACT_VALID_TO,ISNULL(CONVERT(VARCHAR,CM_PART_COST),'') AS CM_PART_COST,ISNULL(replace(CUSTOMER_TOOL_ID,'\"',''),'') AS	CUSTOMER_TOOL_ID,ISNULL(CONVERT(VARCHAR,DISCOUNT),'')	AS	DISCOUNT,ISNULL(CONVERT(VARCHAR,ENTITLEMENT_COST_IMPACT),'') AS	ENTITLEMENT_COST_IMPACT,ISNULL(EQUIPMENTCATEGORY_ID,'') AS	EQUIPMENTCATEGORY_ID,ISNULL(EQUIPMENT_ID,'') AS	EQUIPMENT_ID,ISNULL(EQUIPMENT_STATUS,'') AS EQUIPMENT_STATUS,ISNULL(FABLOCATION_ID,'') AS FABLOCATION_ID,ISNULL(GLOBAL_CURRENCY,'') AS GLOBAL_CURRENCY,ISNULL(GREENBOOK,'') AS GREENBOOK,ISNULL(CONVERT(VARCHAR,KPI_COST),'') AS KPI_COST,ISNULL(CONVERT(VARCHAR,LABOR_COST),'') AS LABOR_COST,ISNULL(LINE,'') AS LINE,ISNULL(MNT_PLANT_ID,'') AS	MNT_PLANT_ID,ISNULL(PLATFORM,'') AS PLATFORM,ISNULL(CONVERT(VARCHAR,PM_PART_COST),'') AS	PM_PART_COST,ISNULL(PRICE_BENCHMARK_TYPE,'') AS	PRICE_BENCHMARK_TYPE ,ISNULL(QUOTE_ID,'') AS QUOTE_ID,ISNULL(SALESORG_ID,'') AS SALESORG_ID,ISNULL(SERIAL_NO,'') AS SERIAL_NO,ISNULL(SERVICE_ID,'') AS	SERVICE_ID,ISNULL(STATUS,'') AS STATUS,ISNULL(CONVERT(VARCHAR,TARGET_PRICE_MARGIN),'') AS TARGET_PRICE_MARGIN,ISNULL(TECHNOLOGY,'') AS TECHNOLOGY,ISNULL(TOOL_CONFIGURATION,'') AS TOOL_CONFIGURATION,ISNULL(WARRANTY_END_DATE,'') AS	WARRANTY_END_DATE,ISNULL(WARRANTY_START_DATE,'') AS WARRANTY_START_DATE,ISNULL(CONVERT(VARCHAR,QTEREV_ID),'') AS QTEREV_ID,ISNULL(CONVERT(VARCHAR,BD_PRICE_INGL_CURR),'') AS BD_PRICE_INGL_CURR,ISNULL(CONVERT(VARCHAR,CEILING_PRICE_INGL_CURR),'') AS CEILING_PRICE_INGL_CURR,ISNULL(CONVERT(VARCHAR,DISCOUNT_AMOUNT_INGL_CURR),'') AS DISCOUNT_AMOUNT_INGL_CURR,ISNULL(CONVERT(VARCHAR,ENTPRCIMP_INGL_CURR),'') AS ENTPRCIMP_INGL_CURR,ISNULL(CONVERT(VARCHAR,MODEL_PRICE_INGL_CURR),'') AS MODEL_PRICE_INGL_CURR,ISNULL(CONVERT(VARCHAR,NET_PRICE_INGL_CURR),'') AS NET_PRICE_INGL_CURR,ISNULL(CONVERT(VARCHAR,SLSDIS_PRICE_INGL_CURR),'') AS SLSDIS_PRICE_INGL_CURR,ISNULL(CONVERT(VARCHAR,TARGET_PRICE_INGL_CURR),'') AS TARGET_PRICE_INGL_CURR,ISNULL(CONVERT(VARCHAR,TOTAL_COST_WOSEEDSTOCK),'') AS TOTAL_COST_WOSEEDSTOCK,ISNULL(CONVERT(VARCHAR,TOTAL_COST_WSEEDSTOCK),'') AS TOTAL_COST_WSEEDSTOCK,"+str(timestamp_sessionid)+" as SESSION_ID,ISNULL(ASSEMBLY_ID,'') AS	ASSEMBLY_ID,ISNULL(CONVERT(VARCHAR,LESS_THAN_QTLY_PM_COST),'') AS LESS_THAN_QTLY_PM_COST,ISNULL(CONVERT(VARCHAR,GREATER_THAN_QTLY_PM_COST),'') AS GREATER_THAN_QTLY_PM_COST,ISNULL(CONVERT(VARCHAR,ADD_COST_IMPACT),'') AS ADD_COST_IMPACT,ISNULL(CONVERT(VARCHAR,ADD_PRICE_IMPACT),'') AS ADD_PRICE_IMPACT,ISNULL(CONVERT(VARCHAR,ANNUAL_PMSA_COST),'') AS ANNUAL_PMSA_COST,ISNULL(CONVERT(VARCHAR,ANNUAL_PMSA_PRICE),'') AS ANNUAL_PMSA_PRICE,ISNULL(BILLING_TYPE,'') AS	BILLING_TYPE,ISNULL(CONVERT(VARCHAR,CNTPRI_INGL_CURR),'') AS CNTPRI_INGL_CURR,ISNULL(CONVERT(VARCHAR,CNTCST_INGL_CURR),'') AS CNTCST_INGL_CURR,ISNULL(CONVERT(VARCHAR,ESTVAL_INGL_CURR),'') AS ESTVAL_INGL_CURR,ISNULL(CONVERT(VARCHAR,FAILURE_COST),'') AS FAILURE_COST,ISNULL(GOT_CODE,'') AS	GOT_CODE,ISNULL(CONVERT(VARCHAR,HEAD_REBUILD_QTY),'') AS HEAD_REBUILD_QTY,ISNULL(CONVERT(VARCHAR,WARRANTY_PERIOD),'') AS WARRANTY_PERIOD,ISNULL(KIT_NAME,'') AS	KIT_NAME,ISNULL(KIT_NUMBER,'') AS KIT_NUMBER,ISNULL(KPU,'') AS KPU,ISNULL(CONVERT(VARCHAR,YEAR_OVER_YEAR),'') AS YEAR_OVER_YEAR,ISNULL(CONVERT(VARCHAR,SALDIS_PERCENT),'') AS SALDIS_PERCENT,ISNULL(CONVERT(VARCHAR,SLSDIS_PRICE_MARGIN),'') AS SLSDIS_PRICE_MARGIN,ISNULL(CONVERT(VARCHAR,LOGISTICS_COST),'') AS LOGISTICS_COST,ISNULL(CONVERT(VARCHAR,METROLOGY_COST),'') AS METROLOGY_COST,ISNULL(MODULE_ID,'') AS	MODULE_ID,ISNULL(MODULE_NAME,'') AS	MODULE_NAME,ISNULL(OBJECT_ID,'') AS	OBJECT_ID,ISNULL(OBJECT_TYPE,'') AS	OBJECT_TYPE,ISNULL(CONVERT(VARCHAR,OUTSOURCE_COST),'') AS OUTSOURCE_COST,ISNULL(CONVERT(VARCHAR,PER_EVENT_PMSA_COST),'') AS PER_EVENT_PMSA_COST,ISNULL(CONVERT(VARCHAR,PER_EVENT_PMSA_PRICE),'') AS PER_EVENT_PMSA_PRICE,ISNULL(CONVERT(VARCHAR,PM_COUNT_YEAR),'') AS PM_COUNT_YEAR,'' AS NET_VALUE_INGL_CURR,'' AS TAX_AMOUNT_INGL_CURR,'' AS ENTITLEMENT_PRICE_IMPACT,'' AS SAP_PART_NUMBER,'' AS SRVTAXCAT_ID,'' AS SRVTAXCLA_ID,'' AS SRCACC_ID,'' AS SRCFBL_ID,''  AS PM_LEVEL,ISNULL(PM_ID,'') AS	PM_ID,ISNULL(CONVERT(VARCHAR,QUANTITY),'') AS QUANTITY,ISNULL(CONVERT(VARCHAR,RECOATING_COST),'') AS RECOATING_COST,ISNULL(CONVERT(VARCHAR,REFURB_COST),'') AS REFURB_COST,ISNULL(CONVERT(VARCHAR,REPLACE_COST),'') AS REPLACE_COST,ISNULL(CONVERT(VARCHAR,ADJ_PM_FREQUENCY),'') AS ADJ_PM_FREQUENCY,ISNULL(CONVERT(VARCHAR,SEEDSTOCK_COST),'') AS SEEDSTOCK_COST,ISNULL(CONVERT(VARCHAR,SSCM_PM_FREQUENCY),'') AS SSCM_PM_FREQUENCY,ISNULL(YEAR,'') AS	YEAR FROM SAQICO(NOLOCK)  WHERE SAQICO.QUOTE_ID = '"+str(Qt_ID)+"'  ) t 	) A FOR XML PATH ('')  ), 1, 1, '')+']','amp;#','#') AS RESULT)A ")


		#SAQICA
		SAQICA_QUERY = SqlHelper.GetFirst(
				"SELECT CASE WHEN ISNULL(RESULT,'') = '' THEN '' ELSE RESULT END AS RESULT FROM (SELECT replace ('\"SAQICA\": ['+STUFF((SELECT ','+ JSON FROM (SELECT DISTINCT '{\"ASSEMBLY_ID\" : \"'+ASSEMBLY_ID+'\",\"ASSEMBLY_STATUS\" : \"'+ASSEMBLY_STATUS+'\",\"EQUIPMENTCATEGORY_ID\" : \"'+EQUIPMENTCATEGORY_ID+'\",\"EQUIPMENT_ID\" : \"'+EQUIPMENT_ID+'\",\"EQUIPMENT_LINE_ID\" : \"'+EQUIPMENT_LINE_ID+'\",\"EQUIPMENTTYPE_ID\" : \"'+EQUIPMENTTYPE_ID+'\",\"FABLOCATION_ID\" : \"'+FABLOCATION_ID+'\",\"GOT_CODE\" : \"'+GOT_CODE+'\",\"INCLUDED\" : \"'+INCLUDED+'\"	,\"LINE_ITEM_ID\" : \"'+LINE_ITEM_ID+'\",\"MNT_PLANT_ID\" : \"'+MNT_PLANT_ID+'\",\"PLATFORM\" : \"'+PLATFORM+'\",\"QUOTE_ID\" : \"'+QUOTE_ID+'\",\"SALESORG_ID\" : \"'+SALESORG_ID+'\",\"SERIAL_NUMBER\" : \"'+SERIAL_NUMBER+'\",\"SERVICE_ID\" : \"'+SERVICE_ID+'\",\"COST_CALCULATION_STATUS\" : \"'+COST_CALCULATION_STATUS+'\",\"QTEREV_ID\" : \"'+QTEREV_ID+'\",\"CLEANING_COST\" : \"'+CLEANING_COST+'\",\"CM_PART_COST\" : \"'+CM_PART_COST+'\",\"KPI_COST\" : \"'+KPI_COST+'\",\"LABOR_COST\" : \"'+LABOR_COST+'\",\"PM_PART_COST\" : \"'+PM_PART_COST+'\",\"SESSION_ID\" : \"'+SESSION_ID+'\",\"TOTAL_COST_WOSEEDSTOCK\" : \"'+TOTAL_COST_WOSEEDSTOCK+'\",\"TOTAL_COST_WSEEDSTOCK\" : \"'+TOTAL_COST_WSEEDSTOCK+'\"}' AS JSON from (SELECT DISTINCT  ISNULL(ASSEMBLY_ID,'') AS	ASSEMBLY_ID,ISNULL(ASSEMBLY_STATUS,'') AS	ASSEMBLY_STATUS,ISNULL(EQUIPMENTCATEGORY_ID,'')	AS	EQUIPMENTCATEGORY_ID,ISNULL(EQUIPMENT_ID,'') AS	EQUIPMENT_ID,ISNULL(CONVERT(VARCHAR,EQUIPMENT_LINE_ID),'') AS EQUIPMENT_LINE_ID,ISNULL(EQUIPMENTTYPE_ID,'')	AS	EQUIPMENTTYPE_ID,ISNULL(FABLOCATION_ID,'')	AS	FABLOCATION_ID,ISNULL(GOT_CODE,'')	AS	GOT_CODE,ISNULL(CONVERT(VARCHAR,INCLUDED),'')  AS INCLUDED,ISNULL(CONVERT(VARCHAR,LINE_ITEM_ID),'') AS LINE_ITEM_ID,ISNULL(MNT_PLANT_ID,'')	AS	MNT_PLANT_ID,ISNULL(PLATFORM,'') AS	PLATFORM,ISNULL(QUOTE_ID,'') AS	QUOTE_ID,ISNULL(SALESORG_ID,'')	AS	SALESORG_ID,ISNULL(SERIAL_NUMBER,'') AS SERIAL_NUMBER,ISNULL(SERVICE_ID,'')	AS	SERVICE_ID,ISNULL(COST_MODULE_STATUS,'')	AS	COST_CALCULATION_STATUS,ISNULL(CONVERT(VARCHAR,QTEREV_ID),'') AS	QTEREV_ID,ISNULL(CONVERT(VARCHAR,CLEANING_COST),'') AS CLEANING_COST,ISNULL(CONVERT(VARCHAR,CM_PART_COST),'') AS CM_PART_COST,ISNULL(CONVERT(VARCHAR,KPI_COST),'') AS KPI_COST,ISNULL(CONVERT(VARCHAR,LABOR_COST),'') AS LABOR_COST,ISNULL(CONVERT(VARCHAR,PM_PART_COST),'') AS PM_PART_COST,"+str(timestamp_sessionid)+" as SESSION_ID,ISNULL(CONVERT(VARCHAR,TOTAL_COST_WOSEEDSTOCK),'') AS TOTAL_COST_WOSEEDSTOCK,ISNULL(CONVERT(VARCHAR,TOTAL_COST_WSEEDSTOCK),'') AS TOTAL_COST_WSEEDSTOCK FROM SAQICA(NOLOCK)  WHERE SAQICA.QUOTE_ID = '"+str(Qt_ID)+"'  ) t 	) A FOR XML PATH ('')  ), 1, 1, '')+']','amp;#','#') AS RESULT)A "
			)

		#SAQIFP
		SAQIFP_QUERY = SqlHelper.GetFirst(
				"SELECT CASE WHEN ISNULL(RESULT,'') = '' THEN '' ELSE RESULT END AS RESULT FROM ( SELECT replace ('\"SAQIFP\": ['+STUFF((SELECT ','+ JSON FROM (SELECT DISTINCT '{\"ANNUAL_QUANTITY\" : \"'+ANNUAL_QUANTITY+'\",\"BASEUOM_ID\" : \"'+BASEUOM_ID+'\",\"CUSTOMER_PART_NUMBER\" : \"'+CUSTOMER_PART_NUMBER+'\",\"DELIVERY_MODE\" : \"'+DELIVERY_MODE+'\",\"EXTENDED_PRICE\" : \"'+EXTENDED_PRICE+'\",\"LINE\" : \"'+LINE+'\",\"MATPRIGRP_ID\" : \"'+MATPRIGRP_ID+'\",\"Part_Line_ID\" : \"'+Part_Line_ID+'\",\"PART_NUMBER\" : \"'+PART_NUMBER+'\",\"PRICINGPROCEDURE_ID\" : \"'+PRICINGPROCEDURE_ID+'\",\"PRICING_STATUS\" : \"'+PRICING_STATUS+'\",\"QUOTE_ID\" : \"'+QUOTE_ID+'\",\"SORG_CURRENCY\" : \"'+SORG_CURRENCY+'\",\"SALESORG_ID\" : \"'+SALESORG_ID+'\",\"SALESUOM_CONVERSION_FACTOR\" : \"'+SALESUOM_CONVERSION_FACTOR+'\",\"SALESUOM_ID\" : \"'+SALESUOM_ID+'\" ,\"SCHEDULE_MODE\" : \"'+SCHEDULE_MODE+'\",\"SERVICE_ID\" : \"'+SERVICE_ID+'\",\"SRVTAXCAT_ID\" : \"'+SRVTAXCAT_ID+'\",\"SRVTAXCLA_ID\" : \"'+SRVTAXCLA_ID+'\",\"TAX\" : \"'+TAX+'\",\"TAX_PERCENTAGE\" : \"'+TAX_PERCENTAGE+'\",\"UNIT_PRICE\" : \"'+UNIT_PRICE+'\",\"VALID_FROM_DATE\" : \"'+VALID_FROM_DATE+'\",\"VALID_TO_DATE\" : \"'+VALID_TO_DATE+'\" ,\"SESSION_ID\" : \"'+SESSION_ID+'\" ,\"QTEREV_ID\" : \"'+QTEREV_ID+'\"}' AS JSON from (SELECT DISTINCT  ISNULL(CONVERT(VARCHAR,ANNUAL_QUANTITY),'') AS ANNUAL_QUANTITY,ISNULL(BASEUOM_ID,'') AS	BASEUOM_ID,ISNULL(CUSTOMER_PART_NUMBER,'')	AS	CUSTOMER_PART_NUMBER,ISNULL(DELIVERY_MODE,'') AS	DELIVERY_MODE,ISNULL(CONVERT(VARCHAR,EXTENDED_PRICE),'') AS	EXTENDED_PRICE,ISNULL(LINE,'')	AS	LINE,ISNULL(MATPRIGRP_ID,'') AS	MATPRIGRP_ID,ISNULL(CONVERT(VARCHAR,Part_Line_ID),'')  AS Part_Line_ID,ISNULL(PART_NUMBER,'') AS PART_NUMBER,ISNULL(PRICINGPROCEDURE_ID,'')	AS	PRICINGPROCEDURE_ID,ISNULL(PRICING_STATUS,'') AS	PRICING_STATUS,ISNULL(QUOTE_ID,'') AS	QUOTE_ID,ISNULL(DOC_CURRENCY,'') AS SORG_CURRENCY,ISNULL(SALESORG_ID,'')	AS	SALESORG_ID,ISNULL(CONVERT(VARCHAR,SALESUOM_CONVERSION_FACTOR),'') AS SALESUOM_CONVERSION_FACTOR,ISNULL(SALESUOM_ID,'')	AS SALESUOM_ID,ISNULL(SCHEDULE_MODE,'')  AS SCHEDULE_MODE,ISNULL(SERVICE_ID,'') AS SERVICE_ID,ISNULL(SRVTAXCAT_ID,'')	AS	SRVTAXCAT_ID,ISNULL(SRVTAXCLA_ID,'') AS	SRVTAXCLA_ID,ISNULL(CONVERT(VARCHAR,TAX),'') AS	TAX,ISNULL(CONVERT(VARCHAR,TAX_PERCENTAGE),'') AS TAX_PERCENTAGE,ISNULL(CONVERT(VARCHAR,UNIT_PRICE),'')	AS	UNIT_PRICE,ISNULL(CONVERT(VARCHAR(11),VALID_FROM_DATE,101),'') AS VALID_FROM_DATE,ISNULL(CONVERT(VARCHAR(11),VALID_TO_DATE,101),'')	AS	VALID_TO_DATE,"+str(timestamp_sessionid)+" as SESSION_ID,ISNULL(CONVERT(VARCHAR,QTEREV_ID),'') AS	QTEREV_ID FROM SAQIFP(NOLOCK)  WHERE SAQIFP.QUOTE_ID = '"+str(Qt_ID)+"'  ) t 	) A FOR XML PATH ('')  ), 1, 1, '')+']','amp;#','#') AS RESULT)A "
			)

		#SAQIBP
		SAQIBP_QUERY = SqlHelper.GetFirst(
				"SELECT CASE WHEN ISNULL(RESULT,'') = '' THEN '' ELSE RESULT END AS RESULT FROM ( SELECT replace ('\"SAQIBP\": ['+STUFF((SELECT ','+ JSON FROM (SELECT DISTINCT '{\"ANNUAL_BILLING_AMOUNT\" : \"'+ANNUAL_BILLING_AMOUNT+'\",\"BILLING_VALUE\" : \"'+BILLING_VALUE+'\",\"GLOBAL_CURRENCY\" : \"'+GLOBAL_CURRENCY+'\",\"BILLING_DATE\" : \"'+BILLING_DATE+'\",\"BILLING_DAY\" : \"'+BILLING_DAY+'\",\"BILLING_END_DATE\" : \"'+BILLING_END_DATE+'\",\"BILLING_START_DATE\" : \"'+BILLING_START_DATE+'\",\"BILLING_TYPE\" : \"'+BILLING_TYPE+'\",\"BILLING_YEAR\" : \"'+BILLING_YEAR+'\",\"EQUIPMENT_ID\" : \"'+EQUIPMENT_ID+'\",\"EQUIPMENT_QUANTITY\" : \"'+EQUIPMENT_QUANTITY+'\",\"GREENBOOK\" : \"'+GREENBOOK+'\",\"QUOTE_ID\" : \"'+QUOTE_ID+'\",\"SERVICE_ID\" : \"'+SERVICE_ID+'\",\"SPLIT_BILLING\" : \"'+SPLIT_BILLING+'\",\"BILLING_VALUE_INGL_CURR\" : \"'+BILLING_VALUE_INGL_CURR+'\",\"COMMITTED_VALUE_INDT_CURR\" : \"'+COMMITTED_VALUE_INDT_CURR+'\",\"COMMITTED_VALUE_INGL_CURR\" : \"'+COMMITTED_VALUE_INGL_CURR+'\",\"ESTVAL_INDT_CURR\" : \"'+ESTVAL_INDT_CURR+'\",\"ESTVAL_INGL_CURR\" : \"'+ESTVAL_INGL_CURR+'\",\"DOC_CURRENCY\" : \"'+DOC_CURRENCY+'\",\"LINE\" : \"'+LINE+'\",\"WARRANTY_END_DATE\" : \"'+WARRANTY_END_DATE+'\",\"WARRANTY_START_DATE\" : \"'+WARRANTY_START_DATE+'\",\"SESSION_ID\" : \"'+SESSION_ID+'\",\"PO_ITEM\" : \"'+PO_ITEM+'\",\"PO_NUMBER\" : \"'+PO_NUMBER+'\",\"QUOTE_NAME\" : \"'+QUOTE_NAME+'\",\"SALESORG_ID\" : \"'+SALESORG_ID+'\",\"QTEREV_ID\" : \"'+QTEREV_ID+'\"}' AS JSON from (SELECT DISTINCT  ISNULL(CONVERT(VARCHAR,ANNUAL_BILLING_AMOUNT),'') AS ANNUAL_BILLING_AMOUNT,ISNULL(CONVERT(VARCHAR,BILLING_VALUE),'') AS	BILLING_VALUE,ISNULL(GLOBAL_CURRENCY,'')	AS	GLOBAL_CURRENCY,ISNULL(CONVERT(VARCHAR(11),BILLING_DATE,101),'') AS BILLING_DATE,ISNULL(CONVERT(VARCHAR,BILLING_DAY),'') AS	BILLING_DAY,ISNULL(CONVERT(VARCHAR(11),BILLING_END_DATE,101),'')	AS	BILLING_END_DATE,ISNULL(CONVERT(VARCHAR(11),BILLING_START_DATE,101),'') AS	BILLING_START_DATE,ISNULL(BILLING_TYPE,'')  AS BILLING_TYPE,ISNULL(CONVERT(VARCHAR,BILLING_YEAR),'') AS BILLING_YEAR,ISNULL(EQUIPMENT_ID,'')	AS	EQUIPMENT_ID,ISNULL(CONVERT(VARCHAR,EQUIPMENT_QUANTITY),'') AS	EQUIPMENT_QUANTITY,ISNULL(GREENBOOK,'') AS GREENBOOK,ISNULL(QUOTE_ID,'')  AS QUOTE_ID,ISNULL(SERVICE_ID,'') AS SERVICE_ID,ISNULL(CONVERT(VARCHAR,SPLIT_BILLING),'') AS SPLIT_BILLING,ISNULL(CONVERT(VARCHAR(11),WARRANTY_END_DATE,101),'') AS WARRANTY_END_DATE,ISNULL(CONVERT(VARCHAR(11),WARRANTY_START_DATE,101),'')	AS	WARRANTY_START_DATE,"+str(timestamp_sessionid)+" as SESSION_ID,'' as PO_ITEM,'' as PO_NUMBER,'' as QUOTE_NAME,'' as SALESORG_ID,ISNULL(CONVERT(VARCHAR,QTEREV_ID),'') AS	QTEREV_ID,ISNULL(CONVERT(VARCHAR,BILLING_VALUE_INGL_CURR),'') AS	BILLING_VALUE_INGL_CURR,ISNULL(CONVERT(VARCHAR,COMMITTED_VALUE_INDT_CURR),'') AS	COMMITTED_VALUE_INDT_CURR,ISNULL(CONVERT(VARCHAR,COMMITTED_VALUE_INGL_CURR),'') AS	COMMITTED_VALUE_INGL_CURR,ISNULL(CONVERT(VARCHAR,ESTVAL_INDT_CURR),'') AS	ESTVAL_INDT_CURR,ISNULL(CONVERT(VARCHAR,ESTVAL_INGL_CURR),'') AS	ESTVAL_INGL_CURR,ISNULL(DOC_CURRENCY,'') AS DOC_CURRENCY,ISNULL(CONVERT(VARCHAR,LINE),'') AS	LINE FROM SAQIBP(NOLOCK)  WHERE SAQIBP.QUOTE_ID = '"+str(Qt_ID)+"' ) t 	) A FOR XML PATH ('')  ), 1, 1, '')+']','amp;#','#') AS RESULT)A "
			)
			
		#Entitlement Query 
		start = 1
		end = 1

		tbl_flag = 0
		Check_flag = 1
		while Check_flag == 1:

			ent_query = SqlHelper.GetFirst("SELECT DISTINCT QUOTE_ID,cpqtableentryid FROM (SELECT DISTINCT QUOTE_ID,cpqtableentryid, ROW_NUMBER()OVER(ORDER BY cpqtableentryid) AS SNO FROM  SAQIEN(NOLOCK) where SAQIEN.QUOTE_ID='"+str(Qt_ID)+"'  ) A WHERE SNO>= "+str(start)+" AND SNO<="+str(end)+" ")
			SAQIEN = 'SAQIEN_INBOUND'

			if str(ent_query) != "None":
				tbl_flag = 1		
				start = start + 1
				end = end + 1

				#Log.Info("-> XML"+str(ent_query.cpqtableentryid))


				if start == 2:

					SAQIEN_SEL = SqlHelper.GetFirst("sp_executesql @T=N'declare @H int; Declare @val Varchar(MAX);DECLARE @XML XML; SELECT @val = FINAL from(select  REPLACE(entitlement_xml,''<QUOTE_ITEM_ENTITLEMENT>'',sml) AS FINAL FROM (select ''<QUOTE_ITEM_ENTITLEMENT><QUOTE_ID>''+isnull(quote_id,'''')+''</QUOTE_ID><QTEREV_ID>''+ISNULL(CONVERT(VARCHAR,QTEREV_ID),'''')+''</QTEREV_ID><SERVICE_ID>''+isnull(service_id,'''')+''</SERVICE_ID><EQUIPMENT_ID>''+isnull(equipment_id,'''')+''</EQUIPMENT_ID><FABLOCATION_ID>''+isnull(fablocation_id,'''')+''</FABLOCATION_ID><IS_CHANGED>''+isnull(convert(varchar,IS_CHANGED),'''')+''</IS_CHANGED><KB_VERSION>''+isnull(kb_version,'''')+''</KB_VERSION><SALESORG_ID>''+isnull(salesorg_id,'''')+''</SALESORG_ID><SERIAL_NO>''+isnull(serial_no,'''')+''</SERIAL_NO><ENTITLEMENT_GROUP_ID>''+isnull(convert(varchar,entitlement_group_id),'''')+''</ENTITLEMENT_GROUP_ID> 		<LINE_ITEM_ID>''+isnull(convert(varchar,LINE),'''')+''</LINE_ITEM_ID>'' AS sml,replace(replace(replace(replace(replace(replace(replace(replace(replace(ENTITLEMENT_XML,''&'','';#38''),'''','';#39''),'' < '','' &lt; '' ),'' > '','' &gt; '' ),''_>'',''_&gt;''),''_<'',''_&lt;''),''&'','';#38''),''	'',''''),''\n'','''')   as entitlement_xml from SAQIEN(nolock) where quote_id=''"+str(Qt_ID)+"'' AND cpqtableentryid = "+str(ent_query.cpqtableentryid)+" )A )a SELECT @XML = CONVERT(XML,''<ROOT>''+@VAL+''</ROOT>'') exec sys.sp_xml_preparedocument @H output,@XML; select QUOTE_ID,EQUIPMENT_ID,QTEREV_ID,SERVICE_ID,FABLOCATION_ID,IS_CHANGED,KB_VERSION,SALESORG_ID,SERIAL_NO,ENTITLEMENT_GROUP_ID,LINE_ITEM_ID,ENTITLEMENT_NAME,ENTITLEMENT_DESCRIPTION,ENTITLEMENT_VALUE_CODE,ENTITLEMENT_DISPLAY_VALUE,ENTITLEMENT_COST_IMPACT,ENTITLEMENT_PRICE_IMPACT,ENTITLEMENT_ID INTO "+str(SAQIEN)+"  from openxml(@H, ''ROOT/QUOTE_ITEM_ENTITLEMENT'', 0) with (QUOTE_ID VARCHAR(100) ''QUOTE_ID'',EQUIPMENT_ID VARCHAR(100) ''EQUIPMENT_ID'',SERVICE_ID VARCHAR(100) ''SERVICE_ID'',FABLOCATION_ID VARCHAR(100) ''FABLOCATION_ID'',IS_CHANGED VARCHAR(100) ''IS_CHANGED'',KB_VERSION VARCHAR(100) ''KB_VERSION'',SALESORG_ID VARCHAR(100) ''SALESORG_ID'',SERIAL_NO VARCHAR(100) ''SERIAL_NO'',ENTITLEMENT_GROUP_ID VARCHAR(100) ''ENTITLEMENT_GROUP_ID'' ,LINE_ITEM_ID VARCHAR(100) ''LINE_ITEM_ID'',ENTITLEMENT_NAME VARCHAR(100) ''ENTITLEMENT_NAME'',ENTITLEMENT_DESCRIPTION VARCHAR(100) ''ENTITLEMENT_DESCRIPTION'',ENTITLEMENT_VALUE_CODE VARCHAR(100) ''ENTITLEMENT_VALUE_CODE'',ENTITLEMENT_DISPLAY_VALUE VARCHAR(100) ''ENTITLEMENT_DISPLAY_VALUE'',ENTITLEMENT_COST_IMPACT VARCHAR(100) ''ENTITLEMENT_COST_IMPACT'',ENTITLEMENT_PRICE_IMPACT VARCHAR(100) ''ENTITLEMENT_PRICE_IMPACT'',QTEREV_ID VARCHAR(100) ''QTEREV_ID'',ENTITLEMENT_ID VARCHAR(100) ''ENTITLEMENT_ID'') ; exec sys.sp_xml_removedocument @H; '")			
				
				else:
					
					SAQIEN_SEL = SqlHelper.GetFirst("sp_executesql @T=N'declare @H int; Declare @val Varchar(MAX);DECLARE @XML XML; SELECT @val = FINAL from(select  REPLACE(entitlement_xml,''<QUOTE_ITEM_ENTITLEMENT>'',sml) AS FINAL FROM (select ''<QUOTE_ITEM_ENTITLEMENT><QUOTE_ID>''+isnull(quote_id,'''')+''</QUOTE_ID><QTEREV_ID>''+ISNULL(CONVERT(VARCHAR,QTEREV_ID),'''')+''</QTEREV_ID><SERVICE_ID>''+isnull(service_id,'''')+''</SERVICE_ID><EQUIPMENT_ID>''+isnull(equipment_id,'''')+''</EQUIPMENT_ID><FABLOCATION_ID>''+isnull(fablocation_id,'''')+''</FABLOCATION_ID><IS_CHANGED>''+isnull(convert(varchar,IS_CHANGED),'''')+''</IS_CHANGED><KB_VERSION>''+isnull(kb_version,'''')+''</KB_VERSION><SALESORG_ID>''+isnull(salesorg_id,'''')+''</SALESORG_ID><SERIAL_NO>''+isnull(serial_no,'''')+''</SERIAL_NO><ENTITLEMENT_GROUP_ID>''+isnull(convert(varchar,entitlement_group_id),'''')+''</ENTITLEMENT_GROUP_ID> <LINE_ITEM_ID>''+isnull(convert(varchar,LINE),'''')+''</LINE_ITEM_ID>'' AS sml,replace(replace(replace(replace(replace(replace(replace(replace(replace(ENTITLEMENT_XML,''&'','';#38''),'''','';#39''),'' < '','' &lt; '' ),'' > '','' &gt; '' ),''_>'',''_&gt;''),''_<'',''_&lt;''),''&'','';#38''),''	'',''''),''\n'','''')   as entitlement_xml from SAQIEN(nolock) where quote_id=''"+str(Qt_ID)+"'' AND cpqtableentryid = "+str(ent_query.cpqtableentryid)+" )A )a SELECT @XML = CONVERT(XML,''<ROOT>''+@VAL+''</ROOT>'') exec sys.sp_xml_preparedocument @H output,@XML; insert "+str(SAQIEN)+" (QUOTE_ID,EQUIPMENT_ID,QTEREV_ID,SERVICE_ID,FABLOCATION_ID,IS_CHANGED,KB_VERSION,SALESORG_ID,SERIAL_NO,ENTITLEMENT_GROUP_ID,LINE_ITEM_ID,ENTITLEMENT_NAME,ENTITLEMENT_DESCRIPTION,ENTITLEMENT_VALUE_CODE,ENTITLEMENT_DISPLAY_VALUE,ENTITLEMENT_COST_IMPACT,ENTITLEMENT_PRICE_IMPACT,ENTITLEMENT_ID) select QUOTE_ID,EQUIPMENT_ID,QTEREV_ID,SERVICE_ID,FABLOCATION_ID,IS_CHANGED,KB_VERSION,SALESORG_ID,SERIAL_NO,ENTITLEMENT_GROUP_ID,LINE_ITEM_ID,ENTITLEMENT_NAME,ENTITLEMENT_DESCRIPTION,ENTITLEMENT_VALUE_CODE,ENTITLEMENT_DISPLAY_VALUE,ENTITLEMENT_COST_IMPACT,ENTITLEMENT_PRICE_IMPACT,ENTITLEMENT_ID  from openxml(@H, ''ROOT/QUOTE_ITEM_ENTITLEMENT'', 0) with (QUOTE_ID VARCHAR(100) ''QUOTE_ID'',EQUIPMENT_ID VARCHAR(100) ''EQUIPMENT_ID'',SERVICE_ID VARCHAR(100) ''SERVICE_ID'',FABLOCATION_ID VARCHAR(100) ''FABLOCATION_ID'',IS_CHANGED VARCHAR(100) ''IS_CHANGED'',KB_VERSION VARCHAR(100) ''KB_VERSION'',SALESORG_ID VARCHAR(100) ''SALESORG_ID'',SERIAL_NO VARCHAR(100) ''SERIAL_NO'',ENTITLEMENT_GROUP_ID VARCHAR(100) ''ENTITLEMENT_GROUP_ID'',LINE_ITEM_ID VARCHAR(100) ''LINE_ITEM_ID'',ENTITLEMENT_NAME VARCHAR(100) ''ENTITLEMENT_NAME'',ENTITLEMENT_DESCRIPTION VARCHAR(100) ''ENTITLEMENT_DESCRIPTION'',ENTITLEMENT_VALUE_CODE VARCHAR(100) ''ENTITLEMENT_VALUE_CODE'',ENTITLEMENT_DISPLAY_VALUE VARCHAR(100) ''ENTITLEMENT_DISPLAY_VALUE'',ENTITLEMENT_COST_IMPACT VARCHAR(100) ''ENTITLEMENT_COST_IMPACT'',ENTITLEMENT_PRICE_IMPACT VARCHAR(100) ''ENTITLEMENT_PRICE_IMPACT'',QTEREV_ID VARCHAR(100) ''QTEREV_ID'',ENTITLEMENT_ID VARCHAR(100) ''ENTITLEMENT_ID''); exec sys.sp_xml_removedocument @H; '")
					
			
			else:
				Check_flag=0
		SAQIEN_RESULT = ''
		if tbl_flag == 1:
			#SAQIEN LINE

			s = SqlHelper.GetFirst("sp_executesql @T=N'DELETE FROM SAQIEN_INBOUND  WHERE ENTITLEMENT_VALUE_CODE LIKE ''%,%'' '")
			
			s = SqlHelper.GetFirst("sp_executesql @T=N'Update SAQIEN_INBOUND  set ENTITLEMENT_DESCRIPTION = replace(PRENTL.ENTITLEMENT_DESCRIPTION,''\"'','''') FROM SAQIEN_INBOUND JOIN PRENTL (NOLOCK) ON SAQIEN_INBOUND.ENTITLEMENT_ID = PRENTL.ENTITLEMENT_ID  '")
			
			s = SqlHelper.GetFirst("sp_executesql @T=N'Update "+str(SAQIEN)+"  set ENTITLEMENT_VALUE_CODE = replace(ENTITLEMENT_VALUE_CODE,''\"'',''''), ENTITLEMENT_DISPLAY_VALUE = replace(ENTITLEMENT_DISPLAY_VALUE,''\"'',''''),ENTITLEMENT_NAME = replace(ENTITLEMENT_NAME,''\"'',''''),ENTITLEMENT_DESCRIPTION = replace(ENTITLEMENT_DESCRIPTION,''\"'','''')  '")
			
			start = 1
			end = 10
			Status_flag = 1
			
			while Status_flag == 1:
				
				entitle_query = SqlHelper.GetFirst("SELECT DISTINCT LINE_ITEM_ID FROM  SAQIEN_INBOUND WHERE LINE_ITEM_ID>= "+str(start)+" AND LINE_ITEM_ID<="+str(end)+" ")

				if str(entitle_query) != "None":
				
					SAQIEN_QUERY = SqlHelper.GetFirst(
						"SELECT REPLACE(CASE WHEN ISNULL(RESULT,'') = '' THEN '' ELSE RESULT END ,'''','')  AS RESULT FROM (SELECT replace (STUFF((SELECT ','+ JSON FROM (SELECT DISTINCT '{\"ENTITLEMENT_NAME\" : \"'+ENTITLEMENT_NAME+'\",\"ENTITLEMENT_TYPE\" : \"'+ENTITLEMENT_TYPE+'\",\"ENTITLEMENT_DESCRIPTION\" : \"'+ENTITLEMENT_DESCRIPTION+'\",\"ENTITLEMENT_VALUE_CODE\" : \"'+ENTITLEMENT_VALUE_CODE+'\",\"ENTITLEMENT_DISPLAY_VALUE\" : \"'+ENTITLEMENT_DISPLAY_VALUE+'\",\"ENTITLEMENT_COST_IMPACT\" : \"'+ENTITLEMENT_COST_IMPACT+'\",\"ENTITLEMENT_PRICE_IMPACT\" : \"'+ENTITLEMENT_PRICE_IMPACT+'\",\"EQUIPMENT_ID\" : \"'+EQUIPMENT_ID+'\",\"FABLOCATION_ID\" : \"'+FABLOCATION_ID+'\",\"IS_CHANGED\" : \"'+IS_CHANGED+'\",\"KB_VERSION\" : \"'+KB_VERSION+'\",\"QUOTE_ID\" : \"'+QUOTE_ID+'\",\"SALESORG_ID\" : \"'+SALESORG_ID+'\",\"SERIAL_NO\" : \"'+SERIAL_NO+'\",\"SERVICE_ID\" : \"'+SERVICE_ID+'\",\"EQUIPMENT_LINE_ID\" : \"'+EQUIPMENT_LINE_ID+'\",\"ENTITLEMENT_GROUP_ID\" : \"'+ENTITLEMENT_GROUP_ID+'\",\"LINE_ITEM_ID\" : \"'+LINE_ITEM_ID+'\",\"SESSION_ID\" : \"'+SESSION_ID+'\",\"QTEREV_ID\" : \"'+QTEREV_ID+'\"}' AS JSON from (SELECT DISTINCT  ISNULL(SAQIEN_INBOUND.ENTITLEMENT_NAME,'') AS ENTITLEMENT_NAME,ISNULL(SAQIEN_INBOUND.ENTITLEMENT_VALUE_CODE,'') AS	ENTITLEMENT_VALUE_CODE,ISNULL(SAQIEN_INBOUND.ENTITLEMENT_DISPLAY_VALUE,'')	AS	ENTITLEMENT_DISPLAY_VALUE,ISNULL(SAQIEN_INBOUND.ENTITLEMENT_COST_IMPACT,'') AS ENTITLEMENT_COST_IMPACT,ISNULL(SAQIEN_INBOUND.ENTITLEMENT_PRICE_IMPACT,'') AS	ENTITLEMENT_PRICE_IMPACT,ISNULL(SAQIEN_INBOUND.ENTITLEMENT_DESCRIPTION,'')	AS ENTITLEMENT_DESCRIPTION,ISNULL(SAQIEN_INBOUND.EQUIPMENT_ID,'') AS	EQUIPMENT_ID,ISNULL(SAQIEN_INBOUND.FABLOCATION_ID,'') AS FABLOCATION_ID,ISNULL(SAQIEN_INBOUND.IS_CHANGED,'')  AS IS_CHANGED,ISNULL(SAQIEN_INBOUND.KB_VERSION,'') AS KB_VERSION,ISNULL(SAQIEN_INBOUND.QUOTE_ID,'') AS QUOTE_ID,ISNULL(SAQIEN_INBOUND.SALESORG_ID,'') AS SALESORG_ID,ISNULL(SAQIEN_INBOUND.SERIAL_NO,'') AS	SERIAL_NO,ISNULL(SAQIEN_INBOUND.SERVICE_ID,'') AS SERVICE_ID,'' AS EQUIPMENT_LINE_ID,ISNULL(SAQIEN_INBOUND.ENTITLEMENT_GROUP_ID,'')	AS	ENTITLEMENT_GROUP_ID,ISNULL(SAQIEN_INBOUND.LINE_ITEM_ID,'') AS LINE_ITEM_ID,"+str(timestamp_sessionid)+" as SESSION_ID,ISNULL(CONVERT(VARCHAR,QTEREV_ID),'') AS	QTEREV_ID,ISNULL(ENTITLEMENT_TYPE,'') AS ENTITLEMENT_TYPE FROM SAQIEN_INBOUND(NOLOCK) LEFT JOIN PRENTL (NOLOCK) ON SAQIEN_INBOUND.ENTITLEMENT_ID = PRENTL.ENTITLEMENT_ID WHERE SAQIEN_INBOUND.QUOTE_ID = '"+str(Qt_ID)+"'  AND SAQIEN_INBOUND.LINE_ITEM_ID>= "+str(start)+" AND SAQIEN_INBOUND.LINE_ITEM_ID<="+str(end)+" ) t 	) A FOR XML PATH ('')  ), 1, 1, ''),'amp;#','#') AS RESULT)A ")
					start = start+10
					end  = end+10
					
					SAQIEN_RESULT = SAQIEN_RESULT+SAQIEN_QUERY.RESULT+','
					
				else:
					Status_flag = 0

		Table_Name = 'SAQIEN_INBOUND'
			
		TempTable = SqlHelper.GetFirst("sp_executesql @T=N'IF EXISTS (SELECT ''X'' FROM SYS.OBJECTS WHERE NAME= ''"+str(Table_Name)+"'' ) BEGIN DROP TABLE "+str(Table_Name)+" END'")

		final_json = ''
		if SAQTMT_QUERY.RESULT != '':
			final_json = SAQTMT_QUERY.RESULT+','
		if SAQTRV_QUERY.RESULT != '':
			final_json = final_json+SAQTRV_QUERY.RESULT+','
		if SAQTIP_QUERY.RESULT != '':
			final_json = final_json+SAQTIP_QUERY.RESULT+','
		if SAQTBP_QUERY.RESULT != '':
			final_json = final_json+SAQTBP_QUERY.RESULT+','
		if SAQDOC_QUERY.RESULT != '':
			final_json = final_json+SAQDOC_QUERY.RESULT+','
		if SAQITM_QUERY.RESULT != '':
			final_json = final_json+SAQITM_QUERY.RESULT+','
		if SAQRIO_QUERY.RESULT != '':
			final_json = final_json+SAQRIO_QUERY.RESULT+','
		if SAQRIP_QUERY.RESULT != '':
			final_json = final_json+SAQRIP_QUERY.RESULT+','
		if SAQICO_QUERY.RESULT != '':
			final_json = final_json+SAQICO_QUERY.RESULT+','
		if SAQICA_QUERY.RESULT != '':
			final_json = final_json+SAQICA_QUERY.RESULT+','
		if SAQIFP_QUERY.RESULT != '':
			final_json = final_json+SAQIFP_QUERY.RESULT+','
		if SAQIBP_QUERY.RESULT != '':
			final_json = final_json+SAQIBP_QUERY.RESULT+','
		"""if str(SAQSCV_QUERY.RESULT) != '':
			final_json = final_json+str(SAQSCV_QUERY.RESULT)+','
		if str(SAQTFV_QUERY.RESULT) != '':
			final_json = final_json+str(SAQTFV_QUERY.RESULT)+','
		"""
		if tbl_flag == 1:
			if SAQIEN_RESULT != '':
				final_json = final_json+'"SAQIEN": ['+SAQIEN_RESULT[:-1]+'],'
			
		Final_json = '{"CPQ_Columns": {'+final_json[:-1]+'}}'
		
		Final_json = Final_json.replace("'",'&&&&').replace('"]"','"]').replace('"["','["')
		if len(Final_json)>0:
			LOGIN_CRE = SqlHelper.GetFirst("SELECT  URL FROM SYCONF where EXTERNAL_TABLE_NAME ='CPQ_TO_HADOOP'")
			Oauth_info = SqlHelper.GetFirst("SELECT  DOMAIN,URL FROM SYCONF where EXTERNAL_TABLE_NAME ='OAUTH'")

			requestdata =Oauth_info.DOMAIN
			webclient = System.Net.WebClient()
			webclient.Headers[System.Net.HttpRequestHeader.ContentType] = "application/x-www-form-urlencoded"
			response = webclient.UploadString(Oauth_info.URL,str(requestdata))

			response = eval(response)
			access_token = response['access_token']

			authorization = "Bearer " + access_token
			webclient = System.Net.WebClient()
			webclient.Headers[System.Net.HttpRequestHeader.ContentType] = "application/json"
			webclient.Headers[System.Net.HttpRequestHeader.Authorization] = authorization;


			#primaryQueryItems = SqlHelper.GetFirst( ""+ str(Parameter.QUERY_CRITERIA_1)+ " SYINPL (INTEGRATION_PAYLOAD,INTEGRATION_NAME )  select ''"+Final_json+ "'',''Hadoop_test2'' ' ")	

			Hadoop_response = webclient.UploadString(str(LOGIN_CRE.URL),Final_json)	
			#Log.Info("789 Hadoop_response --->"+str(Hadoop_response))
			
			if "True" in Hadoop_response: 
				StatusUpdateQuery = SqlHelper.GetFirst(""+ str(Parameter1.QUERY_CRITERIA_1)+ "  A SET HADOOP_FLAG = ''True'' FROM SAQTMT(NOLOCK) A WHERE QUOTE_ID=''"+str(data.Quote_id)+"''  '")

				ApiResponse = ApiResponseFactory.JsonResponse(Hadoop_response)
			
			else:
				ApiResponse = ApiResponseFactory.JsonResponse(Hadoop_response)
		else:
			ApiResponse = ApiResponseFactory.JsonResponse({"Response": [{"Status": "200", "Message": "Data not available"}]})

except:
	Table_Name = 'SAQIEN_INBOUND'
			
	TempTable = SqlHelper.GetFirst("sp_executesql @T=N'IF EXISTS (SELECT ''X'' FROM SYS.OBJECTS WHERE NAME= ''"+str(Table_Name)+"'' ) BEGIN DROP TABLE "+str(Table_Name)+" END'")
	Log.Info("QTPOSTCQHD ERROR---->:" + str(sys.exc_info()[1]))
	Log.Info("QTPOSTCQHD ERROR LINE NO---->:" + str(sys.exc_info()[-1].tb_lineno))
	ApiResponse = ApiResponseFactory.JsonResponse({"Response": [{"Status": "400", "Message": str(sys.exc_info()[1])}]})