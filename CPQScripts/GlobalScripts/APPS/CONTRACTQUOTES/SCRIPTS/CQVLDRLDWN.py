# =========================================================================================================================================
#   __script_name : CQVLDRLDWN.PY
#   __script_description : THIS SCRIPT IS USED FOR VALUE DRIVER ROLLDOWN (GETS TRIGGERED AFTER IFLOW SCRIPT - CQTVLDRIFW.py)
#   __primary_author__ : NAMRATA SIVAKUMAR
#   __create_date :05-01-2021
#   Â© BOSTON HARBOR TECHNOLOGY LLC - ALL RIGHTS RESERVED
# ==========================================================================================================================================
import Webcom.Configurator.Scripting.Test.TestProduct
import clr
import System.Net
import sys
import datetime
from System.Net import CookieContainer, NetworkCredential, Mail
from System.Net.Mail import SmtpClient, MailAddress, Attachment, MailMessage
from SYDATABASE import SQL

Sql = SQL()
#userId = str(User.Id)
#userName = str(User.UserName)

def ServiceCostAndValueDrivers():
    QueryStatement = """
    MERGE SAQSFD SRC USING ( SELECT A.FABLOCATION_ID,A.FABLOCATION_NAME,A.FABLOCATION_RECORD_ID,A.SERVICE_ID,A.SERVICE_DESCRIPTION,A.SERVICE_RECORD_ID,A.QUOTE_ID,A.QUOTE_NAME,A.QUOTE_RECORD_ID,B.TOOL_VALUEDRIVER_ID,B.TOOL_VALUEDRIVER_RECORD_ID,B.QTEREV_RECORD_ID FROM SAQSFB(NOLOCK) A JOIN SAQSVD (NOLOCK) B ON A.QUOTE_RECORD_ID  = B.QUOTE_RECORD_ID AND A.SERVICE_ID = B.SERVICE_ID where B.QUOTE_RECORD_ID = '{rec}' AND B.SERVICE_ID = '{treeparam}' AND B.QTEREV_RECORD_ID='{qurev_rec_id}') 
    TGT ON (SRC.QUOTE_RECORD_ID = TGT.QUOTE_RECORD_ID AND SRC.SERVICE_ID = TGT.SERVICE_ID AND SRC.VALUEDRIVER_ID =TGT.TOOL_VALUEDRIVER_ID AND SRC.FABLOCATION_ID = TGT.FABLOCATION_ID AND SRC.QTEREV_RECORD_ID = TGT.QTEREV_RECORD_ID)
    WHEN MATCHED 
    THEN UPDATE SET SRC.VALUEDRIVER_ID = TGT.TOOL_VALUEDRIVER_ID,SRC.VALUEDRIVER_RECORD_ID =TGT.TOOL_VALUEDRIVER_RECORD_ID
    WHEN NOT MATCHED BY TARGET
    THEN INSERT (QTEREV_RECORD_ID,FABLOCATION_ID,FABLOCATION_NAME, FABLOCATION_RECORD_ID,QUOTE_RECORD_ID,SERVICE_ID,SERVICE_DESCRIPTION,SERVICE_RECORD_ID,QUOTE_ID,QUOTE_NAME,VALUEDRIVER_ID,VALUEDRIVER_RECORD_ID,QUOTE_SERVICE_FBL_TOOL_VAL_DRV_RECORD_ID,CPQTABLEENTRYDATEADDED, CPQTABLEENTRYADDEDBY, ADDUSR_RECORD_ID, CpqTableEntryModifiedBy,CpqTableEntryDateModified)
    VALUES (QTEREV_RECORD_ID,FABLOCATION_ID,FABLOCATION_NAME, FABLOCATION_RECORD_ID,QUOTE_RECORD_ID,SERVICE_ID,SERVICE_DESCRIPTION,SERVICE_RECORD_ID,QUOTE_ID,QUOTE_NAME,TOOL_VALUEDRIVER_ID,TOOL_VALUEDRIVER_RECORD_ID,NEWID(),'{datetimenow}', '{username}', {userid}, {userid}, '{datetimenow}');""".format(
    rec=Qt_rec_id, datetimenow=datetime.datetime.now().strftime("%m/%d/%Y %H:%M:%S %p"), userid=userId, username=userName,treeparam=TreeParam,qurev_rec_id=quote_revision_record_id
    )
    #Log.Info(QueryStatement)
    Sql.RunQuery(QueryStatement)
    # MERGE SAQSGD USING SAQSGV AND SAQSDV - GREENBOOK ROLLDOWN 1520
    QueryStatement = """
    MERGE SAQSFV SRC USING ( SELECT A.FABLOCATION_ID,A.FABLOCATION_NAME,A.FABLOCATION_RECORD_ID,A.QUOTE_ID,A.QUOTE_NAME,A.QUOTE_RECORD_ID,B.TOOL_VALUEDRIVER_RECORD_ID,B.TOOL_VALUEDRIVER_ID,B.SERVICE_RECORD_ID,B.SERVICE_ID,B.SERVICE_DESCRIPTION,B.TOOL_VALUEDRIVER_VALUE_DESCRIPTION,B.TOOL_VALUEDRIVER_VALUE_RECORD_ID,B.CpqTableEntryDateModified,B.CpqTableEntryModifiedBy,B.TOOL_VALUEDRIVER_VALUE_CODE,B.VALUEDRIVER_COEFFICIENT,B.VALUEDRIVER_COEFFICIENT_RECORD_ID,B.QTEREV_RECORD_ID FROM SAQSFB (NOLOCK) A JOIN SAQSDV (NOLOCK) B ON A.QUOTE_RECORD_ID  = B.QUOTE_RECORD_ID AND A.SERVICE_ID = B.SERVICE_ID WHERE B.QUOTE_RECORD_ID = '{rec}' AND B.SERVICE_ID = '{treeparam}' AND B.QTEREV_RECORD_ID='{qurev_rec_id}') 
    TGT ON (SRC.QUOTE_RECORD_ID = TGT.QUOTE_RECORD_ID AND SRC.VALUEDRIVER_ID = TGT.TOOL_VALUEDRIVER_ID AND SRC.SERVICE_ID = TGT.SERVICE_ID AND SRC.FABLOCATION_ID = TGT.FABLOCATION_ID AND SRC.QTEREV_RECORD_ID = TGT.QTEREV_RECORD_ID)
    WHEN MATCHED 
    THEN UPDATE SET SRC.VALUEDRIVER_VALUE_DESCRIPTION = TGT.TOOL_VALUEDRIVER_VALUE_DESCRIPTION,SRC.VALUEDRIVER_VALUE_RECORD_ID =TGT.TOOL_VALUEDRIVER_VALUE_RECORD_ID,SRC.CpqTableEntryModifiedBy = TGT.CpqTableEntryModifiedBy,SRC.CpqTableEntryDateModified = TGT.CpqTableEntryDateModified,SRC.VALUEDRIVER_VALUE_CODE = TGT.TOOL_VALUEDRIVER_VALUE_CODE,SRC.VALUEDRIVER_COEFFICIENT_RECORD_ID = TGT.VALUEDRIVER_COEFFICIENT_RECORD_ID,SRC.VALUEDRIVER_COEFFICIENT = TGT.VALUEDRIVER_COEFFICIENT
    WHEN NOT MATCHED BY TARGET
        THEN INSERT (QTEREV_RECORD_ID,FABLOCATION_ID,FABLOCATION_NAME, FABLOCATION_RECORD_ID,QUOTE_SERVICE_FAB_LOC_DRV_VAL_RECORD_ID,QUOTE_ID,QUOTE_NAME,QUOTE_RECORD_ID,SERVICE_DESCRIPTION,SERVICE_ID,SERVICE_RECORD_ID,VALUEDRIVER_ID,VALUEDRIVER_RECORD_ID,VALUEDRIVER_VALUE_DESCRIPTION,VALUEDRIVER_VALUE_RECORD_ID,VALUEDRIVER_VALUE_CODE,VALUEDRIVER_COEFFICIENT_RECORD_ID,VALUEDRIVER_COEFFICIENT,CPQTABLEENTRYDATEADDED, CPQTABLEENTRYADDEDBY, ADDUSR_RECORD_ID, CpqTableEntryModifiedBy,CpqTableEntryDateModified)
        VALUES (QTEREV_RECORD_ID,FABLOCATION_ID,FABLOCATION_NAME, FABLOCATION_RECORD_ID,NEWID(),QUOTE_ID,QUOTE_NAME,QUOTE_RECORD_ID,SERVICE_DESCRIPTION,SERVICE_ID,SERVICE_RECORD_ID,TOOL_VALUEDRIVER_ID,TOOL_VALUEDRIVER_RECORD_ID,TOOL_VALUEDRIVER_VALUE_DESCRIPTION,TOOL_VALUEDRIVER_VALUE_RECORD_ID,TOOL_VALUEDRIVER_VALUE_CODE,VALUEDRIVER_COEFFICIENT_RECORD_ID,VALUEDRIVER_COEFFICIENT,'{datetimenow}', '{username}', {userid}, {userid}, '{datetimenow}');""".format(
    rec=Qt_rec_id, datetimenow=datetime.datetime.now().strftime("%m/%d/%Y %H:%M:%S %p"), userid=userId, username=userName,treeparam=TreeParam,qurev_rec_id=quote_revision_record_id
    )
    #Log.Info(QueryStatement)
    Sql.RunQuery(QueryStatement)

    QueryStatement = "DELETE FROM SAQSGB WHERE QUOTE_RECORD_ID ='"+str(Qt_rec_id)+"' AND SERVICE_ID = '" + str(TreeParam) + "' AND QTEREV_RECORD_ID ='"+str(quote_revision_record_id)+"' "
    Sql.RunQuery(QueryStatement)
    # ADDING GREEN BOOK TO ALREADY AVAILABLE COVERED OBJECTS 1520 
    Parameter = SqlHelper.GetFirst("SELECT QUERY_CRITERIA_1 FROM SYDBQS (NOLOCK) WHERE QUERY_NAME = 'SELECT' ")
    primaryQueryItems = SqlHelper.GetFirst(""
    + str(Parameter.QUERY_CRITERIA_1)
    + " SAQSGB (FABLOCATION_ID,FABLOCATION_NAME,FABLOCATION_RECORD_ID,SERVICE_ID,SERVICE_DESCRIPTION,SERVICE_RECORD_ID,GREENBOOK,GREENBOOK_RECORD_ID,QUOTE_ID,QUOTE_NAME,QUOTE_RECORD_ID,SALESORG_ID,SALESORG_NAME,SALESORG_RECORD_ID,QTEREV_RECORD_ID,CPQTABLEENTRYADDEDBY, CpqTableEntryModifiedBy, ADDUSR_RECORD_ID, CPQTABLEENTRYDATEADDED, CpqTableEntryDateModified,QUOTE_SERVICE_GREENBOOK_RECORD_ID)SELECT A. *,getdate(),getdate(),CONVERT(VARCHAR(4000),NEWID()) FROM (SELECT DISTINCT A.FABLOCATION_ID,A.FABLOCATION_NAME,A.FABLOCATION_RECORD_ID,A.SERVICE_ID,A.SERVICE_DESCRIPTION,A.SERVICE_RECORD_ID,A.GREENBOOK,A.GREENBOOK_RECORD_ID,A.QUOTE_ID,A.QUOTE_NAME,A.QUOTE_RECORD_ID,A.SALESORG_ID,A.SALESORG_NAME,A.SALESORG_RECORD_ID,A.QTEREV_RECORD_ID,A.CPQTABLEENTRYADDEDBY, A.CpqTableEntryModifiedBy, A.ADDUSR_RECORD_ID FROM SAQSCO(NOLOCK) A where a.QUOTE_RECORD_ID = ''"+str(Qt_rec_id)+"'')A left join SAQSGB (NOLOCK) b on a.QUOTE_ID =b.QUOTE_ID and a.FABLOCATION_RECORD_ID =b.FABLOCATION_RECORD_ID and a.SERVICE_RECORD_ID =b.SERVICE_RECORD_ID AND a.GREENBOOK = b.GREENBOOK AND a.QTEREV_RECORD_ID = b.QTEREV_RECORD_ID WHERE b.QUOTE_ID IS NULL'")

    # MERGE SAQSGD USING QTQSGB AND SAQSVD - GREENBOOK ROLLDOWN 1520
    QueryStatement = """
    MERGE SAQSGD SRC USING ( SELECT A.FABLOCATION_ID,A.FABLOCATION_NAME,A.FABLOCATION_RECORD_ID,A.SERVICE_ID,A.SERVICE_DESCRIPTION,A.SERVICE_RECORD_ID,A.QUOTE_ID,A.QUOTE_NAME,A.QUOTE_RECORD_ID,A.GREENBOOK, A.GREENBOOK_RECORD_ID,B.VALUEDRIVER_ID,B.VALUEDRIVER_RECORD_ID,B.QTEREV_RECORD_ID FROM SAQSGB(NOLOCK) A JOIN SAQSFD (NOLOCK) B ON A.QUOTE_RECORD_ID  = B.QUOTE_RECORD_ID AND A.SERVICE_ID = B.SERVICE_ID AND A.FABLOCATION_RECORD_ID = B.FABLOCATION_RECORD_ID where B.QUOTE_RECORD_ID = '{rec}' AND B.SERVICE_ID = '{treeparam}' AND B.QTEREV_RECORD_ID='{qurev_rec_id}') 
    TGT ON (SRC.QUOTE_RECORD_ID = TGT.QUOTE_RECORD_ID AND SRC.SERVICE_ID = TGT.SERVICE_ID AND SRC.TOOL_VALUEDRIVER_ID =TGT.VALUEDRIVER_ID AND SRC.GREENBOOK = TGT.GREENBOOK AND SRC.FABLOCATION_RECORD_ID = TGT.FABLOCATION_RECORD_ID AND SRC.QTEREV_RECORD_ID = TGT.QTEREV_RECORD_ID)
    WHEN MATCHED 
    THEN UPDATE SET SRC.TOOL_VALUEDRIVER_ID = TGT.VALUEDRIVER_ID,SRC.TOOL_VALUEDRIVER_RECORD_ID =TGT.VALUEDRIVER_RECORD_ID
    WHEN NOT MATCHED BY TARGET
    THEN INSERT (QTEREV_RECORD_ID,FABLOCATION_ID,FABLOCATION_NAME, FABLOCATION_RECORD_ID,QUOTE_RECORD_ID,SERVICE_ID,SERVICE_DESCRIPTION,SERVICE_RECORD_ID,QUOTE_ID,QUOTE_NAME,TOOL_VALUEDRIVER_ID,TOOL_VALUEDRIVER_RECORD_ID,GREENBOOK,GREENBOOK_RECORD_ID,QUOTE_SERVICE_GREENBOOK_VAL_DRV_RECORD_ID,CPQTABLEENTRYDATEADDED, CPQTABLEENTRYADDEDBY, ADDUSR_RECORD_ID, CpqTableEntryModifiedBy,CpqTableEntryDateModified)
    VALUES (QTEREV_RECORD_ID,FABLOCATION_ID,FABLOCATION_NAME, FABLOCATION_RECORD_ID,QUOTE_RECORD_ID,SERVICE_ID,SERVICE_DESCRIPTION,SERVICE_RECORD_ID,QUOTE_ID,QUOTE_NAME,VALUEDRIVER_ID,VALUEDRIVER_RECORD_ID,GREENBOOK,GREENBOOK_RECORD_ID,NEWID(),'{datetimenow}', '{username}', {userid}, {userid}, '{datetimenow}');""".format(
    rec=Qt_rec_id, datetimenow=datetime.datetime.now().strftime("%m/%d/%Y %H:%M:%S %p"), userid=userId, username=userName,treeparam=TreeParam,qurev_rec_id=quote_revision_record_id
    )
    Log.Info(QueryStatement)
    Sql.RunQuery(QueryStatement)
    # MERGE SAQSGD USING SAQSGV AND SAQSDV - GREENBOOK ROLLDOWN 1520
    QueryStatement = """
    MERGE SAQSGV SRC USING ( SELECT A.FABLOCATION_ID,A.FABLOCATION_NAME,A.FABLOCATION_RECORD_ID,A.QUOTE_ID,A.QUOTE_NAME,A.QUOTE_RECORD_ID,B.VALUEDRIVER_RECORD_ID,B.VALUEDRIVER_ID,B.SERVICE_RECORD_ID,B.SERVICE_ID,B.SERVICE_DESCRIPTION,A.GREENBOOK,A.GREENBOOK_RECORD_ID,B.VALUEDRIVER_VALUE_DESCRIPTION,B.VALUEDRIVER_VALUE_RECORD_ID,B.CpqTableEntryDateModified,B.CpqTableEntryModifiedBy,B.VALUEDRIVER_VALUE_CODE,B.VALUEDRIVER_COEFFICIENT,B.VALUEDRIVER_COEFFICIENT_RECORD_ID,B.QTEREV_RECORD_ID FROM SAQSGB (NOLOCK) A JOIN SAQSFV (NOLOCK) B ON A.QUOTE_RECORD_ID  = B.QUOTE_RECORD_ID AND A.SERVICE_ID = B.SERVICE_ID AND A.FABLOCATION_RECORD_ID = B.FABLOCATION_RECORD_ID WHERE B.QUOTE_RECORD_ID = '{rec}' AND B.SERVICE_ID = '{treeparam}' AND B.QTEREV_RECORD_ID='{qurev_rec_id}' ) 
    TGT ON (SRC.QUOTE_RECORD_ID = TGT.QUOTE_RECORD_ID AND SRC.TOOL_VALUEDRIVER_ID = TGT.VALUEDRIVER_ID AND SRC.SERVICE_ID = TGT.SERVICE_ID AND SRC.FABLOCATION_RECORD_ID = TGT.FABLOCATION_RECORD_ID AND SRC.GREENBOOK = TGT.GREENBOOK AND SRC.QTEREV_RECORD_ID = TGT.QTEREV_RECORD_ID)
    WHEN MATCHED 
    THEN UPDATE SET SRC.TOOL_VALUEDRIVER_VALUE_DESCRIPTION = TGT.VALUEDRIVER_VALUE_DESCRIPTION,SRC.TOOL_VALUEDRIVER_VALUE_RECORD_ID =TGT.VALUEDRIVER_VALUE_RECORD_ID,SRC.CpqTableEntryModifiedBy = TGT.CpqTableEntryModifiedBy,SRC.CpqTableEntryDateModified = TGT.CpqTableEntryDateModified,SRC.TOOL_VALUEDRIVER_VALUE_CODE = TGT.VALUEDRIVER_VALUE_CODE,SRC.VALUEDRIVER_COEFFICIENT_RECORD_ID = TGT.VALUEDRIVER_COEFFICIENT_RECORD_ID,SRC.VALUEDRIVER_COEFFICIENT = TGT.VALUEDRIVER_COEFFICIENT
    WHEN NOT MATCHED BY TARGET
        THEN INSERT (QTEREV_RECORD_ID,FABLOCATION_ID,FABLOCATION_NAME, FABLOCATION_RECORD_ID,QUOTE_SERVICE_GBK_VAL_DRV_VAL_RECORD_ID,QUOTE_ID,QUOTE_NAME,QUOTE_RECORD_ID,SERVICE_DESCRIPTION,SERVICE_ID,SERVICE_RECORD_ID,GREENBOOK,GREENBOOK_RECORD_ID,TOOL_VALUEDRIVER_ID,TOOL_VALUEDRIVER_RECORD_ID,TOOL_VALUEDRIVER_VALUE_DESCRIPTION,TOOL_VALUEDRIVER_VALUE_RECORD_ID,TOOL_VALUEDRIVER_VALUE_CODE,VALUEDRIVER_COEFFICIENT_RECORD_ID,VALUEDRIVER_COEFFICIENT,CPQTABLEENTRYDATEADDED, CPQTABLEENTRYADDEDBY, ADDUSR_RECORD_ID, CpqTableEntryModifiedBy,CpqTableEntryDateModified)
        VALUES (QTEREV_RECORD_ID,FABLOCATION_ID,FABLOCATION_NAME, FABLOCATION_RECORD_ID,NEWID(),QUOTE_ID,QUOTE_NAME,QUOTE_RECORD_ID,SERVICE_DESCRIPTION,SERVICE_ID,SERVICE_RECORD_ID,GREENBOOK,GREENBOOK_RECORD_ID,VALUEDRIVER_ID,VALUEDRIVER_RECORD_ID,VALUEDRIVER_VALUE_DESCRIPTION,VALUEDRIVER_VALUE_RECORD_ID,VALUEDRIVER_VALUE_CODE,VALUEDRIVER_COEFFICIENT_RECORD_ID,VALUEDRIVER_COEFFICIENT,'{datetimenow}', '{username}', {userid}, {userid}, '{datetimenow}');""".format(
    rec=Qt_rec_id, datetimenow=datetime.datetime.now().strftime("%m/%d/%Y %H:%M:%S %p"), userid=userId, username=userName,treeparam=TreeParam,qurev_rec_id=quote_revision_record_id
    )
    Log.Info(QueryStatement)
    Sql.RunQuery(QueryStatement)
    QueryStatement = """
    MERGE SAQSCD SRC USING ( SELECT A.FABLOCATION_ID,A.FABLOCATION_NAME,A.FABLOCATION_RECORD_ID,A.EQUIPMENT_DESCRIPTION,A.EQUIPMENT_ID,A.EQUIPMENT_RECORD_ID,A.QUOTE_ID,A.QUOTE_NAME,A.QUOTE_RECORD_ID,B.TOOL_VALUEDRIVER_RECORD_ID,A.QUOTE_SERVICE_COVERED_OBJECTS_RECORD_ID,B.TOOL_VALUEDRIVER_ID,B.SERVICE_RECORD_ID,B.SERVICE_ID,B.SERVICE_DESCRIPTION,A.GREENBOOK,A.GREENBOOK_RECORD_ID,B.CpqTableEntryDateModified,B.CpqTableEntryModifiedBy,A.SERIAL_NO,B.QTEREV_RECORD_ID FROM SAQSCO(NOLOCK) A JOIN SAQSVD (NOLOCK) B ON A.QUOTE_RECORD_ID  = B.QUOTE_RECORD_ID  AND A.SERVICE_ID = B.SERVICE_ID  where B.QUOTE_RECORD_ID = '{rec}' and B.SERVICE_ID = '{treeparam}' AND B.QTEREV_RECORD_ID='{qurev_rec_id}')
    TGT ON (SRC.QUOTE_RECORD_ID = TGT.QUOTE_RECORD_ID AND SRC.QTESRVCOB_RECORD_ID = TGT.QUOTE_SERVICE_COVERED_OBJECTS_RECORD_ID AND SRC.VALUEDRIVER_ID = TGT.TOOL_VALUEDRIVER_ID AND SRC.SERVICE_ID = TGT.SERVICE_ID AND SRC.FABLOCATION_RECORD_ID = TGT.FABLOCATION_RECORD_ID AND SRC.GREENBOOK = TGT.GREENBOOK AND SRC.QTEREV_RECORD_ID = TGT.QTEREV_RECORD_ID )
    WHEN MATCHED 
    THEN UPDATE SET SRC.VALUEDRIVER_RECORD_ID = TGT.TOOL_VALUEDRIVER_RECORD_ID,SRC.VALUEDRIVER_ID =TGT.TOOL_VALUEDRIVER_ID,SRC.CpqTableEntryModifiedBy = TGT.CpqTableEntryModifiedBy,SRC.CpqTableEntryDateModified = TGT.CpqTableEntryDateModified
    WHEN NOT MATCHED BY TARGET
    THEN INSERT (QTEREV_RECORD_ID,FABLOCATION_ID,FABLOCATION_NAME, FABLOCATION_RECORD_ID,GREENBOOK, GREENBOOK_RECORD_ID,QUOTE_SERVICE_COVERED_OBJ_TOOL_DRIVER_RECORD_ID,EQUIPMENT_DESCRIPTION,EQUIPMENT_ID,EQUIPMENT_RECORD_ID,QUOTE_ID,QUOTE_NAME,QUOTE_RECORD_ID,SERIAL_NUMBER,SERVICE_DESCRIPTION,SERVICE_ID,SERVICE_RECORD_ID,VALUEDRIVER_ID,VALUEDRIVER_RECORD_ID,QTESRVCOB_RECORD_ID,CPQTABLEENTRYDATEADDED, CPQTABLEENTRYADDEDBY, ADDUSR_RECORD_ID, CpqTableEntryModifiedBy,CpqTableEntryDateModified )
    VALUES (QTEREV_RECORD_ID,FABLOCATION_ID,FABLOCATION_NAME, FABLOCATION_RECORD_ID,GREENBOOK, GREENBOOK_RECORD_ID,NEWID(),EQUIPMENT_DESCRIPTION,EQUIPMENT_ID,EQUIPMENT_RECORD_ID,QUOTE_ID,QUOTE_NAME,QUOTE_RECORD_ID,SERIAL_NO,SERVICE_DESCRIPTION,SERVICE_ID,SERVICE_RECORD_ID,TOOL_VALUEDRIVER_ID,TOOL_VALUEDRIVER_RECORD_ID,QUOTE_SERVICE_COVERED_OBJECTS_RECORD_ID,'{datetimenow}', '{username}', {userid}, {userid}, '{datetimenow}');""".format(
    rec=Qt_rec_id, datetimenow=datetime.datetime.now().strftime("%m/%d/%Y %H:%M:%S %p"), userid=userId, username=userName,treeparam=TreeParam,qurev_rec_id=quote_revision_record_id
    )
    #Log.Info(QueryStatement)
    Sql.RunQuery(QueryStatement)
    QueryStatement = """
    MERGE SAQSCV SRC USING ( SELECT A.FABLOCATION_ID,A.FABLOCATION_NAME,A.FABLOCATION_RECORD_ID,A.EQUIPMENT_DESCRIPTION,A.EQUIPMENT_ID,A.EQUIPMENT_RECORD_ID,A.QUOTE_ID,A.QUOTE_NAME,A.QUOTE_RECORD_ID,B.TOOL_VALUEDRIVER_RECORD_ID,A.QUOTE_SERVICE_COVERED_OBJECTS_RECORD_ID,B.TOOL_VALUEDRIVER_ID,B.SERVICE_RECORD_ID,B.SERVICE_ID,B.SERVICE_DESCRIPTION,A.GREENBOOK,A.GREENBOOK_RECORD_ID,B.TOOL_VALUEDRIVER_VALUE_DESCRIPTION,B.TOOL_VALUEDRIVER_VALUE_RECORD_ID,B.CpqTableEntryDateModified,B.CpqTableEntryModifiedBy,A.SERIAL_NO,B.TOOL_VALUEDRIVER_VALUE_CODE,B.VALUEDRIVER_COEFFICIENT,B.VALUEDRIVER_COEFFICIENT_RECORD_ID,B.QTEREV_RECORD_ID FROM SAQSCO(NOLOCK) A JOIN SAQSDV (NOLOCK) B ON A.QUOTE_RECORD_ID  = B.QUOTE_RECORD_ID  AND A.SERVICE_ID = B.SERVICE_ID  where B.QUOTE_RECORD_ID = '{rec}' and B.SERVICE_ID = '{treeparam}' AND B.QTEREV_RECORD_ID='{qurev_rec_id}') 
    TGT ON (SRC.QUOTE_RECORD_ID = TGT.QUOTE_RECORD_ID AND SRC.QTESRVCOB_RECORD_ID = TGT.QUOTE_SERVICE_COVERED_OBJECTS_RECORD_ID AND SRC.TOOL_VALUEDRIVER_ID = TGT.TOOL_VALUEDRIVER_ID AND SRC.SERVICE_ID = TGT.SERVICE_ID AND SRC.FABLOCATION_RECORD_ID = TGT.FABLOCATION_RECORD_ID AND SRC.GREENBOOK = TGT.GREENBOOK AND SRC.QTEREV_RECORD_ID = TGT.QTEREV_RECORD_ID)
    WHEN MATCHED 
    THEN UPDATE SET SRC.TOOL_VALUEDRIVER_VALUE_DESCRIPTION = TGT.TOOL_VALUEDRIVER_VALUE_DESCRIPTION,SRC.TOOL_VALUEDRIVER_VALUE_RECORD_ID =TGT.TOOL_VALUEDRIVER_VALUE_RECORD_ID,SRC.CpqTableEntryModifiedBy = TGT.CpqTableEntryModifiedBy,SRC.CpqTableEntryDateModified = TGT.CpqTableEntryDateModified,SRC.TOOL_VALUEDRIVER_VALUE_CODE = TGT.TOOL_VALUEDRIVER_VALUE_CODE,SRC.VALUEDRIVER_COEFFICIENT_RECORD_ID = TGT.VALUEDRIVER_COEFFICIENT_RECORD_ID,SRC.VALUEDRIVER_COEFFICIENT = TGT.VALUEDRIVER_COEFFICIENT
    WHEN NOT MATCHED BY TARGET
    THEN INSERT (QTEREV_RECORD_ID,FABLOCATION_ID,FABLOCATION_NAME, FABLOCATION_RECORD_ID,QUOTE_SERVICE_COVERED_OBJ_TOOL_DRIVER_VALUE_RECORD_ID,EQUIPMENT_DESCRIPTION,EQUIPMENT_ID,EQUIPMENT_RECORD_ID,QUOTE_ID,QUOTE_NAME,QUOTE_RECORD_ID,QTESRVCOB_RECORD_ID,SERVICE_DESCRIPTION,SERVICE_ID,SERVICE_RECORD_ID,GREENBOOK,GREENBOOK_RECORD_ID,TOOL_VALUEDRIVER_ID,TOOL_VALUEDRIVER_RECORD_ID,TOOL_VALUEDRIVER_VALUE_DESCRIPTION,TOOL_VALUEDRIVER_VALUE_RECORD_ID,SERIAL_NUMBER,TOOL_VALUEDRIVER_VALUE_CODE,VALUEDRIVER_COEFFICIENT_RECORD_ID,VALUEDRIVER_COEFFICIENT,CPQTABLEENTRYDATEADDED, CPQTABLEENTRYADDEDBY, ADDUSR_RECORD_ID, CpqTableEntryModifiedBy,CpqTableEntryDateModified)
    VALUES (QTEREV_RECORD_ID,FABLOCATION_ID,FABLOCATION_NAME, FABLOCATION_RECORD_ID,NEWID(),EQUIPMENT_DESCRIPTION,EQUIPMENT_ID,EQUIPMENT_RECORD_ID,QUOTE_ID,QUOTE_NAME,QUOTE_RECORD_ID,QUOTE_SERVICE_COVERED_OBJECTS_RECORD_ID,	SERVICE_DESCRIPTION,SERVICE_ID,SERVICE_RECORD_ID,GREENBOOK,GREENBOOK_RECORD_ID,TOOL_VALUEDRIVER_ID,TOOL_VALUEDRIVER_RECORD_ID,TOOL_VALUEDRIVER_VALUE_DESCRIPTION,TOOL_VALUEDRIVER_VALUE_RECORD_ID,SERIAL_NO,TOOL_VALUEDRIVER_VALUE_CODE,VALUEDRIVER_COEFFICIENT_RECORD_ID,VALUEDRIVER_COEFFICIENT,'{datetimenow}', '{username}', {userid}, {userid}, '{datetimenow}');""".format(
    rec=Qt_rec_id, datetimenow=datetime.datetime.now().strftime("%m/%d/%Y %H:%M:%S %p"), userid=userId, username=userName,treeparam=TreeParam,qurev_rec_id=quote_revision_record_id
    )
    #Log.Info(QueryStatement)
    Sql.RunQuery(QueryStatement)
    QueryStatement = "UPDATE A  SET TOOL_VALUEDRIVER_COEFFICIENT = VALUEDRIVER_COEFFICIENT FROM SAQICO A(NOLOCK) JOIN (SELECT QUOTE_RECORD_ID,EQUIPMENT_ID,SUM(VALUEDRIVER_COEFFICIENT) AS VALUEDRIVER_COEFFICIENT from SAQSCV(NOLOCK) WHERE QUOTE_RECORD_ID ='"+str(Qt_rec_id)+"' AND SERVICE_ID = '" + str(TreeParam) + "'AND QTEREV_RECORD_ID = '"+str(quote_revision_record_id)+"' GROUP BY QUOTE_RECORD_ID,EQUIPMENT_ID) B ON A.QUOTE_RECORD_ID = B.QUOTE_RECORD_ID AND A.EQUIPMENT_ID = B.EQUIPMENT_ID"
    Sql.RunQuery(QueryStatement)
    level = ""
    level = "Service Cost and Value Drivers"
    sendEmail(level)

def sendEmail(level):
    getQuoteId = SqlHelper.GetFirst("SELECT QUOTE_ID FROM SAQTMT WHERE MASTER_TABLE_QUOTE_RECORD_ID = '{}' AND QTEREV_RECORD_ID = '{}'".format(Qt_rec_id,quote_revision_record_id))
    getEmail = SqlHelper.GetFirst("SELECT email from users where id={}".format(userId))
    #Log.Info("SELECT email from users where id='{}'".format(userId))
    userEmail = ""
    userEmail = getEmail.email
    Header = "<!DOCTYPE html><html><head><style>h4{font-weight:normal; font-family:sans-serif;} table {font-family: Calibri, sans-serif; border-collapse: collapse; width: 75%}td, th {  border: 1px solid #dddddd;  text-align: left; padding: 8px;}.im {color: #222;}tr:nth-child(even) {background-color: #dddddd;} #grey{background: rgb(245,245,245);} #bd{color : 'black';}</style> </head> <body><h4>Hi, <br> <br>The value driver settings have been applied to the equipment in the following quote:</br></h4>"

    Table_start ="<table class='table table-bordered'><tr><th id = 'grey'>Quote ID</th><th id = 'grey'>Rolldown Level</th><th id = 'grey'>Rolldown Status</th></tr><tr><td >"+str(getQuoteId.QUOTE_ID)+"</td><td>"+str(level)+"</td><td>Completed</td></tr></table> <br> <br>Note: Please do not reply to this email.</body></html>"

    Error_Info = Header + Table_start

    LOGIN_CRE = SqlHelper.GetFirst("SELECT User_name,Password FROM SYCONF where Domain ='SUPPORT_MAIL'")

    # Create new SmtpClient object
    mailClient = SmtpClient()

    # Set the host and port (eg. smtp.gmail.com)
    mailClient.Host = "smtp.gmail.com"
    mailClient.Port = 587
    mailClient.EnableSsl = "true"

    # Setup NetworkCredential
    mailCred = NetworkCredential()
    mailCred.UserName = str(LOGIN_CRE.User_name)
    mailCred.Password = str(LOGIN_CRE.Password)
    mailClient.Credentials = mailCred
    to_email = ''
    to_email += str(userEmail)
    #Log.Info()
    from_email = ''
    from_email += str(userEmail)
    # Create two mail adresses, one for send from and the another for recipient
    toEmail = MailAddress(to_email)
    fromEmail = MailAddress(from_email)

    # Create new MailMessage object
    msg = MailMessage(fromEmail, toEmail)

    # Set message subject and body
    msg.Subject = str(level)+" Rolldown"
    msg.IsBodyHtml = True
    msg.Body = Error_Info
    copyEmail1 = MailAddress("sathyabama.akhala@bostonharborconsulting.com")
    copyEmail2 = MailAddress("mayura.priya@bostonharborconsulting.com")
    #copyEmail3 = MailAddress("namrata.sivakumar@bostonharborconsulting.com")
    copyEmail4 = MailAddress("ranjani.parkavi@bostonharborconsulting.com")
    copyEmail5 = MailAddress("ashish.gandotra@bostonharborconsulting.com")
    msg.Bcc.Add(copyEmail1)
    msg.Bcc.Add(copyEmail2)
    #msg.Bcc.Add(copyEmail3)
    msg.Bcc.Add(copyEmail4)
    msg.Bcc.Add(copyEmail5)
    # CC Emails
    '''user_obj = SqlHelper.GetFirst("""SELECT USERS.EMAIL 
                            FROM SGSGRV 
                            INNER JOIN USERS ON USERS.ID = SGSGRV.OWNER_RECORD_ID
                            WHERE SGSGRV.STG_SEGREV_ID='{RevisionId}' 
                            AND SGSGRV.SEGMENT_RECORD_ID='{SegmentRecordId}'""".format(RevisionId=versionId, SegmentRecordId=segmentId))
    if user_obj:
        copyEmail1 = MailAddress("ranjani.parkavi@bostonharborconsulting.com")
        msg.CC.Add(copyEmail1)

        copyEmail4 = MailAddress(str(user_obj.EMAIL))
        msg.CC.Add(copyEmail4) '''
    # Send the message
    mailClient.Send(msg)

    return True
def FabCostAndValueDrivers():
    QueryStatement = "DELETE FROM SAQSGB WHERE QUOTE_RECORD_ID ='"+str(Qt_rec_id)+"' AND SERVICE_ID = '" + str(TreeParentParam) + "' AND FABLOCATION_ID = '" + str(TreeParam) + "'AND QTEREV_RECORD_ID ='"+str(quote_revision_record_id)+"'"
    Sql.RunQuery(QueryStatement)
    # ADDING GREEN BOOK TO ALREADY AVAILABLE COVERED OBJECTS 1520 
    Parameter = SqlHelper.GetFirst("SELECT QUERY_CRITERIA_1 FROM SYDBQS (NOLOCK) WHERE QUERY_NAME = 'SELECT' ")
    primaryQueryItems = SqlHelper.GetFirst(
    ""
    + str(Parameter.QUERY_CRITERIA_1)
    + " SAQSGB (FABLOCATION_ID,FABLOCATION_NAME, FABLOCATION_RECORD_ID,SERVICE_ID,SERVICE_DESCRIPTION,SERVICE_RECORD_ID,GREENBOOK,GREENBOOK_RECORD_ID,QUOTE_ID,QUOTE_NAME,QUOTE_RECORD_ID,SALESORG_ID,SALESORG_NAME,SALESORG_RECORD_ID,QTEREV_RECORD_ID,CPQTABLEENTRYADDEDBY, CpqTableEntryModifiedBy, ADDUSR_RECORD_ID, CPQTABLEENTRYDATEADDED, CpqTableEntryDateModified,QUOTE_SERVICE_GREENBOOK_RECORD_ID) SELECT A. *,getdate(),getdate(),CONVERT(VARCHAR(4000),NEWID()) FROM (SELECT DISTINCT A.FABLOCATION_ID,A.FABLOCATION_NAME,A.FABLOCATION_RECORD_ID,A.SERVICE_ID,A.SERVICE_DESCRIPTION,A.SERVICE_RECORD_ID,A.GREENBOOK,A.GREENBOOK_RECORD_ID,A.QUOTE_ID,A.QUOTE_NAME,A.QUOTE_RECORD_ID,A.SALESORG_ID,A.SALESORG_NAME,A.SALESORG_RECORD_ID,A.QTEREV_RECORD_ID,A.CPQTABLEENTRYADDEDBY, A.CpqTableEntryModifiedBy, A.ADDUSR_RECORD_ID FROM SAQSCO A left join SAQSGB b on a.QUOTE_RECORD_ID = ''"+str(Qt_rec_id)+"'' and a.QUOTE_ID =b.QUOTE_ID and a.SERVICE_RECORD_ID =b.SERVICE_RECORD_ID AND A.GREENBOOK = b.GREENBOOK AND A.FABLOCATION_ID = B.FABLOCATION_ID AND A.QTEREV_RECORD_ID =B.QTEREV_RECORD_ID WHERE b.QUOTE_ID IS NULL )A ' " )

    # MERGE SAQSGD USING QTQSGB AND SAQSVD - GREENBOOK ROLLDOWN 1520
    QueryStatement = """
    MERGE SAQSGD SRC USING ( SELECT A.FABLOCATION_ID,A.FABLOCATION_NAME,A.FABLOCATION_RECORD_ID,A.SERVICE_ID,A.SERVICE_DESCRIPTION,A.SERVICE_RECORD_ID,A.QUOTE_ID,A.QUOTE_NAME,A.QUOTE_RECORD_ID,A.GREENBOOK, A.GREENBOOK_RECORD_ID,B.VALUEDRIVER_ID,B.VALUEDRIVER_RECORD_ID,B.QTEREV_RECORD_ID FROM SAQSGB(NOLOCK) A JOIN SAQSFD (NOLOCK) B ON A.QUOTE_RECORD_ID  = B.QUOTE_RECORD_ID AND A.SERVICE_ID = B.SERVICE_ID AND A.FABLOCATION_ID = B.FABLOCATION_ID where B.QUOTE_RECORD_ID = '{rec}' AND B.SERVICE_ID = '{treeparentparam}' AND A.FABLOCATION_ID = '{treeparam}' AND B.QTEREV_RECORD_ID='{qurev_rec_id}') 
    TGT ON (SRC.QUOTE_RECORD_ID = TGT.QUOTE_RECORD_ID AND SRC.SERVICE_ID = TGT.SERVICE_ID AND SRC.TOOL_VALUEDRIVER_ID =TGT.VALUEDRIVER_ID AND SRC.GREENBOOK = TGT.GREENBOOK AND SRC.FABLOCATION_ID = TGT.FABLOCATION_ID AND SRC.QTEREV_RECORD_ID = TGT.QTEREV_RECORD_ID)
    WHEN MATCHED 
    THEN UPDATE SET SRC.TOOL_VALUEDRIVER_ID = TGT.VALUEDRIVER_ID,SRC.TOOL_VALUEDRIVER_RECORD_ID =TGT.VALUEDRIVER_RECORD_ID
    WHEN NOT MATCHED BY TARGET
    THEN INSERT (QTEREV_RECORD_ID,FABLOCATION_ID,FABLOCATION_NAME, FABLOCATION_RECORD_ID,QUOTE_RECORD_ID,SERVICE_ID,SERVICE_DESCRIPTION,SERVICE_RECORD_ID,QUOTE_ID,QUOTE_NAME,TOOL_VALUEDRIVER_ID,TOOL_VALUEDRIVER_RECORD_ID,GREENBOOK,GREENBOOK_RECORD_ID,QUOTE_SERVICE_GREENBOOK_VAL_DRV_RECORD_ID,CPQTABLEENTRYDATEADDED, CPQTABLEENTRYADDEDBY, ADDUSR_RECORD_ID, CpqTableEntryModifiedBy,CpqTableEntryDateModified)
    VALUES (QTEREV_RECORD_ID,FABLOCATION_ID,FABLOCATION_NAME, FABLOCATION_RECORD_ID,QUOTE_RECORD_ID,SERVICE_ID,SERVICE_DESCRIPTION,SERVICE_RECORD_ID,QUOTE_ID,QUOTE_NAME,VALUEDRIVER_ID,VALUEDRIVER_RECORD_ID,GREENBOOK,GREENBOOK_RECORD_ID,NEWID(),'{datetimenow}', '{username}', {userid}, {userid}, '{datetimenow}');""".format(
    rec=Qt_rec_id, datetimenow=datetime.datetime.now().strftime("%m/%d/%Y %H:%M:%S %p"), userid=userId, username=userName,treeparam=TreeParam,treeparentparam=TreeParentParam,qurev_rec_id=quote_revision_record_id
    )
    Sql.RunQuery(QueryStatement)
    # MERGE SAQSGD USING SAQSGV AND SAQSDV - GREENBOOK ROLLDOWN 1520
    QueryStatement = """
    MERGE SAQSGV SRC USING ( SELECT A.FABLOCATION_ID,A.FABLOCATION_NAME,A.FABLOCATION_RECORD_ID,A.QUOTE_ID,A.QUOTE_NAME,A.QUOTE_RECORD_ID,B.VALUEDRIVER_RECORD_ID,B.VALUEDRIVER_ID,B.SERVICE_RECORD_ID,B.SERVICE_ID,B.SERVICE_DESCRIPTION,A.GREENBOOK,A.GREENBOOK_RECORD_ID,B.VALUEDRIVER_VALUE_DESCRIPTION,B.VALUEDRIVER_VALUE_RECORD_ID,B.CpqTableEntryDateModified,B.CpqTableEntryModifiedBy,B.VALUEDRIVER_VALUE_CODE,B.VALUEDRIVER_COEFFICIENT,B.VALUEDRIVER_COEFFICIENT_RECORD_ID,B.QTEREV_RECORD_ID FROM SAQSGB (NOLOCK) A JOIN SAQSFV (NOLOCK) B ON A.QUOTE_RECORD_ID  = B.QUOTE_RECORD_ID AND A.SERVICE_ID = B.SERVICE_ID AND A.FABLOCATION_ID = B.FABLOCATION_ID WHERE B.QUOTE_RECORD_ID = '{rec}' AND B.SERVICE_ID = '{treeparentparam}' AND A.FABLOCATION_ID = '{treeparam}'AND B.QTEREV_RECORD_ID='{qurev_rec_id}' ) 
    TGT ON (SRC.QUOTE_RECORD_ID = TGT.QUOTE_RECORD_ID AND SRC.TOOL_VALUEDRIVER_ID = TGT.VALUEDRIVER_ID AND SRC.SERVICE_ID = TGT.SERVICE_ID AND SRC.GREENBOOK = TGT.GREENBOOK AND SRC.FABLOCATION_ID = TGT.FABLOCATION_ID AND SRC.QTEREV_RECORD_ID = TGT.QTEREV_RECORD_ID)
    WHEN MATCHED 
    THEN UPDATE SET SRC.TOOL_VALUEDRIVER_VALUE_DESCRIPTION = TGT.VALUEDRIVER_VALUE_DESCRIPTION,SRC.TOOL_VALUEDRIVER_VALUE_RECORD_ID =TGT.VALUEDRIVER_VALUE_RECORD_ID,SRC.CpqTableEntryModifiedBy = TGT.CpqTableEntryModifiedBy,SRC.CpqTableEntryDateModified = TGT.CpqTableEntryDateModified,SRC.TOOL_VALUEDRIVER_VALUE_CODE = TGT.VALUEDRIVER_VALUE_CODE,SRC.VALUEDRIVER_COEFFICIENT_RECORD_ID = TGT.VALUEDRIVER_COEFFICIENT_RECORD_ID,SRC.VALUEDRIVER_COEFFICIENT = TGT.VALUEDRIVER_COEFFICIENT,
    SRC.GREENBOOK = TGT.GREENBOOK,
    SRC.GREENBOOK_RECORD_ID = TGT.GREENBOOK_RECORD_ID,
    SRC.FABLOCATION_ID = TGT.FABLOCATION_ID,
    SRC.FABLOCATION_NAME = TGT.FABLOCATION_NAME,
    SRC.FABLOCATION_RECORD_ID = TGT.FABLOCATION_RECORD_ID
    WHEN NOT MATCHED BY TARGET
        THEN INSERT (QTEREV_RECORD_ID,FABLOCATION_ID,FABLOCATION_NAME, FABLOCATION_RECORD_ID,QUOTE_SERVICE_GBK_VAL_DRV_VAL_RECORD_ID,QUOTE_ID,QUOTE_NAME,QUOTE_RECORD_ID,SERVICE_DESCRIPTION,SERVICE_ID,SERVICE_RECORD_ID,GREENBOOK,GREENBOOK_RECORD_ID,TOOL_VALUEDRIVER_ID,TOOL_VALUEDRIVER_RECORD_ID,TOOL_VALUEDRIVER_VALUE_DESCRIPTION,TOOL_VALUEDRIVER_VALUE_RECORD_ID,TOOL_VALUEDRIVER_VALUE_CODE,VALUEDRIVER_COEFFICIENT_RECORD_ID,VALUEDRIVER_COEFFICIENT,CPQTABLEENTRYDATEADDED, CPQTABLEENTRYADDEDBY, ADDUSR_RECORD_ID, CpqTableEntryModifiedBy,CpqTableEntryDateModified)
        VALUES (QTEREV_RECORD_ID,FABLOCATION_ID,FABLOCATION_NAME, FABLOCATION_RECORD_ID,NEWID(),QUOTE_ID,QUOTE_NAME,QUOTE_RECORD_ID,SERVICE_DESCRIPTION,SERVICE_ID,SERVICE_RECORD_ID,GREENBOOK,GREENBOOK_RECORD_ID,VALUEDRIVER_ID,VALUEDRIVER_RECORD_ID,VALUEDRIVER_VALUE_DESCRIPTION,VALUEDRIVER_VALUE_RECORD_ID,VALUEDRIVER_VALUE_CODE,VALUEDRIVER_COEFFICIENT_RECORD_ID,VALUEDRIVER_COEFFICIENT,'{datetimenow}', '{username}', {userid}, {userid}, '{datetimenow}');""".format(
    rec=Qt_rec_id, datetimenow=datetime.datetime.now().strftime("%m/%d/%Y %H:%M:%S %p"), userid=userId, username=userName,treeparam=TreeParam,treeparentparam=TreeParentParam,qurev_rec_id=quote_revision_record_id
    )
    Sql.RunQuery(QueryStatement)
    # ADD FAB COLUMNS, GREENBOOK KEY (SAQSGB KEY)
    QueryStatement = """
    MERGE SAQSCD SRC USING ( SELECT A.FABLOCATION_ID,A.FABLOCATION_NAME,A.FABLOCATION_RECORD_ID,A.EQUIPMENT_DESCRIPTION,A.EQUIPMENT_ID,A.EQUIPMENT_RECORD_ID,A.QUOTE_ID,A.QUOTE_NAME,A.QUOTE_RECORD_ID,B.VALUEDRIVER_RECORD_ID,A.QUOTE_SERVICE_COVERED_OBJECTS_RECORD_ID,B.VALUEDRIVER_ID,B.SERVICE_RECORD_ID,B.SERVICE_ID,B.SERVICE_DESCRIPTION,A.GREENBOOK,A.GREENBOOK_RECORD_ID,B.CpqTableEntryDateModified,B.CpqTableEntryModifiedBy,A.SERIAL_NO,B.QTEREV_RECORD_ID FROM SAQSCO(NOLOCK) A JOIN SAQSFD (NOLOCK) B ON A.QUOTE_RECORD_ID  = B.QUOTE_RECORD_ID  AND A.SERVICE_ID = B.SERVICE_ID AND A.FABLOCATION_ID = B.FABLOCATION_ID where B.QUOTE_RECORD_ID = '{rec}' and B.SERVICE_ID = '{treeparentparam}' AND B.FABLOCATION_ID = '{treeparam}' AND B.QTEREV_RECORD_ID='{qurev_rec_id}')
    TGT ON (SRC.QUOTE_RECORD_ID = TGT.QUOTE_RECORD_ID AND SRC.QTESRVCOB_RECORD_ID = TGT.QUOTE_SERVICE_COVERED_OBJECTS_RECORD_ID AND SRC.VALUEDRIVER_ID = TGT.VALUEDRIVER_ID AND SRC.SERVICE_ID = TGT.SERVICE_ID AND SRC.FABLOCATION_ID = TGT.FABLOCATION_ID AND SRC.QTEREV_RECORD_ID = TGT.QTEREV_RECORD_ID )
    WHEN MATCHED 
    THEN UPDATE SET SRC.VALUEDRIVER_RECORD_ID = TGT.VALUEDRIVER_RECORD_ID,SRC.VALUEDRIVER_ID =TGT.VALUEDRIVER_ID,SRC.CpqTableEntryModifiedBy = TGT.CpqTableEntryModifiedBy,SRC.CpqTableEntryDateModified = TGT.CpqTableEntryDateModified
    WHEN NOT MATCHED BY TARGET
    THEN INSERT (QTEREV_RECORD_ID,FABLOCATION_ID,FABLOCATION_NAME, FABLOCATION_RECORD_ID,GREENBOOK, GREENBOOK_RECORD_ID,QUOTE_SERVICE_COVERED_OBJ_TOOL_DRIVER_RECORD_ID,EQUIPMENT_DESCRIPTION,EQUIPMENT_ID,EQUIPMENT_RECORD_ID,QUOTE_ID,QUOTE_NAME,QUOTE_RECORD_ID,SERIAL_NUMBER,SERVICE_DESCRIPTION,SERVICE_ID,SERVICE_RECORD_ID,VALUEDRIVER_ID,VALUEDRIVER_RECORD_ID,QTESRVCOB_RECORD_ID,CPQTABLEENTRYDATEADDED, CPQTABLEENTRYADDEDBY, ADDUSR_RECORD_ID, CpqTableEntryModifiedBy,CpqTableEntryDateModified )
    VALUES (QTEREV_RECORD_ID,FABLOCATION_ID,FABLOCATION_NAME, FABLOCATION_RECORD_ID,GREENBOOK, GREENBOOK_RECORD_ID,NEWID(),EQUIPMENT_DESCRIPTION,EQUIPMENT_ID,EQUIPMENT_RECORD_ID,QUOTE_ID,QUOTE_NAME,QUOTE_RECORD_ID,SERIAL_NO,SERVICE_DESCRIPTION,SERVICE_ID,SERVICE_RECORD_ID,VALUEDRIVER_ID,VALUEDRIVER_RECORD_ID,QUOTE_SERVICE_COVERED_OBJECTS_RECORD_ID,'{datetimenow}', '{username}', {userid}, {userid}, '{datetimenow}');""".format(
    rec=Qt_rec_id, datetimenow=datetime.datetime.now().strftime("%m/%d/%Y %H:%M:%S %p"), userid=userId, username=userName,treeparam=TreeParam,treesuperparentparam=TreeSuperParentParam,treeparentparam=TreeParentParam,qurev_rec_id=quote_revision_record_id
    )
    Sql.RunQuery(QueryStatement)
    QueryStatement = """
    MERGE SAQSCV SRC USING ( SELECT A.FABLOCATION_ID,A.FABLOCATION_NAME,A.FABLOCATION_RECORD_ID,A.EQUIPMENT_DESCRIPTION,A.EQUIPMENT_ID,A.EQUIPMENT_RECORD_ID,A.QUOTE_ID,A.QUOTE_NAME,A.QUOTE_RECORD_ID,B.VALUEDRIVER_RECORD_ID,A.QUOTE_SERVICE_COVERED_OBJECTS_RECORD_ID,B.VALUEDRIVER_ID,B.SERVICE_RECORD_ID,B.SERVICE_ID,B.SERVICE_DESCRIPTION,A.GREENBOOK,A.GREENBOOK_RECORD_ID,B.VALUEDRIVER_VALUE_DESCRIPTION,B.VALUEDRIVER_VALUE_RECORD_ID,B.CpqTableEntryDateModified,B.CpqTableEntryModifiedBy,A.SERIAL_NO,B.VALUEDRIVER_VALUE_CODE,B.VALUEDRIVER_COEFFICIENT,B.VALUEDRIVER_COEFFICIENT_RECORD_ID,B.QTEREV_RECORD_ID FROM SAQSCO(NOLOCK) A JOIN SAQSFV (NOLOCK) B ON A.QUOTE_RECORD_ID  = B.QUOTE_RECORD_ID  AND A.SERVICE_ID = B.SERVICE_ID AND A.FABLOCATION_ID = B.FABLOCATION_ID  where B.QUOTE_RECORD_ID = '{rec}' and B.SERVICE_ID = '{treeparentparam}' AND B.FABLOCATION_ID = '{treeparam}' AND B.QTEREV_RECORD_ID='{qurev_rec_id}') 
    TGT ON (SRC.QUOTE_RECORD_ID = TGT.QUOTE_RECORD_ID AND SRC.QTESRVCOB_RECORD_ID = TGT.QUOTE_SERVICE_COVERED_OBJECTS_RECORD_ID AND SRC.TOOL_VALUEDRIVER_ID = TGT.VALUEDRIVER_ID AND SRC.SERVICE_ID = TGT.SERVICE_ID AND SRC.FABLOCATION_ID = TGT.FABLOCATION_ID AND SRC.QTEREV_RECORD_ID = TGT.QTEREV_RECORD_ID)
    WHEN MATCHED 
    THEN UPDATE SET SRC.TOOL_VALUEDRIVER_VALUE_DESCRIPTION = TGT.VALUEDRIVER_VALUE_DESCRIPTION,SRC.TOOL_VALUEDRIVER_VALUE_RECORD_ID =TGT.VALUEDRIVER_VALUE_RECORD_ID,SRC.CpqTableEntryModifiedBy = TGT.CpqTableEntryModifiedBy,SRC.CpqTableEntryDateModified = TGT.CpqTableEntryDateModified,SRC.TOOL_VALUEDRIVER_VALUE_CODE = TGT.VALUEDRIVER_VALUE_CODE,SRC.VALUEDRIVER_COEFFICIENT_RECORD_ID = TGT.VALUEDRIVER_COEFFICIENT_RECORD_ID,SRC.VALUEDRIVER_COEFFICIENT = TGT.VALUEDRIVER_COEFFICIENT,SRC.GREENBOOK = TGT.GREENBOOK,SRC.GREENBOOK_RECORD_ID=TGT.GREENBOOK_RECORD_ID
    WHEN NOT MATCHED BY TARGET
    THEN INSERT (QTEREV_RECORD_ID,FABLOCATION_ID,FABLOCATION_NAME, FABLOCATION_RECORD_ID,QUOTE_SERVICE_COVERED_OBJ_TOOL_DRIVER_VALUE_RECORD_ID,EQUIPMENT_DESCRIPTION,EQUIPMENT_ID,EQUIPMENT_RECORD_ID,QUOTE_ID,QUOTE_NAME,QUOTE_RECORD_ID,QTESRVCOB_RECORD_ID,SERVICE_DESCRIPTION,SERVICE_ID,SERVICE_RECORD_ID,GREENBOOK,GREENBOOK_RECORD_ID,TOOL_VALUEDRIVER_ID,TOOL_VALUEDRIVER_RECORD_ID,TOOL_VALUEDRIVER_VALUE_DESCRIPTION,TOOL_VALUEDRIVER_VALUE_RECORD_ID,SERIAL_NUMBER,TOOL_VALUEDRIVER_VALUE_CODE,VALUEDRIVER_COEFFICIENT_RECORD_ID,VALUEDRIVER_COEFFICIENT,CPQTABLEENTRYDATEADDED, CPQTABLEENTRYADDEDBY, ADDUSR_RECORD_ID, CpqTableEntryModifiedBy,CpqTableEntryDateModified)
    VALUES (QTEREV_RECORD_ID,FABLOCATION_ID,FABLOCATION_NAME, FABLOCATION_RECORD_ID,NEWID(),EQUIPMENT_DESCRIPTION,EQUIPMENT_ID,EQUIPMENT_RECORD_ID,QUOTE_ID,QUOTE_NAME,QUOTE_RECORD_ID,QUOTE_SERVICE_COVERED_OBJECTS_RECORD_ID,	SERVICE_DESCRIPTION,SERVICE_ID,SERVICE_RECORD_ID,GREENBOOK,GREENBOOK_RECORD_ID,VALUEDRIVER_ID,VALUEDRIVER_RECORD_ID,VALUEDRIVER_VALUE_DESCRIPTION,VALUEDRIVER_VALUE_RECORD_ID,SERIAL_NO,VALUEDRIVER_VALUE_CODE,VALUEDRIVER_COEFFICIENT_RECORD_ID,VALUEDRIVER_COEFFICIENT,'{datetimenow}', '{username}', {userid}, {userid}, '{datetimenow}');""".format(
    rec=Qt_rec_id, datetimenow=datetime.datetime.now().strftime("%m/%d/%Y %H:%M:%S %p"), userid=userId, username=userName,treeparam=TreeParam,treesuperparentparam=TreeSuperParentParam,treeparentparam=TreeParentParam,qurev_rec_id=quote_revision_record_id
    )
    Sql.RunQuery(QueryStatement)
    QueryStatement = "UPDATE A  SET TOOL_VALUEDRIVER_COEFFICIENT = VALUEDRIVER_COEFFICIENT FROM SAQICO A(NOLOCK) JOIN (SELECT QUOTE_RECORD_ID,EQUIPMENT_ID,SUM(VALUEDRIVER_COEFFICIENT) AS VALUEDRIVER_COEFFICIENT from SAQSCV(NOLOCK) WHERE QUOTE_RECORD_ID ='"+str(Qt_rec_id)+"' AND SERVICE_ID = '" + str(TreeParentParam) + "'AND FABLOCATION_ID ='"+str(TreeParam)+"' AND QTEREV_RECORD_ID='"+str(quote_revision_record_id)+"' GROUP BY QUOTE_RECORD_ID,EQUIPMENT_ID) B ON A.QUOTE_RECORD_ID = B.QUOTE_RECORD_ID AND A.EQUIPMENT_ID = B.EQUIPMENT_ID"
    Sql.RunQuery(QueryStatement)
    level = ""
    level = "Fab Cost and Value Drivers"
    sendEmail(level)

def GreenbookCostAndValueDrivers():
    try:
        QueryStatement = """
        MERGE SAQSCD SRC USING ( SELECT A.FABLOCATION_ID,A.FABLOCATION_NAME,A.FABLOCATION_RECORD_ID,A.EQUIPMENT_DESCRIPTION,A.EQUIPMENT_ID,A.EQUIPMENT_RECORD_ID,A.QUOTE_ID,A.QUOTE_NAME,A.QUOTE_RECORD_ID,B.TOOL_VALUEDRIVER_RECORD_ID,A.QUOTE_SERVICE_COVERED_OBJECTS_RECORD_ID,B.TOOL_VALUEDRIVER_ID,B.SERVICE_RECORD_ID,B.SERVICE_ID,B.SERVICE_DESCRIPTION,A.GREENBOOK,A.GREENBOOK_RECORD_ID,B.CpqTableEntryDateModified,B.CpqTableEntryModifiedBy,A.SERIAL_NO,B.QTEREV_RECORD_ID FROM SAQSCO(NOLOCK) A JOIN SAQSGD (NOLOCK) B ON A.QUOTE_RECORD_ID  = B.QUOTE_RECORD_ID  AND A.SERVICE_ID = B.SERVICE_ID AND A.FABLOCATION_ID = B.FABLOCATION_ID and A.GREENBOOK = B.GREENBOOK where B.QUOTE_RECORD_ID = '{rec}' and B.SERVICE_ID = '{treesuperparentparam}' and B.FABLOCATION_ID = '{treeparentparam}' AND B.GREENBOOK = '{treeparam}' AND B.QTEREV_RECORD_ID='{qurev_rec_id}')
        TGT ON (SRC.QUOTE_RECORD_ID = TGT.QUOTE_RECORD_ID AND SRC.QTESRVCOB_RECORD_ID = TGT.QUOTE_SERVICE_COVERED_OBJECTS_RECORD_ID AND SRC.VALUEDRIVER_ID = TGT.TOOL_VALUEDRIVER_ID AND SRC.SERVICE_ID = TGT.SERVICE_ID AND SRC.FABLOCATION_ID = TGT.FABLOCATION_ID AND SRC.GREENBOOK = TGT.GREENBOOK AND SRC.QTEREV_RECORD_ID = TGT.QTEREV_RECORD_ID)
        WHEN MATCHED 
        THEN UPDATE SET SRC.VALUEDRIVER_RECORD_ID = TGT.TOOL_VALUEDRIVER_RECORD_ID,SRC.VALUEDRIVER_ID =TGT.TOOL_VALUEDRIVER_ID,SRC.CpqTableEntryModifiedBy = TGT.CpqTableEntryModifiedBy,SRC.CpqTableEntryDateModified = TGT.CpqTableEntryDateModified
        WHEN NOT MATCHED BY TARGET
        THEN INSERT (QTEREV_RECORD_ID,FABLOCATION_ID,FABLOCATION_NAME, FABLOCATION_RECORD_ID,GREENBOOK, GREENBOOK_RECORD_ID,QUOTE_SERVICE_COVERED_OBJ_TOOL_DRIVER_RECORD_ID,EQUIPMENT_DESCRIPTION,EQUIPMENT_ID,EQUIPMENT_RECORD_ID,QUOTE_ID,QUOTE_NAME,QUOTE_RECORD_ID,SERIAL_NUMBER,SERVICE_DESCRIPTION,SERVICE_ID,SERVICE_RECORD_ID,VALUEDRIVER_ID,VALUEDRIVER_RECORD_ID,QTESRVCOB_RECORD_ID,CPQTABLEENTRYDATEADDED, CPQTABLEENTRYADDEDBY, ADDUSR_RECORD_ID, CpqTableEntryModifiedBy,CpqTableEntryDateModified )
        VALUES (QTEREV_RECORD_ID,FABLOCATION_ID,FABLOCATION_NAME, FABLOCATION_RECORD_ID,GREENBOOK, GREENBOOK_RECORD_ID,NEWID(),EQUIPMENT_DESCRIPTION,EQUIPMENT_ID,EQUIPMENT_RECORD_ID,QUOTE_ID,QUOTE_NAME,QUOTE_RECORD_ID,SERIAL_NO,SERVICE_DESCRIPTION,SERVICE_ID,SERVICE_RECORD_ID,TOOL_VALUEDRIVER_ID,TOOL_VALUEDRIVER_RECORD_ID,QUOTE_SERVICE_COVERED_OBJECTS_RECORD_ID,'{datetimenow}', '{username}', {userid}, {userid}, '{datetimenow}');""".format(
        rec=Qt_rec_id, datetimenow=datetime.datetime.now().strftime("%m/%d/%Y %H:%M:%S %p"), userid=userId, username=userName,treeparam=TreeParam,treesuperparentparam=TreeSuperParentParam,treeparentparam=TreeParentParam,qurev_rec_id=quote_revision_record_id
        )
        Sql.RunQuery(QueryStatement)
        QueryStatement = """
        MERGE SAQSCV SRC USING ( SELECT A.FABLOCATION_ID,A.FABLOCATION_NAME,A.FABLOCATION_RECORD_ID,A.EQUIPMENT_DESCRIPTION,A.EQUIPMENT_ID,A.EQUIPMENT_RECORD_ID,A.QUOTE_ID,A.QUOTE_NAME,A.QUOTE_RECORD_ID,B.TOOL_VALUEDRIVER_RECORD_ID,A.QUOTE_SERVICE_COVERED_OBJECTS_RECORD_ID,B.TOOL_VALUEDRIVER_ID,B.SERVICE_RECORD_ID,B.SERVICE_ID,B.SERVICE_DESCRIPTION,A.GREENBOOK,A.GREENBOOK_RECORD_ID,B.TOOL_VALUEDRIVER_VALUE_DESCRIPTION,B.TOOL_VALUEDRIVER_VALUE_RECORD_ID,B.CpqTableEntryDateModified,B.CpqTableEntryModifiedBy,A.SERIAL_NO,B.TOOL_VALUEDRIVER_VALUE_CODE,B.VALUEDRIVER_COEFFICIENT,B.VALUEDRIVER_COEFFICIENT_RECORD_ID,B.QTEREV_RECORD_ID FROM SAQSCO(NOLOCK) A JOIN SAQSGV (NOLOCK) B ON A.QUOTE_RECORD_ID  = B.QUOTE_RECORD_ID  AND A.SERVICE_ID = B.SERVICE_ID AND A.FABLOCATION_ID = B.FABLOCATION_ID  and A.GREENBOOK = B.GREENBOOK where B.QUOTE_RECORD_ID = '{rec}' and B.SERVICE_ID = '{treesuperparentparam}' and B.FABLOCATION_ID = '{treeparentparam}' AND B.GREENBOOK = '{treeparam}' AND B.QTEREV_RECORD_ID='{qurev_rec_id}') 
        TGT ON (SRC.QUOTE_RECORD_ID = TGT.QUOTE_RECORD_ID AND SRC.QTESRVCOB_RECORD_ID = TGT.QUOTE_SERVICE_COVERED_OBJECTS_RECORD_ID AND SRC.TOOL_VALUEDRIVER_ID = TGT.TOOL_VALUEDRIVER_ID AND SRC.SERVICE_ID = TGT.SERVICE_ID AND SRC.FABLOCATION_ID = TGT.FABLOCATION_ID AND SRC.GREENBOOK = TGT.GREENBOOK AND SRC.QTEREV_RECORD_ID = TGT.QTEREV_RECORD_ID)
        WHEN MATCHED 
        THEN UPDATE SET SRC.TOOL_VALUEDRIVER_VALUE_DESCRIPTION = TGT.TOOL_VALUEDRIVER_VALUE_DESCRIPTION,SRC.TOOL_VALUEDRIVER_VALUE_RECORD_ID =TGT.TOOL_VALUEDRIVER_VALUE_RECORD_ID,SRC.CpqTableEntryModifiedBy = TGT.CpqTableEntryModifiedBy,SRC.CpqTableEntryDateModified = TGT.CpqTableEntryDateModified,SRC.TOOL_VALUEDRIVER_VALUE_CODE = TGT.TOOL_VALUEDRIVER_VALUE_CODE,SRC.VALUEDRIVER_COEFFICIENT_RECORD_ID = TGT.VALUEDRIVER_COEFFICIENT_RECORD_ID,SRC.VALUEDRIVER_COEFFICIENT = TGT.VALUEDRIVER_COEFFICIENT,SRC.GREENBOOK = TGT.GREENBOOK,SRC.GREENBOOK_RECORD_ID=TGT.GREENBOOK_RECORD_ID
        WHEN NOT MATCHED BY TARGET
        THEN INSERT (QTEREV_RECORD_ID,FABLOCATION_ID,FABLOCATION_NAME, FABLOCATION_RECORD_ID,QUOTE_SERVICE_COVERED_OBJ_TOOL_DRIVER_VALUE_RECORD_ID,EQUIPMENT_DESCRIPTION,EQUIPMENT_ID,EQUIPMENT_RECORD_ID,QUOTE_ID,QUOTE_NAME,QUOTE_RECORD_ID,QTESRVCOB_RECORD_ID,SERVICE_DESCRIPTION,SERVICE_ID,SERVICE_RECORD_ID,GREENBOOK,GREENBOOK_RECORD_ID,TOOL_VALUEDRIVER_ID,TOOL_VALUEDRIVER_RECORD_ID,TOOL_VALUEDRIVER_VALUE_DESCRIPTION,TOOL_VALUEDRIVER_VALUE_RECORD_ID,SERIAL_NUMBER,TOOL_VALUEDRIVER_VALUE_CODE,VALUEDRIVER_COEFFICIENT_RECORD_ID,VALUEDRIVER_COEFFICIENT,CPQTABLEENTRYDATEADDED, CPQTABLEENTRYADDEDBY, ADDUSR_RECORD_ID, CpqTableEntryModifiedBy,CpqTableEntryDateModified)
        VALUES (QTEREV_RECORD_ID,FABLOCATION_ID,FABLOCATION_NAME, FABLOCATION_RECORD_ID,NEWID(),EQUIPMENT_DESCRIPTION,EQUIPMENT_ID,EQUIPMENT_RECORD_ID,QUOTE_ID,QUOTE_NAME,QUOTE_RECORD_ID,QUOTE_SERVICE_COVERED_OBJECTS_RECORD_ID,	SERVICE_DESCRIPTION,SERVICE_ID,SERVICE_RECORD_ID,GREENBOOK,GREENBOOK_RECORD_ID,TOOL_VALUEDRIVER_ID,TOOL_VALUEDRIVER_RECORD_ID,TOOL_VALUEDRIVER_VALUE_DESCRIPTION,TOOL_VALUEDRIVER_VALUE_RECORD_ID,SERIAL_NO,TOOL_VALUEDRIVER_VALUE_CODE,VALUEDRIVER_COEFFICIENT_RECORD_ID,VALUEDRIVER_COEFFICIENT,'{datetimenow}', '{username}', {userid}, {userid}, '{datetimenow}');""".format(
        rec=Qt_rec_id, datetimenow=datetime.datetime.now().strftime("%m/%d/%Y %H:%M:%S %p"), userid=userId, username=userName,treeparam=TreeParam,treesuperparentparam=TreeSuperParentParam,treeparentparam=TreeParentParam,qurev_rec_id=quote_revision_record_id
        )
        Sql.RunQuery(QueryStatement)
        QueryStatement = "UPDATE A  SET TOOL_VALUEDRIVER_COEFFICIENT = VALUEDRIVER_COEFFICIENT FROM SAQICO A(NOLOCK) JOIN (SELECT QUOTE_RECORD_ID,EQUIPMENT_ID,SUM(VALUEDRIVER_COEFFICIENT) AS VALUEDRIVER_COEFFICIENT from SAQSCV(NOLOCK) WHERE QUOTE_RECORD_ID ='"+str(Qt_rec_id)+"' AND SERVICE_ID ='"+str(TreeSuperParentParam)+"' AND FABLOCATION_ID = '" + str(TreeParentParam) + "' AND GREENBOOK = '" + str(TreeParam) + "' AND QTEREV_RECORD_ID ='"+str(quote_revision_record_id)+"' GROUP BY QUOTE_RECORD_ID,EQUIPMENT_ID) B ON A.QUOTE_RECORD_ID = B.QUOTE_RECORD_ID AND A.EQUIPMENT_ID = B.EQUIPMENT_ID"
        Sql.RunQuery(QueryStatement)
    except:
        Log.Info("GREENBOOK COST AND VALUE DRIVERS EXCEPT")
    level = ""
    level = "Greenbook Cost and Value Drivers"
    sendEmail(level)

def QuoteValueDrivers():    
    try:
        Log.Info("inside QUOTE VALUE DRIVERS")
        
        QueryStatement = """
        MERGE SAQFVD SRC USING ( SELECT A.FABLOCATION_ID,A.FABLOCATION_NAME,A.FABLOCATION_RECORD_ID,A.QUOTE_FABLOCATION_RECORD_ID,A.QUOTE_ID,A.QUOTE_NAME,A.QUOTE_RECORD_ID,B.VALUEDRIVER_NAME,B.VALUEDRIVER_ID,B.VALUEDRIVER_RECORD_ID,B.CpqTableEntryDateModified,B.CpqTableEntryModifiedBy,B.VALUEDRIVER_TYPE,B.QTEREV_RECORD_ID FROM SAQFBL(NOLOCK) A JOIN SAQTVD (NOLOCK) B ON A.QUOTE_RECORD_ID = B.QUOTE_RECORD_ID where B.QUOTE_RECORD_ID= '{rec}' AND B.QTEREV_RECORD_ID='{qurev_rec_id}' ) 
        TGT ON (SRC.QUOTE_RECORD_ID = TGT.QUOTE_RECORD_ID AND SRC.FABLOCATION_ID = TGT.FABLOCATION_ID AND SRC.VALUEDRIVER_ID =TGT.VALUEDRIVER_ID AND SRC.QTEFBL_RECORD_ID =TGT.QUOTE_FABLOCATION_RECORD_ID AND SRC.QTEREV_RECORD_ID = TGT.QTEREV_RECORD_ID)
        WHEN MATCHED 
        THEN UPDATE SET SRC.VALUEDRIVER_ID = TGT.VALUEDRIVER_ID,SRC.VALUEDRIVER_NAME =TGT.VALUEDRIVER_NAME,SRC.CpqTableEntryModifiedBy = TGT.CpqTableEntryModifiedBy,SRC.CpqTableEntryDateModified = TGT.CpqTableEntryDateModified
        WHEN NOT MATCHED BY TARGET
        THEN INSERT (QTEREV_RECORD_ID,QUOTE_FABLOCATION_VALUEDRIVER_RECORD_ID,FABLOCATION_ID,FABLOCATION_NAME,FABLOCATION_RECORD_ID,QUOTE_ID,QUOTE_NAME,QUOTE_RECORD_ID,VALUEDRIVER_ID,VALUEDRIVER_NAME,VALUEDRIVER_RECORD_ID,VALUEDRIVER_TYPE,QTEFBL_RECORD_ID,CPQTABLEENTRYDATEADDED, CPQTABLEENTRYADDEDBY, ADDUSR_RECORD_ID, CpqTableEntryModifiedBy,CpqTableEntryDateModified)
        VALUES (QTEREV_RECORD_ID,NEWID(),FABLOCATION_ID,FABLOCATION_NAME,FABLOCATION_RECORD_ID,QUOTE_ID,QUOTE_NAME,QUOTE_RECORD_ID,VALUEDRIVER_ID,VALUEDRIVER_NAME,VALUEDRIVER_RECORD_ID,VALUEDRIVER_TYPE,QUOTE_FABLOCATION_RECORD_ID,'{datetimenow}', '{username}', {userid}, {userid}, '{datetimenow}');""".format(
        rec=Qt_rec_id, datetimenow=datetime.datetime.now().strftime("%m/%d/%Y %H:%M:%S %p"), userid=userId, username=userName,qurev_rec_id=quote_revision_record_id
        )
        Sql.RunQuery(QueryStatement)
        
        QueryStatement = """
        MERGE SAQFDV SRC USING ( SELECT A.FABLOCATION_ID,A.FABLOCATION_NAME,A.FABLOCATION_RECORD_ID,A.QUOTE_FABLOCATION_RECORD_ID,A.QUOTE_ID,A.QUOTE_NAME,A.QUOTE_RECORD_ID,B.VALUEDRIVER_NAME,B.VALUEDRIVER_ID,B.VALUEDRIVER_RECORD_ID,B.VALUEDRIVER_VALUE_DESCRIPTION,B.VALUEDRIVER_VALUE_RECORD_ID,B.CpqTableEntryDateModified,B.CpqTableEntryModifiedBy,B.VALUEDRIVER_VALUE_CODE,B.VALUEDRIVER_COEFFICIENT,B.QTEREV_RECORD_ID FROM SAQFBL(NOLOCK) A JOIN SAQVDV (NOLOCK) B ON A.QUOTE_RECORD_ID  = B.QUOTE_RECORD_ID where B.QUOTE_RECORD_ID = '{rec}' AND B.QTEREV_RECORD_ID='{qurev_rec_id}') 
        TGT ON (SRC.QUOTE_RECORD_ID = TGT.QUOTE_RECORD_ID AND SRC.FABLOCATION_ID = TGT.FABLOCATION_ID AND SRC.VALUEDRIVER_ID =TGT.VALUEDRIVER_ID AND SRC.QUOTE_FABLOCATION_RECORD_ID =TGT.QUOTE_FABLOCATION_RECORD_ID AND SRC.QTEREV_RECORD_ID = TGT.QTEREV_RECORD_ID)
        WHEN MATCHED 
        THEN UPDATE SET SRC.VALUEDRIVER_VALUEDESC = TGT.VALUEDRIVER_VALUE_DESCRIPTION,SRC.VALUEDRIVER_VALUE_RECORD_ID =TGT.VALUEDRIVER_VALUE_RECORD_ID,SRC.CpqTableEntryModifiedBy = TGT.CpqTableEntryModifiedBy,SRC.CpqTableEntryDateModified = TGT.CpqTableEntryDateModified,SRC.VALUEDRIVER_VALUECODE = TGT.VALUEDRIVER_VALUE_CODE,SRC.VALUEDRIVER_COEFFICIENT = TGT.VALUEDRIVER_COEFFICIENT
        WHEN NOT MATCHED BY TARGET
        THEN INSERT (QTEREV_RECORD_ID,QUOTE_RECORD_ID,QUOTE_FABLOCATION_RECORD_ID,FABLOCATION_ID,FABLOCATION_NAME,FABLOCATION_RECORD_ID,VALUEDRIVER_VALUEDESC,VALUEDRIVER_VALUE_RECORD_ID,QUOTE_ID,QUOTE_NAME,VALUEDRIVER_NAME,VALUEDRIVER_RECORD_ID,VALUEDRIVER_ID,QUOTE_FAB_VALDRIVER_VALUE_RECORD_ID,VALUEDRIVER_VALUECODE,VALUEDRIVER_COEFFICIENT,CPQTABLEENTRYDATEADDED, CPQTABLEENTRYADDEDBY, ADDUSR_RECORD_ID, CpqTableEntryModifiedBy,
                CpqTableEntryDateModified)
        VALUES (QTEREV_RECORD_ID,QUOTE_RECORD_ID,QUOTE_FABLOCATION_RECORD_ID,FABLOCATION_ID,FABLOCATION_NAME,FABLOCATION_RECORD_ID,VALUEDRIVER_VALUE_DESCRIPTION,VALUEDRIVER_VALUE_RECORD_ID,QUOTE_ID,QUOTE_NAME,VALUEDRIVER_NAME,VALUEDRIVER_RECORD_ID,VALUEDRIVER_ID,NEWID(),VALUEDRIVER_VALUE_CODE,VALUEDRIVER_COEFFICIENT,'{datetimenow}', '{username}', {userid}, {userid}, '{datetimenow}');""".format(
        rec=Qt_rec_id, datetimenow=datetime.datetime.now().strftime("%m/%d/%Y %H:%M:%S %p"), userid=userId, username=userName,qurev_rec_id=quote_revision_record_id
        )
        Sql.RunQuery(QueryStatement)
        QueryStatement = "DELETE FROM SAQFGB WHERE QUOTE_RECORD_ID ='"+str(Qt_rec_id)+"' AND QTEREV_RECORD_ID = '"+str(quote_revision_record_id)+"'"
        Sql.RunQuery(QueryStatement)
        # ADDING GREEN BOOK TO ALREADY AVAILABLE EQUIPMENTS   
        Parameter = SqlHelper.GetFirst("SELECT QUERY_CRITERIA_1 FROM SYDBQS (NOLOCK) WHERE QUERY_NAME = 'SELECT' ")
        primaryQueryItems = SqlHelper.GetFirst(
        ""
        + str(Parameter.QUERY_CRITERIA_1)
        + " SAQFGB (QTEREV_RECORD_ID,FABLOCATION_NAME,FABLOCATION_RECORD_ID,GREENBOOK,GREENBOOK_RECORD_ID,QTEFBL_RECORD_ID,QUOTE_ID,QUOTE_NAME,QUOTE_RECORD_ID,SALESORG_ID,SALESORG_NAME,SALESORG_RECORD_ID,CPQTABLEENTRYADDEDBY, CpqTableEntryModifiedBy, ADDUSR_RECORD_ID, CPQTABLEENTRYDATEADDED,CpqTableEntryDateModified,QUOTE_FAB_LOC_GB_RECORD_ID)SELECT A. *,getdate(),getdate(),CONVERT(VARCHAR(4000),NEWID()) FROM (SELECT DISTINCT A. QTEREV_RECORD_ID,A.FABLOCATION_ID,A.FABLOCATION_NAME,A.FABLOCATION_RECORD_ID,A.GREENBOOK,A.GREENBOOK_RECORD_ID,A.QTEFBL_RECORD_ID,A.QUOTE_ID,A.QUOTE_NAME,A.QUOTE_RECORD_ID,A.SALESORG_ID,A.SALESORG_NAME,A.SALESORG_RECORD_ID,A.CPQTABLEENTRYADDEDBY, A.CpqTableEntryModifiedBy, A.ADDUSR_RECORD_ID FROM SAQFEQ (NOLOCK) A where a.QUOTE_RECORD_ID = ''"+str(Qt_rec_id)+"'')A left join SAQFGB (NOLOCK) b on a.QUOTE_ID =b.QUOTE_ID and a.FABLOCATION_RECORD_ID =b.FABLOCATION_RECORD_ID AND a.GREENBOOK = b.GREENBOOK AND A.QTEREV_RECORD_ID = B.QTEREV_RECORD_ID WHERE b.QUOTE_ID IS NULL '")
        #QUOTE TO GREENBOOK
        QueryStatement = """
        MERGE SAQFGD SRC USING (SELECT DISTINCT A.FABLOCATION_ID,A.FABLOCATION_NAME,A.FABLOCATION_RECORD_ID,A.GREENBOOK,A.GREENBOOK_RECORD_ID,A.QUOTE_ID,A.QUOTE_NAME,A.QUOTE_RECORD_ID,C.VALUEDRIVER_ID,C.VALUEDRIVER_NAME,C.VALUEDRIVER_RECORD_ID,C.VALUEDRIVER_TYPE,B.CpqTableEntryDateModified,B.CpqTableEntryModifiedBy,B.QTEREV_RECORD_ID FROM SAQFGB(NOLOCK) A JOIN SAQTVD (NOLOCK) B ON A.QUOTE_RECORD_ID  = B.QUOTE_RECORD_ID JOIN PRGBVD(NOLOCK) C ON B.VALUEDRIVER_ID = C.VALUEDRIVER_ID AND  A.GREENBOOK = C.GREENBOOK where B.QUOTE_RECORD_ID = '{rec}' AND B.QTEREV_RECORD_ID='{qurev_rec_id}' )
        TGT ON (SRC.QUOTE_RECORD_ID = TGT.QUOTE_RECORD_ID AND SRC.FABLOCATION_RECORD_ID = TGT.FABLOCATION_RECORD_ID AND SRC.VALUEDRIVER_ID = TGT.VALUEDRIVER_ID AND SRC.GREENBOOK = TGT.GREENBOOK AND SRC.QTEREV_RECORD_ID = TGT.QTEREV_RECORD_ID)
        WHEN MATCHED 
        THEN UPDATE SET SRC.VALUEDRIVER_ID = TGT.VALUEDRIVER_ID,SRC.VALUEDRIVER_RECORD_ID = TGT.VALUEDRIVER_RECORD_ID
        WHEN NOT MATCHED BY TARGET
            THEN INSERT(QTEREV_RECORD_ID,QUOTE_FAB_LOC_GB_VAL_DRIVER_RECORD_ID,FABLOCATION_ID,FABLOCATION_NAME,FABLOCATION_RECORD_ID,QUOTE_ID,QUOTE_NAME,QUOTE_RECORD_ID,VALUEDRIVER_ID,VALUEDRIVER_NAME,VALUEDRIVER_RECORD_ID,GREENBOOK,GREENBOOK_RECORD_ID,VALUEDRIVER_TYPE,CPQTABLEENTRYDATEADDED, CPQTABLEENTRYADDEDBY, ADDUSR_RECORD_ID, CpqTableEntryModifiedBy,CpqTableEntryDateModified)
            VALUES(QTEREV_RECORD_ID,NEWID(),FABLOCATION_ID,FABLOCATION_NAME,FABLOCATION_RECORD_ID,QUOTE_ID,QUOTE_NAME,QUOTE_RECORD_ID,VALUEDRIVER_ID,VALUEDRIVER_NAME,VALUEDRIVER_RECORD_ID,GREENBOOK,GREENBOOK_RECORD_ID,VALUEDRIVER_TYPE,'{datetimenow}','{username}', {userid}, {userid}, '{datetimenow}');""".format(
        rec=Qt_rec_id, datetimenow=datetime.datetime.now().strftime("%m/%d/%Y %H:%M:%S %p"), userid=userId, username=userName,qurev_rec_id=quote_revision_record_id
        )
        Sql.RunQuery(QueryStatement)
        
        QueryStatement = """
        MERGE SAQFGV SRC USING (SELECT DISTINCT A.FABLOCATION_ID,A.FABLOCATION_NAME,A.FABLOCATION_RECORD_ID,A.GREENBOOK,A.GREENBOOK_RECORD_ID,A.QUOTE_ID,A.QUOTE_NAME,A.QUOTE_RECORD_ID,B.CpqTableEntryDateModified,B.CpqTableEntryModifiedBy,B.VALUEDRIVER_ID,B.VALUEDRIVER_NAME,B.VALUEDRIVER_RECORD_ID,B.VALUEDRIVER_VALUE_DESCRIPTION,B.VALUEDRIVER_VALUE_RECORD_ID,C.VALUEDRIVER_VALUE_CODE,C.VALUEDRIVER_COEFFICIENT,C.GBLVDRVAL_RECORD_ID,B.QTEREV_RECORD_ID  FROM SAQFGB(NOLOCK) A JOIN SAQVDV (NOLOCK) B ON A.QUOTE_RECORD_ID  = B.QUOTE_RECORD_ID JOIN PRGBVL(NOLOCK) C ON B.VALUEDRIVER_ID = C.VALUEDRIVER_ID AND B.VALUEDRIVER_VALUE_DESCRIPTION = C.VALUEDRIVER_VALUE_DESCRIPTION AND A.GREENBOOK = C.GREENBOOK where B.QUOTE_RECORD_ID = '{rec}' AND B.QTEREV_RECORD_ID='{qurev_rec_id}')
        TGT ON (SRC.QUOTE_RECORD_ID = TGT.QUOTE_RECORD_ID AND SRC.FABLOCATION_RECORD_ID = TGT.FABLOCATION_RECORD_ID AND SRC.VALUEDRIVER_ID = TGT.VALUEDRIVER_ID AND SRC.GREENBOOK = TGT.GREENBOOK AND SRC.QTEREV_RECORD_ID = TGT.QTEREV_RECORD_ID)
        WHEN MATCHED 
        THEN UPDATE SET SRC.VALUEDRIVER_VALUE_DESCRIPTION = TGT.VALUEDRIVER_VALUE_DESCRIPTION,SRC.VALUEDRIVER_VALUE_RECORD_ID = TGT.VALUEDRIVER_VALUE_RECORD_ID,SRC.VALUEDRIVER_COEFFICIENT = TGT.VALUEDRIVER_COEFFICIENT,SRC.VALUEDRIVER_COEFFICIENT_RECORD_ID =TGT.GBLVDRVAL_RECORD_ID,SRC.CpqTableEntryModifiedBy = TGT.CpqTableEntryModifiedBy,SRC.CpqTableEntryDateModified = TGT.CpqTableEntryDateModified 
        WHEN NOT MATCHED BY TARGET
        THEN INSERT(QTEREV_RECORD_ID,QUOTE_FAB_LOC_GB_VAL_DRIVER_VAL_RECORD_ID,FABLOCATION_ID,FABLOCATION_NAME,FABLOCATION_RECORD_ID,QUOTE_ID,QUOTE_NAME,QUOTE_RECORD_ID,VALUEDRIVER_ID,VALUEDRIVER_NAME,VALUEDRIVER_RECORD_ID,VALUEDRIVER_VALUE_CODE,VALUEDRIVER_VALUE_DESCRIPTION,VALUEDRIVER_VALUE_RECORD_ID,GREENBOOK,GREENBOOK_RECORD_ID,VALUEDRIVER_COEFFICIENT,VALUEDRIVER_COEFFICIENT_RECORD_ID,CPQTABLEENTRYDATEADDED, CPQTABLEENTRYADDEDBY, ADDUSR_RECORD_ID, CpqTableEntryModifiedBy,CpqTableEntryDateModified)
        VALUES(QTEREV_RECORD_ID,NEWID(),FABLOCATION_ID,FABLOCATION_NAME,FABLOCATION_RECORD_ID,QUOTE_ID,QUOTE_NAME,QUOTE_RECORD_ID,VALUEDRIVER_ID,VALUEDRIVER_NAME,VALUEDRIVER_RECORD_ID,VALUEDRIVER_VALUE_CODE,VALUEDRIVER_VALUE_DESCRIPTION,VALUEDRIVER_VALUE_RECORD_ID,GREENBOOK,GREENBOOK_RECORD_ID,VALUEDRIVER_COEFFICIENT,GBLVDRVAL_RECORD_ID,'{datetimenow}','{username}', {userid}, {userid}, '{datetimenow}');""".format(
        rec=Qt_rec_id, datetimenow=datetime.datetime.now().strftime("%m/%d/%Y %H:%M:%S %p"), userid=userId, username=userName,qurev_rec_id=quote_revision_record_id
        )
        Sql.RunQuery(QueryStatement)
        
        QueryStatement = """
        MERGE SAQFED SRC USING (SELECT A.EQUIPMENT_DESCRIPTION,A.EQUIPMENT_ID,A.EQUIPMENT_RECORD_ID,A.FABLOCATION_ID,A.FABLOCATION_NAME,A.FABLOCATION_RECORD_ID,A.GREENBOOK,A.GREENBOOK_RECORD_ID,A.SERIAL_NUMBER,A.QUOTE_ID,A.QUOTE_NAME,A.QUOTE_RECORD_ID,B.VALUEDRIVER_ID,B.VALUEDRIVER_NAME,B.VALUEDRIVER_RECORD_ID,B.VALUEDRIVER_TYPE,A.QUOTE_FAB_LOCATION_EQUIPMENTS_RECORD_ID,B.CpqTableEntryDateModified,B.CpqTableEntryModifiedBy,B.QTEREV_RECORD_ID  FROM SAQFEQ(NOLOCK) A JOIN SAQTVD (NOLOCK) B ON A.QUOTE_RECORD_ID  = B.QUOTE_RECORD_ID JOIN PRGBVD(NOLOCK) C ON B.VALUEDRIVER_ID = C.VALUEDRIVER_ID AND  A.GREENBOOK = C.GREENBOOK where B.QUOTE_RECORD_ID = '{rec}' AND B.QTEREV_RECORD_ID='{qurev_rec_id}' )
        TGT ON (SRC.QUOTE_RECORD_ID = TGT.QUOTE_RECORD_ID AND SRC.FABLOCATION_RECORD_ID = TGT.FABLOCATION_RECORD_ID AND SRC.VALUEDRIVER_ID = TGT.VALUEDRIVER_ID AND SRC.GREENBOOK = TGT.GREENBOOK AND SRC.EQUIPMENT_ID = TGT.EQUIPMENT_ID AND SRC.QTEREV_RECORD_ID = TGT.QTEREV_RECORD_ID)
        WHEN MATCHED 
        THEN UPDATE SET SRC.VALUEDRIVER_ID = TGT.VALUEDRIVER_ID,SRC.VALUEDRIVER_RECORD_ID = TGT.VALUEDRIVER_RECORD_ID
        WHEN NOT MATCHED BY TARGET
        THEN INSERT(QTEREV_RECORD_ID,QUOTE_FAB_LOC_EQUIP_VAL_DRIVER_RECORD_ID,EQUIPMENT_DESCRIPTION,EQUIPMENT_ID,EQUIPMENT_RECORD_ID,FABLOCATION_ID,FABLOCATION_NAME,FABLOCATION_RECORD_ID,QUOTE_ID,QUOTE_NAME,QUOTE_RECORD_ID,VALUEDRIVER_ID,VALUEDRIVER_NAME,VALUEDRIVER_RECORD_ID,GREENBOOK,GREENBOOK_RECORD_ID,VALUEDRIVER_TYPE,SERIAL_NUMBER,CPQTABLEENTRYDATEADDED, CPQTABLEENTRYADDEDBY, ADDUSR_RECORD_ID, CpqTableEntryModifiedBy,CpqTableEntryDateModified)
        VALUES
        (QTEREV_RECORD_ID,NEWID(),EQUIPMENT_DESCRIPTION,EQUIPMENT_ID,EQUIPMENT_RECORD_ID,FABLOCATION_ID,FABLOCATION_NAME,FABLOCATION_RECORD_ID,QUOTE_ID,QUOTE_NAME,QUOTE_RECORD_ID,VALUEDRIVER_ID,VALUEDRIVER_NAME,VALUEDRIVER_RECORD_ID,GREENBOOK,GREENBOOK_RECORD_ID,VALUEDRIVER_TYPE,SERIAL_NUMBER,'{datetimenow}','{username}', {userid}, {userid}, '{datetimenow}');""".format(
        rec=Qt_rec_id, datetimenow=datetime.datetime.now().strftime("%m/%d/%Y %H:%M:%S %p"), userid=userId, username=userName,qurev_rec_id=quote_revision_record_id
        )
        Sql.RunQuery(QueryStatement)
        
        QueryStatement = """
        MERGE SAQEDV SRC USING (SELECT A.EQUIPMENT_DESCRIPTION,A.EQUIPMENT_ID,A.EQUIPMENT_RECORD_ID,A.FABLOCATION_ID,A.FABLOCATION_NAME,A.FABLOCATION_RECORD_ID,A.GREENBOOK,A.GREENBOOK_RECORD_ID,A.SERIAL_NUMBER,A.QUOTE_ID,A.QUOTE_NAME,A.QUOTE_RECORD_ID,A.QUOTE_FAB_LOCATION_EQUIPMENTS_RECORD_ID,B.CpqTableEntryDateModified,B.CpqTableEntryModifiedBy,C.VALUEDRIVER_ID,C.VALUEDRIVER_NAME,C.VALUEDRIVER_RECORD_ID,C.VALUEDRIVER_VALUE_DESCRIPTION,C.VALUEDRIVER_VALUE_RECORD_ID,C.VALUEDRIVER_VALUE_CODE,C.VALUEDRIVER_COEFFICIENT,C.GBLVDRVAL_RECORD_ID,B.QTEREV_RECORD_ID FROM SAQFEQ(NOLOCK) A JOIN SAQVDV (NOLOCK) B ON A.QUOTE_RECORD_ID  = B.QUOTE_RECORD_ID JOIN PRGBVL(NOLOCK) C ON B.VALUEDRIVER_ID = C.VALUEDRIVER_ID AND B.VALUEDRIVER_VALUE_DESCRIPTION = C.VALUEDRIVER_VALUE_DESCRIPTION AND A.GREENBOOK = C.GREENBOOK where B.QUOTE_RECORD_ID = '{rec}' AND B.QTEREV_RECORD_ID='{qurev_rec_id}' )
        TGT ON (SRC.QUOTE_RECORD_ID = TGT.QUOTE_RECORD_ID AND SRC.EQUIPMENT_RECORD_ID = TGT.EQUIPMENT_RECORD_ID AND SRC.FABLOCATION_RECORD_ID = TGT.FABLOCATION_RECORD_ID AND SRC.VALUEDRIVER_ID = TGT.VALUEDRIVER_ID AND SRC.GREENBOOK = TGT.GREENBOOK AND SRC.QTEREV_RECORD_ID = TGT.QTEREV_RECORD_ID)
        WHEN MATCHED 
        THEN UPDATE SET SRC.VALUEDRIVER_VALUE_DESCRIPTION = TGT.VALUEDRIVER_VALUE_DESCRIPTION,SRC.VALUEDRIVER_VALUE_RECORD_ID = TGT.VALUEDRIVER_VALUE_RECORD_ID,SRC.CpqTableEntryModifiedBy = TGT.CpqTableEntryModifiedBy,SRC.CpqTableEntryDateModified = TGT.CpqTableEntryDateModified,SRC.VALUEDRIVER_COEFFICIENT = TGT.VALUEDRIVER_COEFFICIENT,SRC.VALUEDRIVER_COEFFICIENT_RECORD_ID =TGT.GBLVDRVAL_RECORD_ID
        WHEN NOT MATCHED BY TARGET
            THEN INSERT(QTEREV_RECORD_ID,QUOTE_FAB_LOC_EQUIP_DRV_VAL_RECORD_ID,EQUIPMENT_DESCRIPTION,EQUIPMENT_ID,EQUIPMENT_RECORD_ID,FABLOCATION_ID,FABLOCATION_NAME,FABLOCATION_RECORD_ID,QUOTE_ID,QUOTE_NAME,QUOTE_RECORD_ID,VALUEDRIVER_ID,VALUEDRIVER_NAME,VALUEDRIVER_RECORD_ID,VALUEDRIVER_VALUE_CODE,VALUEDRIVER_VALUE_DESCRIPTION,VALUEDRIVER_VALUE_RECORD_ID,GREENBOOK,GREENBOOK_RECORD_ID,VALUEDRIVER_COEFFICIENT,VALUEDRIVER_COEFFICIENT_RECORD_ID,CPQTABLEENTRYDATEADDED, CPQTABLEENTRYADDEDBY, ADDUSR_RECORD_ID, CpqTableEntryModifiedBy,CpqTableEntryDateModified)
            VALUES(QTEREV_RECORD_ID,NEWID(),EQUIPMENT_DESCRIPTION,EQUIPMENT_ID,EQUIPMENT_RECORD_ID,FABLOCATION_ID,FABLOCATION_NAME,FABLOCATION_RECORD_ID,QUOTE_ID,QUOTE_NAME,QUOTE_RECORD_ID,VALUEDRIVER_ID,VALUEDRIVER_NAME,VALUEDRIVER_RECORD_ID,VALUEDRIVER_VALUE_CODE,VALUEDRIVER_VALUE_DESCRIPTION,VALUEDRIVER_VALUE_RECORD_ID,GREENBOOK,GREENBOOK_RECORD_ID,VALUEDRIVER_COEFFICIENT,GBLVDRVAL_RECORD_ID,'{datetimenow}','{username}', {userid}, {userid}, '{datetimenow}');""".format(
        rec=Qt_rec_id, datetimenow=datetime.datetime.now().strftime("%m/%d/%Y %H:%M:%S %p"), userid=userId, username=userName,qurev_rec_id=quote_revision_record_id
        )
        Sql.RunQuery(QueryStatement)
        QueryStatement = "UPDATE A  SET FAB_VALUEDRIVER_COEFFICIENT = VALUEDRIVER_COEFFICIENT FROM SAQICO A(NOLOCK) JOIN (SELECT QUOTE_RECORD_ID,EQUIPMENT_ID,SUM(VALUEDRIVER_COEFFICIENT) AS VALUEDRIVER_COEFFICIENT from SAQEDV(NOLOCK) WHERE QUOTE_RECORD_ID ='"+str(Qt_rec_id)+"' AND QTEREV_RECORD_ID = '"+str(quote_revision_record_id)+"' GROUP BY QUOTE_RECORD_ID,EQUIPMENT_ID) B ON A.QUOTE_RECORD_ID = B.QUOTE_RECORD_ID AND A.EQUIPMENT_ID = B.EQUIPMENT_ID"
        Sql.RunQuery(QueryStatement)
    except:
        Log.Info("EXCEPT QUOTE VALUE DRIVERS")
    level = ""
    level = "Quote Fab Value Drivers"
    sendEmail(level)

def FabGreenbookValueDrivers():
    QueryStatement = """
    MERGE SAQFED SRC USING (SELECT A.EQUIPMENT_DESCRIPTION,A.EQUIPMENT_ID,A.EQUIPMENT_RECORD_ID,A.FABLOCATION_ID,A.FABLOCATION_NAME,A.FABLOCATION_RECORD_ID,A.GREENBOOK,A.GREENBOOK_RECORD_ID,A.SERIAL_NUMBER,A.QUOTE_ID,A.QUOTE_NAME,A.QUOTE_RECORD_ID,B.VALUEDRIVER_ID,B.VALUEDRIVER_NAME,B.VALUEDRIVER_RECORD_ID,B.VALUEDRIVER_TYPE,A.QUOTE_FAB_LOCATION_EQUIPMENTS_RECORD_ID,B.CpqTableEntryDateModified,B.CpqTableEntryModifiedBy,B.QTEREV_RECORD_ID  FROM SAQFEQ(NOLOCK) A JOIN SAQFGD (NOLOCK) B ON A.QUOTE_RECORD_ID  = B.QUOTE_RECORD_ID AND A.FABLOCATION_ID =B.FABLOCATION_ID AND A.GREENBOOK= B.GREENBOOK where B.QUOTE_RECORD_ID = '{rec}' and B.GREENBOOK = '{gb}' and B.FABLOCATION_ID = '{fb}' AND B.QTEREV_RECORD_ID='{qurev_rec_id}')
    TGT ON (SRC.QUOTE_RECORD_ID = TGT.QUOTE_RECORD_ID AND SRC.FABLOCATION_RECORD_ID = TGT.FABLOCATION_RECORD_ID AND SRC.VALUEDRIVER_ID = TGT.VALUEDRIVER_ID AND SRC.GREENBOOK = TGT.GREENBOOK AND SRC.EQUIPMENT_ID = TGT.EQUIPMENT_ID AND SRC.QTEREV_RECORD_ID = TGT.QTEREV_RECORD_ID)
    WHEN MATCHED 
    THEN UPDATE SET SRC.VALUEDRIVER_ID = TGT.VALUEDRIVER_ID,SRC.VALUEDRIVER_RECORD_ID = TGT.VALUEDRIVER_RECORD_ID
    WHEN NOT MATCHED BY TARGET
    THEN INSERT(QTEREV_RECORD_ID,QUOTE_FAB_LOC_EQUIP_VAL_DRIVER_RECORD_ID,EQUIPMENT_DESCRIPTION,EQUIPMENT_ID,EQUIPMENT_RECORD_ID,FABLOCATION_ID,FABLOCATION_NAME,FABLOCATION_RECORD_ID,QUOTE_ID,QUOTE_NAME,QUOTE_RECORD_ID,VALUEDRIVER_ID,VALUEDRIVER_NAME,VALUEDRIVER_RECORD_ID,GREENBOOK,GREENBOOK_RECORD_ID,VALUEDRIVER_TYPE,SERIAL_NUMBER,CPQTABLEENTRYDATEADDED, CPQTABLEENTRYADDEDBY, ADDUSR_RECORD_ID, CpqTableEntryModifiedBy,CpqTableEntryDateModified)
    VALUES
    (QTEREV_RECORD_ID,NEWID(),EQUIPMENT_DESCRIPTION,EQUIPMENT_ID,EQUIPMENT_RECORD_ID,FABLOCATION_ID,FABLOCATION_NAME,FABLOCATION_RECORD_ID,QUOTE_ID,QUOTE_NAME,QUOTE_RECORD_ID,VALUEDRIVER_ID,VALUEDRIVER_NAME,VALUEDRIVER_RECORD_ID,GREENBOOK,GREENBOOK_RECORD_ID,VALUEDRIVER_TYPE,SERIAL_NUMBER, '{datetimenow}', '{username}', {userid}, {userid}, '{datetimenow}');""".format(
    rec=Qt_rec_id,gb=TreeParam,fb=TreeParentParam, datetimenow=datetime.datetime.now().strftime("%m/%d/%Y %H:%M:%S %p"), userid=userId, username=userName,qurev_rec_id=quote_revision_record_id
    )
    Sql.RunQuery(QueryStatement)
    QueryStatement = """
    MERGE SAQEDV SRC USING (SELECT A.EQUIPMENT_DESCRIPTION,A.EQUIPMENT_ID,A.EQUIPMENT_RECORD_ID,A.FABLOCATION_ID,A.FABLOCATION_NAME,A.FABLOCATION_RECORD_ID,A.GREENBOOK,A.GREENBOOK_RECORD_ID,A.SERIAL_NUMBER,A.QUOTE_ID,A.QUOTE_NAME,A.QUOTE_RECORD_ID,B.VALUEDRIVER_ID,B.VALUEDRIVER_NAME,B.VALUEDRIVER_RECORD_ID,B.VALUEDRIVER_VALUE_CODE,B.VALUEDRIVER_VALUE_DESCRIPTION,B.VALUEDRIVER_VALUE_RECORD_ID,A.QUOTE_FAB_LOCATION_EQUIPMENTS_RECORD_ID,B.CpqTableEntryDateModified,B.CpqTableEntryModifiedBy,B.VALUEDRIVER_COEFFICIENT,B.VALUEDRIVER_COEFFICIENT_RECORD_ID,B.VALUEDRIVER_TYPE,B.QTEREV_RECORD_ID FROM SAQFEQ(NOLOCK) A JOIN SAQFGV (NOLOCK) B ON A.QUOTE_RECORD_ID  = B.QUOTE_RECORD_ID AND A.FABLOCATION_ID =B.FABLOCATION_ID AND A.GREENBOOK= B.GREENBOOK where B.QUOTE_RECORD_ID = '{rec}' AND B.GREENBOOK = '{gb}' AND  B.FABLOCATION_ID = '{fb}' AND B.QTEREV_RECORD_ID='{qurev_rec_id}')
    TGT ON (SRC.QUOTE_RECORD_ID = TGT.QUOTE_RECORD_ID AND SRC.FABLOCATION_RECORD_ID = TGT.FABLOCATION_RECORD_ID AND SRC.VALUEDRIVER_ID = TGT.VALUEDRIVER_ID AND SRC.GREENBOOK = TGT.GREENBOOK AND SRC.EQUIPMENT_ID = TGT.EQUIPMENT_ID AND SRC.QTEREV_RECORD_ID = TGT.QTEREV_RECORD_ID)
    WHEN MATCHED 
    THEN UPDATE SET SRC.VALUEDRIVER_VALUE_DESCRIPTION = TGT.VALUEDRIVER_VALUE_DESCRIPTION,SRC.VALUEDRIVER_VALUE_RECORD_ID = TGT.VALUEDRIVER_VALUE_RECORD_ID,SRC.CpqTableEntryModifiedBy = TGT.CpqTableEntryModifiedBy,SRC.CpqTableEntryDateModified = TGT.CpqTableEntryDateModified,SRC.VALUEDRIVER_COEFFICIENT_RECORD_ID = TGT.VALUEDRIVER_COEFFICIENT_RECORD_ID, SRC.VALUEDRIVER_COEFFICIENT = TGT.VALUEDRIVER_COEFFICIENT
    WHEN NOT MATCHED BY TARGET
    THEN INSERT(QTEREV_RECORD_ID,QUOTE_FAB_LOC_EQUIP_DRV_VAL_RECORD_ID,EQUIPMENT_DESCRIPTION,EQUIPMENT_ID,EQUIPMENT_RECORD_ID,FABLOCATION_ID,FABLOCATION_NAME,FABLOCATION_RECORD_ID,QUOTE_ID,QUOTE_NAME,QUOTE_RECORD_ID,VALUEDRIVER_ID,VALUEDRIVER_NAME,VALUEDRIVER_RECORD_ID,VALUEDRIVER_VALUE_CODE,VALUEDRIVER_TYPE,VALUEDRIVER_VALUE_DESCRIPTION,VALUEDRIVER_VALUE_RECORD_ID,GREENBOOK,GREENBOOK_RECORD_ID,VALUEDRIVER_COEFFICIENT,VALUEDRIVER_COEFFICIENT_RECORD_ID,CPQTABLEENTRYDATEADDED, CPQTABLEENTRYADDEDBY, ADDUSR_RECORD_ID, CpqTableEntryModifiedBy,CpqTableEntryDateModified)
    VALUES(QTEREV_RECORD_ID,NEWID(),EQUIPMENT_DESCRIPTION,EQUIPMENT_ID,EQUIPMENT_RECORD_ID,FABLOCATION_ID,FABLOCATION_NAME,FABLOCATION_RECORD_ID,QUOTE_ID,QUOTE_NAME,QUOTE_RECORD_ID,VALUEDRIVER_ID,VALUEDRIVER_NAME,VALUEDRIVER_RECORD_ID,VALUEDRIVER_VALUE_CODE,VALUEDRIVER_TYPE,VALUEDRIVER_VALUE_DESCRIPTION,VALUEDRIVER_VALUE_RECORD_ID,GREENBOOK,GREENBOOK_RECORD_ID,VALUEDRIVER_COEFFICIENT,VALUEDRIVER_COEFFICIENT_RECORD_ID,'{datetimenow}', '{username}', {userid}, {userid}, '{datetimenow}');""".format(
    rec=Qt_rec_id,gb=TreeParam,fb=TreeParentParam, datetimenow=datetime.datetime.now().strftime("%m/%d/%Y %H:%M:%S %p"), userid=userId, username=userName,qurev_rec_id=quote_revision_record_id
    )
    Sql.RunQuery(QueryStatement)
    QueryStatement = "UPDATE A  SET FAB_VALUEDRIVER_COEFFICIENT = VALUEDRIVER_COEFFICIENT FROM SAQICO A(NOLOCK) JOIN (SELECT QUOTE_RECORD_ID,EQUIPMENT_ID,SUM(VALUEDRIVER_COEFFICIENT) AS VALUEDRIVER_COEFFICIENT from SAQEDV(NOLOCK) WHERE QUOTE_RECORD_ID ='"+str(Qt_rec_id)+"' AND FABLOCATION_ID ='"+str(TreeParentParam)+"' AND GREENBOOK ='"+str(TreeParam)+"' GROUP BY QUOTE_RECORD_ID,EQUIPMENT_ID) B ON A.QUOTE_RECORD_ID = B.QUOTE_RECORD_ID AND A.EQUIPMENT_ID = B.EQUIPMENT_ID"
    Sql.RunQuery(QueryStatement)
    level = ""
    level = "Fab Greenbook Value Drivers"
    sendEmail(level)

def FabValueDrivers():
    QueryStatement = "DELETE FROM SAQFGB WHERE QUOTE_RECORD_ID ='"+str(Qt_rec_id)+"' AND FABLOCATION_ID ='"+str(TreeParam)+"' AND QTEREV_RECORD_ID ='"+str(quote_revision_record_id)+"' "
    Sql.RunQuery(QueryStatement)
    Parameter = SqlHelper.GetFirst("SELECT QUERY_CRITERIA_1 FROM SYDBQS (NOLOCK) WHERE QUERY_NAME = 'SELECT' ")
    primaryQueryItems = SqlHelper.GetFirst(
    ""
    + str(Parameter.QUERY_CRITERIA_1)
    + " SAQFGB (QTEREV_RECORD_ID,FABLOCATION_ID,FABLOCATION_NAME,FABLOCATION_RECORD_ID,GREENBOOK,GREENBOOK_RECORD_ID,QTEFBL_RECORD_ID,QUOTE_ID,QUOTE_NAME,QUOTE_RECORD_ID,SALESORG_ID,SALESORG_NAME,SALESORG_RECORD_ID,CpqTableEntryDateModified,QUOTE_FAB_LOC_GB_RECORD_ID) SELECT A. *,getdate(),CONVERT(VARCHAR(4000),NEWID()) FROM (SELECT DISTINCT A.QTEREV_RECORD_ID,A.FABLOCATION_ID,A.FABLOCATION_NAME,A.FABLOCATION_RECORD_ID,A.GREENBOOK,A.GREENBOOK_RECORD_ID,A.QTEFBL_RECORD_ID,A.QUOTE_ID,A.QUOTE_NAME,A.QUOTE_RECORD_ID,A.SALESORG_ID,A.SALESORG_NAME,A.SALESORG_RECORD_ID FROM SAQFEQ A left join SAQFGB b on a.QUOTE_RECORD_ID = ''"+str(Qt_rec_id)+"'' and a.QUOTE_ID =b.QUOTE_ID and a.FABLOCATION_RECORD_ID =b.FABLOCATION_RECORD_ID AND a.GREENBOOK = b.GREENBOOK AND a.QTEREV_RECORD_ID = b.QTEREV_RECORD_ID WHERE b.QUOTE_ID IS NULL AND a.FABLOCATION_ID = ''"+str(TreeParam)+"''  )A ' " )
    #Log.Info("QUOTEFAB FUNCTIONS"+str(Qt_rec_id))
    Trace.Write("QUERYFAB"+str(primaryQueryItems))
    QueryStatement ='''
    MERGE SAQFEQ SRC USING ( SELECT * FROM SAQFGB where QUOTE_RECORD_ID = '{rec}' AND FABLOCATION_ID ='{fabid}' AND QTEREV_RECORD_ID ='{qurev_rec_id}'  ) 
        TGT ON (SRC.QUOTE_RECORD_ID = TGT.QUOTE_RECORD_ID AND SRC.FABLOCATION_RECORD_ID = TGT.FABLOCATION_RECORD_ID AND SRC.GREENBOOK = TGT.GREENBOOK AND SRC.QTEREV_RECORD_ID = TGT.QTEREV_RECORD_ID) 
        WHEN MATCHED 
        THEN UPDATE SET SRC.QTEFBLGBK_RECORD_ID  = TGT.QUOTE_FAB_LOC_GB_RECORD_ID;'''.format(rec=Qt_rec_id,fabid=TreeParam,qurev_rec_id=quote_revision_record_id)
    Sql.RunQuery(QueryStatement)
    # ADD GreenBook DRIVER FOR C4C
    QueryStatement ="""
    MERGE SAQFGD SRC USING (SELECT A.FABLOCATION_ID,A.FABLOCATION_NAME,A.FABLOCATION_RECORD_ID,A.GREENBOOK,A.GREENBOOK_RECORD_ID,A.QUOTE_ID,A.QUOTE_NAME,A.QUOTE_RECORD_ID,C.VALUEDRIVER_ID,C.VALUEDRIVER_NAME,C.VALUEDRIVER_RECORD_ID,C.VALUEDRIVER_TYPE,B.CpqTableEntryDateModified,B.CpqTableEntryModifiedBy,B.QTEREV_RECORD_ID FROM SAQFGB(NOLOCK) A JOIN SAQFVD (NOLOCK) B ON A.QUOTE_RECORD_ID  = B.QUOTE_RECORD_ID AND A.FABLOCATION_ID =B.FABLOCATION_ID JOIN PRGBVD(NOLOCK) C ON B.VALUEDRIVER_ID = C.VALUEDRIVER_ID AND  A.GREENBOOK = C.GREENBOOK where B.QUOTE_RECORD_ID = '{rec}' AND B.FABLOCATION_ID ='{fabid}' AND B.QTEREV_RECORD_ID='{qurev_rec_id}' )
    TGT ON (SRC.QUOTE_RECORD_ID = TGT.QUOTE_RECORD_ID AND SRC.FABLOCATION_RECORD_ID = TGT.FABLOCATION_RECORD_ID AND SRC.VALUEDRIVER_ID = TGT.VALUEDRIVER_ID AND SRC.GREENBOOK = TGT.GREENBOOK AND SRC.QTEREV_RECORD_ID = TGT.QTEREV_RECORD_ID)
    WHEN MATCHED 
    THEN UPDATE SET SRC.VALUEDRIVER_ID = TGT.VALUEDRIVER_ID,SRC.VALUEDRIVER_RECORD_ID = TGT.	
    VALUEDRIVER_RECORD_ID,SRC.CpqTableEntryModifiedBy = TGT.CpqTableEntryModifiedBy,SRC.CpqTableEntryDateModified = TGT.CpqTableEntryDateModified
    WHEN NOT MATCHED BY TARGET
        THEN INSERT(QTEREV_RECORD_ID,QUOTE_FAB_LOC_GB_VAL_DRIVER_RECORD_ID,FABLOCATION_ID,FABLOCATION_NAME,FABLOCATION_RECORD_ID,QUOTE_ID,QUOTE_NAME,QUOTE_RECORD_ID,VALUEDRIVER_ID,VALUEDRIVER_NAME,VALUEDRIVER_RECORD_ID,GREENBOOK,GREENBOOK_RECORD_ID,VALUEDRIVER_TYPE,CPQTABLEENTRYDATEADDED, CPQTABLEENTRYADDEDBY, ADDUSR_RECORD_ID, CpqTableEntryModifiedBy,CpqTableEntryDateModified)
        VALUES(QTEREV_RECORD_ID,NEWID(),FABLOCATION_ID,FABLOCATION_NAME,FABLOCATION_RECORD_ID,QUOTE_ID,QUOTE_NAME,QUOTE_RECORD_ID,VALUEDRIVER_ID,VALUEDRIVER_NAME,VALUEDRIVER_RECORD_ID,GREENBOOK,GREENBOOK_RECORD_ID,VALUEDRIVER_TYPE,'{datetimenow}', '{username}', {userid}, {userid}, '{datetimenow}');""".format(
        rec=Qt_rec_id,fabid =TreeParam, datetimenow=datetime.datetime.now().strftime("%m/%d/%Y %H:%M:%S %p"), userid=userId, username=userName,qurev_rec_id=quote_revision_record_id
    )
    Sql.RunQuery(QueryStatement)
    QueryStatement = """
    MERGE SAQFGV SRC USING (SELECT A.FABLOCATION_ID,A.FABLOCATION_NAME,A.FABLOCATION_RECORD_ID,A.GREENBOOK,A.GREENBOOK_RECORD_ID,A.QUOTE_ID,A.QUOTE_NAME,A.QUOTE_RECORD_ID,B.VALUEDRIVER_VALUECODE,B.VALUEDRIVER_VALUEDESC,B.CpqTableEntryDateModified,B.CpqTableEntryModifiedBy,C.VALUEDRIVER_ID,C.VALUEDRIVER_NAME,C.VALUEDRIVER_RECORD_ID,C.VALUEDRIVER_VALUE_DESCRIPTION,C.VALUEDRIVER_VALUE_RECORD_ID,C.VALUEDRIVER_VALUE_CODE,C.VALUEDRIVER_COEFFICIENT,C.GBLVDRVAL_RECORD_ID,B.QTEREV_RECORD_ID FROM SAQFGB(NOLOCK) A JOIN SAQFDV (NOLOCK) B ON A.QUOTE_RECORD_ID  = B.QUOTE_RECORD_ID AND A.FABLOCATION_ID = B.FABLOCATION_ID JOIN PRGBVL(NOLOCK) C ON B.VALUEDRIVER_ID = C.VALUEDRIVER_ID AND B.VALUEDRIVER_VALUEDESC = C.VALUEDRIVER_VALUE_DESCRIPTION AND A.GREENBOOK = C.GREENBOOK where B.QUOTE_RECORD_ID = '{rec}' AND B.FABLOCATION_ID ='{fabid}' AND B.QTEREV_RECORD_ID='{qurev_rec_id}')
    TGT ON (SRC.QUOTE_RECORD_ID = TGT.QUOTE_RECORD_ID AND SRC.FABLOCATION_RECORD_ID = TGT.FABLOCATION_RECORD_ID AND SRC.VALUEDRIVER_ID = TGT.VALUEDRIVER_ID AND SRC.GREENBOOK = TGT.GREENBOOK AND SRC.QTEREV_RECORD_ID = TGT.QTEREV_RECORD_ID)
    WHEN MATCHED 
    THEN UPDATE SET SRC.VALUEDRIVER_VALUE_DESCRIPTION = TGT.VALUEDRIVER_VALUE_DESCRIPTION,SRC.VALUEDRIVER_VALUE_RECORD_ID = TGT.VALUEDRIVER_VALUE_RECORD_ID,SRC.VALUEDRIVER_COEFFICIENT = TGT.VALUEDRIVER_COEFFICIENT,SRC.VALUEDRIVER_COEFFICIENT_RECORD_ID =TGT.GBLVDRVAL_RECORD_ID,SRC.CpqTableEntryModifiedBy = TGT.CpqTableEntryModifiedBy,SRC.CpqTableEntryDateModified = TGT.CpqTableEntryDateModified
    WHEN NOT MATCHED BY TARGET
        THEN INSERT(QTEREV_RECORD_ID,QUOTE_FAB_LOC_GB_VAL_DRIVER_VAL_RECORD_ID,FABLOCATION_ID,FABLOCATION_NAME,FABLOCATION_RECORD_ID,QUOTE_ID,QUOTE_NAME,QUOTE_RECORD_ID,VALUEDRIVER_ID,VALUEDRIVER_NAME,VALUEDRIVER_RECORD_ID,VALUEDRIVER_VALUE_CODE,VALUEDRIVER_VALUE_DESCRIPTION,VALUEDRIVER_VALUE_RECORD_ID,GREENBOOK,GREENBOOK_RECORD_ID,VALUEDRIVER_COEFFICIENT,VALUEDRIVER_COEFFICIENT_RECORD_ID,CPQTABLEENTRYDATEADDED, CPQTABLEENTRYADDEDBY, ADDUSR_RECORD_ID, CpqTableEntryModifiedBy,CpqTableEntryDateModified)
        VALUES(QTEREV_RECORD_ID,NEWID(),FABLOCATION_ID,FABLOCATION_NAME,FABLOCATION_RECORD_ID,QUOTE_ID,QUOTE_NAME,QUOTE_RECORD_ID,VALUEDRIVER_ID,VALUEDRIVER_NAME,VALUEDRIVER_RECORD_ID,VALUEDRIVER_VALUE_CODE,VALUEDRIVER_VALUE_DESCRIPTION,VALUEDRIVER_VALUE_RECORD_ID,GREENBOOK,GREENBOOK_RECORD_ID,VALUEDRIVER_COEFFICIENT,GBLVDRVAL_RECORD_ID,'{datetimenow}', '{username}', {userid}, {userid}, '{datetimenow}');""".format(
        rec=Qt_rec_id,fabid =TreeParam, datetimenow=datetime.datetime.now().strftime("%m/%d/%Y %H:%M:%S %p"), userid=userId, username=userName,qurev_rec_id=quote_revision_record_id
    )
    Sql.RunQuery(QueryStatement)
    QueryStatement = """
    MERGE SAQFED SRC USING (SELECT A.EQUIPMENT_DESCRIPTION,A.EQUIPMENT_ID,A.EQUIPMENT_RECORD_ID,A.FABLOCATION_ID,A.FABLOCATION_NAME,A.FABLOCATION_RECORD_ID,A.GREENBOOK,A.GREENBOOK_RECORD_ID,A.SERIAL_NUMBER,A.QUOTE_ID,A.QUOTE_NAME,A.QUOTE_RECORD_ID,C.VALUEDRIVER_ID,C.VALUEDRIVER_NAME,C.VALUEDRIVER_RECORD_ID,C.VALUEDRIVER_TYPE,A.QUOTE_FAB_LOCATION_EQUIPMENTS_RECORD_ID,B.CpqTableEntryDateModified,B.CpqTableEntryModifiedBy,B.QTEREV_RECORD_ID FROM SAQFEQ(NOLOCK) A JOIN SAQFVD (NOLOCK) B ON A.QUOTE_RECORD_ID  = B.QUOTE_RECORD_ID AND A.FABLOCATION_ID =B.FABLOCATION_ID JOIN PRGBVD(NOLOCK) C ON B.VALUEDRIVER_ID = C.VALUEDRIVER_ID AND A.GREENBOOK = C.GREENBOOK where B.QUOTE_RECORD_ID = '{rec}' AND B.FABLOCATION_ID ='{fabid}' AND B.QTEREV_RECORD_ID='{qurev_rec_id}' )
    TGT ON (SRC.QUOTE_RECORD_ID = TGT.QUOTE_RECORD_ID AND SRC.FABLOCATION_ID = TGT.FABLOCATION_ID AND SRC.VALUEDRIVER_ID = TGT.VALUEDRIVER_ID AND SRC.GREENBOOK = TGT.GREENBOOK AND SRC.SERIAL_NUMBER = TGT.SERIAL_NUMBER AND SRC.QTEREV_RECORD_ID = TGT.QTEREV_RECORD_ID)
    WHEN MATCHED
    THEN UPDATE SET SRC.VALUEDRIVER_ID = TGT.VALUEDRIVER_ID,SRC.VALUEDRIVER_RECORD_ID = TGT.VALUEDRIVER_RECORD_ID
    WHEN NOT MATCHED BY TARGET
    THEN INSERT(QTEREV_RECORD_ID,QUOTE_FAB_LOC_EQUIP_VAL_DRIVER_RECORD_ID,EQUIPMENT_DESCRIPTION,EQUIPMENT_ID,EQUIPMENT_RECORD_ID,FABLOCATION_ID,FABLOCATION_NAME,FABLOCATION_RECORD_ID,QUOTE_ID,QUOTE_NAME,QUOTE_RECORD_ID,VALUEDRIVER_ID,VALUEDRIVER_NAME,VALUEDRIVER_RECORD_ID,GREENBOOK,GREENBOOK_RECORD_ID,VALUEDRIVER_TYPE,SERIAL_NUMBER,CPQTABLEENTRYDATEADDED,CPQTABLEENTRYADDEDBY, ADDUSR_RECORD_ID, CpqTableEntryModifiedBy,CpqTableEntryDateModified)
    VALUES
    (QTEREV_RECORD_ID,NEWID(),EQUIPMENT_DESCRIPTION,EQUIPMENT_ID,EQUIPMENT_RECORD_ID,FABLOCATION_ID,FABLOCATION_NAME,FABLOCATION_RECORD_ID,QUOTE_ID,QUOTE_NAME,QUOTE_RECORD_ID,VALUEDRIVER_ID,VALUEDRIVER_NAME,VALUEDRIVER_RECORD_ID,GREENBOOK,GREENBOOK_RECORD_ID,VALUEDRIVER_TYPE,SERIAL_NUMBER,
    '{datetimenow}', '{username}', {userid}, {userid}, '{datetimenow}');""".format(
        rec=Qt_rec_id,fabid =TreeParam, datetimenow=datetime.datetime.now().strftime("%m/%d/%Y %H:%M:%S %p"), userid=userId, username=userName,qurev_rec_id=quote_revision_record_id
    )
    Sql.RunQuery(QueryStatement)
    QueryStatement = """
    MERGE SAQEDV SRC USING (SELECT A.EQUIPMENT_DESCRIPTION,A.EQUIPMENT_ID,A.EQUIPMENT_RECORD_ID,A.FABLOCATION_ID,A.FABLOCATION_NAME,A.FABLOCATION_RECORD_ID,A.GREENBOOK,A.GREENBOOK_RECORD_ID,A.SERIAL_NUMBER,A.QUOTE_ID,A.QUOTE_NAME,A.QUOTE_RECORD_ID,B.VALUEDRIVER_VALUECODE,A.QUOTE_FAB_LOCATION_EQUIPMENTS_RECORD_ID,B.CpqTableEntryDateModified,B.CpqTableEntryModifiedBy,C.VALUEDRIVER_ID,C.VALUEDRIVER_NAME,C.VALUEDRIVER_RECORD_ID,C.VALUEDRIVER_VALUE_DESCRIPTION,C.VALUEDRIVER_VALUE_RECORD_ID,C.VALUEDRIVER_VALUE_CODE,C.VALUEDRIVER_COEFFICIENT,C.GBLVDRVAL_RECORD_ID,B.QTEREV_RECORD_ID FROM SAQFEQ(NOLOCK) A JOIN SAQFDV (NOLOCK) B ON A.QUOTE_RECORD_ID  = B.QUOTE_RECORD_ID AND A.FABLOCATION_ID =B.FABLOCATION_ID JOIN PRGBVL(NOLOCK) C ON B.VALUEDRIVER_ID = C.VALUEDRIVER_ID AND B.VALUEDRIVER_VALUEDESC = C.VALUEDRIVER_VALUE_DESCRIPTION AND A.GREENBOOK = C.GREENBOOK where B.QUOTE_RECORD_ID = '{rec}' AND B.FABLOCATION_ID ='{fabid}' AND B.QTEREV_RECORD_ID='{qurev_rec_id}' )
    TGT ON (SRC.QUOTE_RECORD_ID = TGT.QUOTE_RECORD_ID AND SRC.EQUIPMENT_RECORD_ID = TGT.EQUIPMENT_RECORD_ID AND SRC.FABLOCATION_RECORD_ID = TGT.FABLOCATION_RECORD_ID AND SRC.VALUEDRIVER_ID = TGT.VALUEDRIVER_ID  AND SRC.GREENBOOK = TGT.GREENBOOK AND SRC.QTEREV_RECORD_ID = TGT.QTEREV_RECORD_ID )
    WHEN MATCHED 
    THEN UPDATE SET SRC.VALUEDRIVER_VALUE_DESCRIPTION = TGT.VALUEDRIVER_VALUE_DESCRIPTION,SRC.VALUEDRIVER_VALUE_RECORD_ID = TGT.VALUEDRIVER_VALUE_RECORD_ID,SRC.VALUEDRIVER_COEFFICIENT = TGT.VALUEDRIVER_COEFFICIENT,SRC.VALUEDRIVER_COEFFICIENT_RECORD_ID =TGT.GBLVDRVAL_RECORD_ID,SRC.CpqTableEntryModifiedBy = TGT.CpqTableEntryModifiedBy,SRC.CpqTableEntryDateModified = TGT.CpqTableEntryDateModified
    WHEN NOT MATCHED BY TARGET
        THEN INSERT(QTEREV_RECORD_ID,QUOTE_FAB_LOC_EQUIP_DRV_VAL_RECORD_ID,EQUIPMENT_DESCRIPTION,EQUIPMENT_ID,EQUIPMENT_RECORD_ID,FABLOCATION_ID,FABLOCATION_NAME,FABLOCATION_RECORD_ID,QUOTE_ID,QUOTE_NAME,QUOTE_RECORD_ID,VALUEDRIVER_ID,VALUEDRIVER_NAME,VALUEDRIVER_RECORD_ID,VALUEDRIVER_VALUE_CODE,VALUEDRIVER_VALUE_DESCRIPTION,VALUEDRIVER_VALUE_RECORD_ID,GREENBOOK,GREENBOOK_RECORD_ID,VALUEDRIVER_COEFFICIENT_RECORD_ID,VALUEDRIVER_COEFFICIENT,CPQTABLEENTRYDATEADDED,CPQTABLEENTRYADDEDBY, ADDUSR_RECORD_ID, CpqTableEntryModifiedBy,CpqTableEntryDateModified)
        VALUES(QTEREV_RECORD_ID,NEWID(),EQUIPMENT_DESCRIPTION,EQUIPMENT_ID,EQUIPMENT_RECORD_ID,FABLOCATION_ID,FABLOCATION_NAME,FABLOCATION_RECORD_ID,QUOTE_ID,QUOTE_NAME,QUOTE_RECORD_ID,VALUEDRIVER_ID,VALUEDRIVER_NAME,VALUEDRIVER_RECORD_ID,VALUEDRIVER_VALUE_CODE,VALUEDRIVER_VALUE_DESCRIPTION,VALUEDRIVER_VALUE_RECORD_ID,GREENBOOK,GREENBOOK_RECORD_ID,GBLVDRVAL_RECORD_ID,VALUEDRIVER_COEFFICIENT,'{datetimenow}', '{username}', {userid}, {userid}, '{datetimenow}');""".format(
        rec=Qt_rec_id,fabid =TreeParam, datetimenow=datetime.datetime.now().strftime("%m/%d/%Y %H:%M:%S %p"), userid=userId, username=userName,qurev_rec_id=quote_revision_record_id
    )
    Sql.RunQuery(QueryStatement)
    QueryStatement = "UPDATE A  SET FAB_VALUEDRIVER_COEFFICIENT = VALUEDRIVER_COEFFICIENT FROM SAQICO A(NOLOCK) JOIN (SELECT QUOTE_RECORD_ID,EQUIPMENT_ID,SUM(VALUEDRIVER_COEFFICIENT) AS VALUEDRIVER_COEFFICIENT from SAQEDV(NOLOCK) WHERE QUOTE_RECORD_ID ='"+str(Qt_rec_id)+"' AND FABLOCATION_ID ='"+str(TreeParam)+"' AND QTEREV_RECORD_ID = '"+str(quote_revision_record_id)+"' GROUP BY QUOTE_RECORD_ID,EQUIPMENT_ID) B ON A.QUOTE_RECORD_ID = B.QUOTE_RECORD_ID AND A.EQUIPMENT_ID = B.EQUIPMENT_ID"
    Sql.RunQuery(QueryStatement)
    level = ""
    level = "Fab Value Drivers"
    sendEmail(level)

def predefined_wafernode():
    #Trace.Write("TreeParam"+str(TreeParam))
    Log.Info("pre_def_wafernode")
    Log.Info("LEVEL1---"+str(quote_revision_record_id))
    Log.Info("LEVEL2---"+str(TreeTopSuperParentParam))
    Log.Info("LEVEL3---"+str(TreeSuperParentParam))
    Log.Info("LEVEL4---"+str(TreeParentParam))
    Log.Info("LEVEL5---"+str(TreeParam))
    quer_statement = """ INSERT SAQSCD (QUOTE_SERVICE_COVERED_OBJ_TOOL_DRIVER_RECORD_ID,EQUIPMENT_DESCRIPTION,EQUIPMENT_ID,EQUIPMENT_RECORD_ID,QUOTE_ID,QUOTE_NAME,QUOTE_RECORD_ID,SERIAL_NUMBER,QTESRVCOB_RECORD_ID,SERVICE_DESCRIPTION,SERVICE_ID,SERVICE_RECORD_ID,VALUEDRIVER_ID,VALUEDRIVER_RECORD_ID,VALUEDRIVER_TYPE,VALUEDRIVER_NAME,GREENBOOK,GREENBOOK_RECORD_ID,FABLOCATION_ID,FABLOCATION_NAME,FABLOCATION_RECORD_ID,QTESRVFBL_RECORD_ID,QTESRVGBK_VDR_RECORD_ID,CPQTABLEENTRYADDEDBY,CPQTABLEENTRYDATEADDED,QTEREV_ID,QTEREV_RECORD_ID)
    SELECT CONVERT(VARCHAR(4000),NEWID()) as QUOTE_SERVICE_COVERED_OBJ_TOOL_DRIVER_RECORD_ID,SAQSCO.EQUIPMENT_DESCRIPTION,SAQSCO.EQUIPMENT_ID,SAQSCO.EQUIPMENT_RECORD_ID,SAQSCO.QUOTE_ID,SAQSCO.QUOTE_NAME,SAQSCO.QUOTE_RECORD_ID,SAQSCO.SERIAL_NO as SERIAL_NUMBER,SAQSCO.QUOTE_SERVICE_COVERED_OBJECTS_RECORD_ID,SAQSCO.SERVICE_DESCRIPTION,SAQSCO.SERVICE_ID,SAQSCO.SERVICE_RECORD_ID,PRSVDR.VALUEDRIVER_ID,PRSVDR.VALUEDRIVER_RECORD_ID,PRSVDR.VALUEDRIVER_TYPE,PRSVDR.VALUEDRIVER_NAME,SAQSCO.GREENBOOK,SAQSCO.GREENBOOK_RECORD_ID,SAQSCO.FABLOCATION_ID,SAQSCO.FABLOCATION_NAME,SAQSCO.FABLOCATION_RECORD_ID,'' as QTESRVFBL_RECORD_ID,'' as QTESRVGBK_VDR_RECORD_ID,'{username}' as CPQTABLEENTRYADDEDBY ,'{datetimenow}' as CPQTABLEENTRYDATEADDED ,'' as QTEREV_ID,SAQSCO.QTEREV_RECORD_ID from MAEQUP INNER JOIN SAQSCO (NOLOCK) ON MAEQUP.EQUIPMENT_ID = SAQSCO.EQUIPMENT_ID and MAEQUP.GREENBOOK = SAQSCO.GREENBOOK INNER JOIN PRSVDR ON SAQSCO.SERVICE_ID = PRSVDR.SERVICE_ID  WHERE MAEQUP.GREENBOOK = 'DISPLAY' AND SAQSCO.QUOTE_RECORD_ID ='{rec}' AND SAQSCO.QTEREV_RECORD_ID = '{qurev_rec_id}' AND SAQSCO.SERVICE_ID ='{treeparam}' AND PRSVDR.VALUEDRIVER_ID = 'Wafer-Node' AND (MAEQUP.GENERATION IN ('EN 7', 'GEN 7.5','GEN 8', 'GEN 8F', 'GEN 8.5','GEN 8.5S','GEN 8.5H','GEN 8.6','GEN 8.7') AND MAEQUP.END_PRODUCT_TECHNOLOGY IN ('OLED Rigid','OLED Flexible','QLED','microLED','Others') AND MAEQUP.TECHNOLOGY IN ('TFE','TSP','ALD','METAL OXIDE','HDP')) AND MAEQUP.EQUIPMENT_ID NOT IN (SELECT EQUIPMENT_ID FROM SAQSCD WHERE QTEREV_RECORD_ID = '{qurev_rec_id}' AND SERVICE_ID ='{treeparam}' AND QUOTE_RECORD_ID ='{rec}' )""".format(rec=Qt_rec_id, datetimenow=datetime.datetime.now().strftime("%m/%d/%Y %H:%M:%S %p"), userid=userId, username=userName,treeparam=TreeParam,qurev_rec_id=quote_revision_record_id)
    Sql.RunQuery(quer_statement)
    quer_statement_2 = """ INSERT SAQSCV (QUOTE_SERVICE_COVERED_OBJ_TOOL_DRIVER_VALUE_RECORD_ID,EQUIPMENT_DESCRIPTION,EQUIPMENT_ID,EQUIPMENT_RECORD_ID,QUOTE_ID,QUOTE_NAME,QUOTE_RECORD_ID,QTESRVCOB_RECORD_ID,QTESRVCOB_VDR_RECORD_ID,SERIAL_NUMBER,SERVICE_DESCRIPTION,SERVICE_ID,SERVICE_RECORD_ID,TOOL_VALUEDRIVER_ID,TOOL_VALUEDRIVER_RECORD_ID,TOOL_VALUEDRIVER_VALUE_CODE,TOOL_VALUEDRIVER_VALUE_DESCRIPTION,GREENBOOK,GREENBOOK_RECORD_ID,TOOL_VALUEDRIVER_VALUE_RECORD_ID,VALUEDRIVER_COEFFICIENT,VALUEDRIVER_COEFFICIENT_RECORD_ID,FABLOCATION_ID,CPQTABLEENTRYADDEDBY,ADDUSR_RECORD_ID,FABLOCATION_NAME,FABLOCATION_RECORD_ID,CPQTABLEENTRYDATEADDED,QTESRVFBL_RECORD_ID,QTEREV_ID,QTEREV_RECORD_ID)
    SELECT CONVERT(VARCHAR(4000),NEWID()) as QUOTE_SERVICE_COVERED_OBJ_TOOL_DRIVER_VALUE_RECORD_ID,SAQSCO.EQUIPMENT_DESCRIPTION,SAQSCO.EQUIPMENT_ID,SAQSCO.EQUIPMENT_RECORD_ID,SAQSCO.QUOTE_ID,SAQSCO.QUOTE_NAME,SAQSCO.QUOTE_RECORD_ID,SAQSCO.QUOTE_SERVICE_COVERED_OBJECTS_RECORD_ID,SAQSCD.QUOTE_SERVICE_COVERED_OBJ_TOOL_DRIVER_RECORD_ID as QTESRVCOB_VDR_RECORD_ID,SAQSCO.SERIAL_NO as SERIAL_NUMBER,SAQSCO.SERVICE_DESCRIPTION,SAQSCO.SERVICE_ID,SAQSCO.SERVICE_RECORD_ID,PRSDVL.VALUEDRIVER_ID,PRSDVL.VALUEDRIVER_RECORD_ID,PRSDVL.VALUEDRIVER_VALUE_CODE,PRSDVL.VALUEDRIVER_VALUE_DESCRIPTION,SAQSCO.GREENBOOK,SAQSCO.GREENBOOK_RECORD_ID,PRSDVL.VALUEDRIVER_VALUE_RECORD_ID,PRSDVL.VALUEDRIVER_COEFFICIENT,PRSDVL.SRVDRVAL_RECORD_ID as VALUEDRIVER_COEFFICIENT_RECORD_ID,SAQSCO.FABLOCATION_ID,'{username}' as CPQTABLEENTRYADDEDBY,'{userid}' as ADDUSR_RECORD_ID,SAQSCO.FABLOCATION_NAME,SAQSCO.FABLOCATION_RECORD_ID,'{datetimenow}' as CPQTABLEENTRYDATEADDED,'' as QTESRVFBL_RECORD_ID,'' as QTEREV_ID,SAQSCO.QTEREV_RECORD_ID from MAEQUP INNER JOIN SAQSCO (NOLOCK) ON MAEQUP.EQUIPMENT_ID = SAQSCO.EQUIPMENT_ID and MAEQUP.GREENBOOK = SAQSCO.GREENBOOK INNER JOIN PRSDVL ON SAQSCO.SERVICE_ID = PRSDVL.SERVICE_ID INNER JOIN SAQSCD ON SAQSCO.SERVICE_ID = SAQSCD.SERVICE_ID AND SAQSCO.QTEREV_RECORD_ID = SAQSCD.QTEREV_RECORD_ID AND SAQSCO.EQUIPMENT_ID = SAQSCD.EQUIPMENT_ID WHERE MAEQUP.GREENBOOK = 'DISPLAY' AND SAQSCO.QUOTE_RECORD_ID ='{rec}' AND SAQSCO.QTEREV_RECORD_ID = '{qurev_rec_id}' AND SAQSCO.SERVICE_ID ='{treeparam}' AND PRSDVL.VALUEDRIVER_ID = 'Wafer-Node' AND PRSDVL.VALUEDRIVER_VALUE_DESCRIPTION ='Advanced' AND (MAEQUP.GENERATION IN ('EN 7', 'GEN 7.5','GEN 8', 'GEN 8F', 'GEN 8.5','GEN 8.5S','GEN 8.5H','GEN 8.6','GEN 8.7') AND MAEQUP.END_PRODUCT_TECHNOLOGY IN ('OLED Rigid','OLED Flexible','QLED','microLED','Others') AND MAEQUP.TECHNOLOGY IN ('TFE','TSP','ALD','METAL OXIDE','HDP'))AND MAEQUP.EQUIPMENT_ID NOT IN (SELECT EQUIPMENT_ID FROM SAQSCV WHERE QTEREV_RECORD_ID = '{qurev_rec_id}' AND SERVICE_ID ='{treeparam}' AND QUOTE_RECORD_ID ='{rec}' )""".format(rec=Qt_rec_id, datetimenow=datetime.datetime.now().strftime("%m/%d/%Y %H:%M:%S %p"), userid=userId, username=userName,treeparam=TreeParam,qurev_rec_id=quote_revision_record_id)
    Sql.RunQuery(quer_statement_2)
    quer_statement_3 = """ INSERT SAQSCD (QUOTE_SERVICE_COVERED_OBJ_TOOL_DRIVER_RECORD_ID,EQUIPMENT_DESCRIPTION,EQUIPMENT_ID,EQUIPMENT_RECORD_ID,QUOTE_ID,QUOTE_NAME,QUOTE_RECORD_ID,SERIAL_NUMBER,QTESRVCOB_RECORD_ID,SERVICE_DESCRIPTION,SERVICE_ID,SERVICE_RECORD_ID,VALUEDRIVER_ID,VALUEDRIVER_RECORD_ID,VALUEDRIVER_TYPE,VALUEDRIVER_NAME,GREENBOOK,GREENBOOK_RECORD_ID,FABLOCATION_ID,FABLOCATION_NAME,FABLOCATION_RECORD_ID,QTESRVFBL_RECORD_ID,QTESRVGBK_VDR_RECORD_ID,CPQTABLEENTRYADDEDBY,CPQTABLEENTRYDATEADDED,QTEREV_ID,QTEREV_RECORD_ID)
    SELECT CONVERT(VARCHAR(4000),NEWID()) as QUOTE_SERVICE_COVERED_OBJ_TOOL_DRIVER_RECORD_ID,SAQSCO.EQUIPMENT_DESCRIPTION,SAQSCO.EQUIPMENT_ID,SAQSCO.EQUIPMENT_RECORD_ID,SAQSCO.QUOTE_ID,SAQSCO.QUOTE_NAME,SAQSCO.QUOTE_RECORD_ID,SAQSCO.SERIAL_NO as SERIAL_NUMBER,SAQSCO.QUOTE_SERVICE_COVERED_OBJECTS_RECORD_ID,SAQSCO.SERVICE_DESCRIPTION,SAQSCO.SERVICE_ID,SAQSCO.SERVICE_RECORD_ID,PRSVDR.VALUEDRIVER_ID,PRSVDR.VALUEDRIVER_RECORD_ID,PRSVDR.VALUEDRIVER_TYPE,PRSVDR.VALUEDRIVER_NAME,SAQSCO.GREENBOOK,SAQSCO.GREENBOOK_RECORD_ID,SAQSCO.FABLOCATION_ID,SAQSCO.FABLOCATION_NAME,SAQSCO.FABLOCATION_RECORD_ID,'' as QTESRVFBL_RECORD_ID,'' as QTESRVGBK_VDR_RECORD_ID,'{username}' as CPQTABLEENTRYADDEDBY ,'{datetimenow}' as CPQTABLEENTRYDATEADDED ,'' as QTEREV_ID,SAQSCO.QTEREV_RECORD_ID from MAEQUP INNER JOIN SAQSCO (NOLOCK) ON MAEQUP.EQUIPMENT_ID = SAQSCO.EQUIPMENT_ID and MAEQUP.GREENBOOK = SAQSCO.GREENBOOK INNER JOIN PRSVDR ON SAQSCO.SERVICE_ID = PRSVDR.SERVICE_ID  WHERE MAEQUP.GREENBOOK = 'DISPLAY' AND SAQSCO.QUOTE_RECORD_ID ='{rec}' AND SAQSCO.QTEREV_RECORD_ID = '{qurev_rec_id}' AND SAQSCO.SERVICE_ID ='{treeparam}' AND PRSVDR.VALUEDRIVER_ID = 'Wafer-Node' AND (MAEQUP.GENERATION IN ('GEN 10','GEN 10.5','GEN 11') AND MAEQUP.END_PRODUCT_TECHNOLOGY IN ('OLED Rigid','OLED Flexible','QLED','microLED','Others') AND MAEQUP.TECHNOLOGY IN ('ALD','TSP','HDP')) AND MAEQUP.EQUIPMENT_ID NOT IN (SELECT EQUIPMENT_ID FROM SAQSCD WHERE QTEREV_RECORD_ID = '{qurev_rec_id}' AND SERVICE_ID ='{treeparam}' AND QUOTE_RECORD_ID ='{rec}' )""".format(rec=Qt_rec_id, datetimenow=datetime.datetime.now().strftime("%m/%d/%Y %H:%M:%S %p"), userid=userId, username=userName,treeparam=TreeParam,qurev_rec_id=quote_revision_record_id)
    Sql.RunQuery(quer_statement_3)
    quer_statement_4 = """ INSERT SAQSCV (QUOTE_SERVICE_COVERED_OBJ_TOOL_DRIVER_VALUE_RECORD_ID,EQUIPMENT_DESCRIPTION,EQUIPMENT_ID,EQUIPMENT_RECORD_ID,QUOTE_ID,QUOTE_NAME,QUOTE_RECORD_ID,QTESRVCOB_RECORD_ID,QTESRVCOB_VDR_RECORD_ID,SERIAL_NUMBER,SERVICE_DESCRIPTION,SERVICE_ID,SERVICE_RECORD_ID,TOOL_VALUEDRIVER_ID,TOOL_VALUEDRIVER_RECORD_ID,TOOL_VALUEDRIVER_VALUE_CODE,TOOL_VALUEDRIVER_VALUE_DESCRIPTION,GREENBOOK,GREENBOOK_RECORD_ID,TOOL_VALUEDRIVER_VALUE_RECORD_ID,VALUEDRIVER_COEFFICIENT,VALUEDRIVER_COEFFICIENT_RECORD_ID,FABLOCATION_ID,CPQTABLEENTRYADDEDBY,ADDUSR_RECORD_ID,FABLOCATION_NAME,FABLOCATION_RECORD_ID,CPQTABLEENTRYDATEADDED,QTESRVFBL_RECORD_ID,QTEREV_ID,QTEREV_RECORD_ID)
    SELECT CONVERT(VARCHAR(4000),NEWID()) as QUOTE_SERVICE_COVERED_OBJ_TOOL_DRIVER_VALUE_RECORD_ID,SAQSCO.EQUIPMENT_DESCRIPTION,SAQSCO.EQUIPMENT_ID,SAQSCO.EQUIPMENT_RECORD_ID,SAQSCO.QUOTE_ID,SAQSCO.QUOTE_NAME,SAQSCO.QUOTE_RECORD_ID,SAQSCO.QUOTE_SERVICE_COVERED_OBJECTS_RECORD_ID,SAQSCD.QUOTE_SERVICE_COVERED_OBJ_TOOL_DRIVER_RECORD_ID as QTESRVCOB_VDR_RECORD_ID,SAQSCO.SERIAL_NO as SERIAL_NUMBER,SAQSCO.SERVICE_DESCRIPTION,SAQSCO.SERVICE_ID,SAQSCO.SERVICE_RECORD_ID,PRSDVL.VALUEDRIVER_ID,PRSDVL.VALUEDRIVER_RECORD_ID,PRSDVL.VALUEDRIVER_VALUE_CODE,PRSDVL.VALUEDRIVER_VALUE_DESCRIPTION,SAQSCO.GREENBOOK,SAQSCO.GREENBOOK_RECORD_ID,PRSDVL.VALUEDRIVER_VALUE_RECORD_ID,PRSDVL.VALUEDRIVER_COEFFICIENT,PRSDVL.SRVDRVAL_RECORD_ID as VALUEDRIVER_COEFFICIENT_RECORD_ID,SAQSCO.FABLOCATION_ID,'{username}' as CPQTABLEENTRYADDEDBY,'{userid}' as ADDUSR_RECORD_ID,SAQSCO.FABLOCATION_NAME,SAQSCO.FABLOCATION_RECORD_ID,'{datetimenow}' as CPQTABLEENTRYDATEADDED,'' as QTESRVFBL_RECORD_ID,'' as QTEREV_ID,SAQSCO.QTEREV_RECORD_ID from MAEQUP INNER JOIN SAQSCO (NOLOCK) ON MAEQUP.EQUIPMENT_ID = SAQSCO.EQUIPMENT_ID and MAEQUP.GREENBOOK = SAQSCO.GREENBOOK INNER JOIN PRSDVL ON SAQSCO.SERVICE_ID = PRSDVL.SERVICE_ID INNER JOIN SAQSCD ON SAQSCO.SERVICE_ID = SAQSCD.SERVICE_ID AND SAQSCO.QTEREV_RECORD_ID = SAQSCD.QTEREV_RECORD_ID AND SAQSCO.EQUIPMENT_ID = SAQSCD.EQUIPMENT_ID WHERE MAEQUP.GREENBOOK = 'DISPLAY' AND SAQSCO.QUOTE_RECORD_ID ='{rec}' AND SAQSCO.QTEREV_RECORD_ID = '{qurev_rec_id}' AND SAQSCO.SERVICE_ID ='{treeparam}' AND PRSDVL.VALUEDRIVER_ID = 'Wafer-Node' AND PRSDVL.VALUEDRIVER_VALUE_DESCRIPTION ='Advanced' AND (MAEQUP.GENERATION IN ('GEN 10','GEN 10.5','GEN 11') AND MAEQUP.END_PRODUCT_TECHNOLOGY IN ('OLED Rigid','OLED Flexible','QLED','microLED','Others') AND MAEQUP.TECHNOLOGY IN ('ALD','TSP','HDP')) AND MAEQUP.EQUIPMENT_ID NOT IN (SELECT EQUIPMENT_ID FROM SAQSCV WHERE QTEREV_RECORD_ID = '{qurev_rec_id}' AND SERVICE_ID ='{treeparam}' AND QUOTE_RECORD_ID ='{rec}' )""".format(rec=Qt_rec_id, datetimenow=datetime.datetime.now().strftime("%m/%d/%Y %H:%M:%S %p"), userid=userId, username=userName,treeparam=TreeParam,qurev_rec_id=quote_revision_record_id)
    Sql.RunQuery(quer_statement_4) 
    quer_statement_5 = """ INSERT SAQSCD (QUOTE_SERVICE_COVERED_OBJ_TOOL_DRIVER_RECORD_ID,EQUIPMENT_DESCRIPTION,EQUIPMENT_ID,EQUIPMENT_RECORD_ID,QUOTE_ID,QUOTE_NAME,QUOTE_RECORD_ID,SERIAL_NUMBER,QTESRVCOB_RECORD_ID,SERVICE_DESCRIPTION,SERVICE_ID,SERVICE_RECORD_ID,VALUEDRIVER_ID,VALUEDRIVER_RECORD_ID,VALUEDRIVER_TYPE,VALUEDRIVER_NAME,GREENBOOK,GREENBOOK_RECORD_ID,FABLOCATION_ID,FABLOCATION_NAME,FABLOCATION_RECORD_ID,QTESRVFBL_RECORD_ID,QTESRVGBK_VDR_RECORD_ID,CPQTABLEENTRYADDEDBY,CPQTABLEENTRYDATEADDED,QTEREV_ID,QTEREV_RECORD_ID)
    SELECT CONVERT(VARCHAR(4000),NEWID()) as QUOTE_SERVICE_COVERED_OBJ_TOOL_DRIVER_RECORD_ID,SAQSCO.EQUIPMENT_DESCRIPTION,SAQSCO.EQUIPMENT_ID,SAQSCO.EQUIPMENT_RECORD_ID,SAQSCO.QUOTE_ID,SAQSCO.QUOTE_NAME,SAQSCO.QUOTE_RECORD_ID,SAQSCO.SERIAL_NO as SERIAL_NUMBER,SAQSCO.QUOTE_SERVICE_COVERED_OBJECTS_RECORD_ID,SAQSCO.SERVICE_DESCRIPTION,SAQSCO.SERVICE_ID,SAQSCO.SERVICE_RECORD_ID,PRSVDR.VALUEDRIVER_ID,PRSVDR.VALUEDRIVER_RECORD_ID,PRSVDR.VALUEDRIVER_TYPE,PRSVDR.VALUEDRIVER_NAME,SAQSCO.GREENBOOK,SAQSCO.GREENBOOK_RECORD_ID,SAQSCO.FABLOCATION_ID,SAQSCO.FABLOCATION_NAME,SAQSCO.FABLOCATION_RECORD_ID,'' as QTESRVFBL_RECORD_ID,'' as QTESRVGBK_VDR_RECORD_ID,'{username}' as CPQTABLEENTRYADDEDBY ,'{datetimenow}' as CPQTABLEENTRYDATEADDED ,'' as QTEREV_ID,SAQSCO.QTEREV_RECORD_ID from MAEQUP INNER JOIN SAQSCO (NOLOCK) ON MAEQUP.EQUIPMENT_ID = SAQSCO.EQUIPMENT_ID and MAEQUP.GREENBOOK = SAQSCO.GREENBOOK INNER JOIN PRSVDR ON SAQSCO.SERVICE_ID = PRSVDR.SERVICE_ID  WHERE MAEQUP.GREENBOOK = 'DISPLAY' AND SAQSCO.QUOTE_RECORD_ID ='{rec}' AND SAQSCO.QTEREV_RECORD_ID = '{qurev_rec_id}' AND SAQSCO.SERVICE_ID ='{treeparam}' AND PRSVDR.VALUEDRIVER_ID = 'Wafer-Node' AND (MAEQUP.GENERATION IN ('GEN 2','GEN 2F','GEN 3','GEN 3.5','GEN 3.5F','GEN 4','GEN 4H','GEN 4F','GEN 4.5','GEN 4.5H','GEN 4.5F','GEN 4.5Q','GEN 5','GEN 5.5','GEN 5.5F','GEN 5.5Q','GEN 6','GEN 6H','GEN 6H-P') AND MAEQUP.END_PRODUCT_TECHNOLOGY IN ('OLED Rigid','OLED Flexible','QLED','microLED','Others') AND MAEQUP.TECHNOLOGY IN ('DIGITAL LITHOGRAPHY')) AND MAEQUP.EQUIPMENT_ID NOT IN (SELECT EQUIPMENT_ID FROM SAQSCD WHERE QTEREV_RECORD_ID = '{qurev_rec_id}' AND SERVICE_ID ='{treeparam}' AND QUOTE_RECORD_ID ='{rec}' )""".format(rec=Qt_rec_id, datetimenow=datetime.datetime.now().strftime("%m/%d/%Y %H:%M:%S %p"), userid=userId, username=userName,treeparam=TreeParam,qurev_rec_id=quote_revision_record_id)
    Sql.RunQuery(quer_statement_5)
    quer_statement_6 = """ INSERT SAQSCV (QUOTE_SERVICE_COVERED_OBJ_TOOL_DRIVER_VALUE_RECORD_ID,EQUIPMENT_DESCRIPTION,EQUIPMENT_ID,EQUIPMENT_RECORD_ID,QUOTE_ID,QUOTE_NAME,QUOTE_RECORD_ID,QTESRVCOB_RECORD_ID,QTESRVCOB_VDR_RECORD_ID,SERIAL_NUMBER,SERVICE_DESCRIPTION,SERVICE_ID,SERVICE_RECORD_ID,TOOL_VALUEDRIVER_ID,TOOL_VALUEDRIVER_RECORD_ID,TOOL_VALUEDRIVER_VALUE_CODE,TOOL_VALUEDRIVER_VALUE_DESCRIPTION,GREENBOOK,GREENBOOK_RECORD_ID,TOOL_VALUEDRIVER_VALUE_RECORD_ID,VALUEDRIVER_COEFFICIENT,VALUEDRIVER_COEFFICIENT_RECORD_ID,FABLOCATION_ID,CPQTABLEENTRYADDEDBY,ADDUSR_RECORD_ID,FABLOCATION_NAME,FABLOCATION_RECORD_ID,CPQTABLEENTRYDATEADDED,QTESRVFBL_RECORD_ID,QTEREV_ID,QTEREV_RECORD_ID)
    SELECT CONVERT(VARCHAR(4000),NEWID()) as QUOTE_SERVICE_COVERED_OBJ_TOOL_DRIVER_VALUE_RECORD_ID,SAQSCO.EQUIPMENT_DESCRIPTION,SAQSCO.EQUIPMENT_ID,SAQSCO.EQUIPMENT_RECORD_ID,SAQSCO.QUOTE_ID,SAQSCO.QUOTE_NAME,SAQSCO.QUOTE_RECORD_ID,SAQSCO.QUOTE_SERVICE_COVERED_OBJECTS_RECORD_ID,SAQSCD.QUOTE_SERVICE_COVERED_OBJ_TOOL_DRIVER_RECORD_ID as QTESRVCOB_VDR_RECORD_ID,SAQSCO.SERIAL_NO as SERIAL_NUMBER,SAQSCO.SERVICE_DESCRIPTION,SAQSCO.SERVICE_ID,SAQSCO.SERVICE_RECORD_ID,PRSDVL.VALUEDRIVER_ID,PRSDVL.VALUEDRIVER_RECORD_ID,PRSDVL.VALUEDRIVER_VALUE_CODE,PRSDVL.VALUEDRIVER_VALUE_DESCRIPTION,SAQSCO.GREENBOOK,SAQSCO.GREENBOOK_RECORD_ID,PRSDVL.VALUEDRIVER_VALUE_RECORD_ID,PRSDVL.VALUEDRIVER_COEFFICIENT,PRSDVL.SRVDRVAL_RECORD_ID as VALUEDRIVER_COEFFICIENT_RECORD_ID,SAQSCO.FABLOCATION_ID,'{username}' as CPQTABLEENTRYADDEDBY,'{userid}' as ADDUSR_RECORD_ID,SAQSCO.FABLOCATION_NAME,SAQSCO.FABLOCATION_RECORD_ID,'{datetimenow}' as CPQTABLEENTRYDATEADDED,'' as QTESRVFBL_RECORD_ID,'' as QTEREV_ID,SAQSCO.QTEREV_RECORD_ID from MAEQUP INNER JOIN SAQSCO (NOLOCK) ON MAEQUP.EQUIPMENT_ID = SAQSCO.EQUIPMENT_ID and MAEQUP.GREENBOOK = SAQSCO.GREENBOOK INNER JOIN PRSDVL ON SAQSCO.SERVICE_ID = PRSDVL.SERVICE_ID INNER JOIN SAQSCD ON SAQSCO.SERVICE_ID = SAQSCD.SERVICE_ID AND SAQSCO.QTEREV_RECORD_ID = SAQSCD.QTEREV_RECORD_ID AND SAQSCO.EQUIPMENT_ID = SAQSCD.EQUIPMENT_ID WHERE MAEQUP.GREENBOOK = 'DISPLAY' AND SAQSCO.QUOTE_RECORD_ID ='{rec}' AND SAQSCO.QTEREV_RECORD_ID = '{qurev_rec_id}' AND SAQSCO.SERVICE_ID ='{treeparam}' AND PRSDVL.VALUEDRIVER_ID = 'Wafer-Node' AND PRSDVL.VALUEDRIVER_VALUE_DESCRIPTION ='Advanced' AND (MAEQUP.GENERATION IN ('GEN 2','GEN 2F','GEN 3','GEN 3.5','GEN 3.5F','GEN 4','GEN 4H','GEN 4F','GEN 4.5','GEN 4.5H','GEN 4.5F','GEN 4.5Q','GEN 5','GEN 5.5','GEN 5.5F','GEN 5.5Q','GEN 6','GEN 6H','GEN 6H-P') AND MAEQUP.END_PRODUCT_TECHNOLOGY IN ('OLED Rigid','OLED Flexible','QLED','microLED','Others') AND MAEQUP.TECHNOLOGY IN ('DIGITAL LITHOGRAPHY')) AND MAEQUP.EQUIPMENT_ID NOT IN (SELECT EQUIPMENT_ID FROM SAQSCV WHERE QTEREV_RECORD_ID = '{qurev_rec_id}' AND SERVICE_ID ='{treeparam}' AND QUOTE_RECORD_ID ='{rec}' )""".format(rec=Qt_rec_id, datetimenow=datetime.datetime.now().strftime("%m/%d/%Y %H:%M:%S %p"), userid=userId, username=userName,treeparam=TreeParam,qurev_rec_id=quote_revision_record_id)
    Sql.RunQuery(quer_statement_6)
    quer_statement_7 = """ INSERT SAQSCD (QUOTE_SERVICE_COVERED_OBJ_TOOL_DRIVER_RECORD_ID,EQUIPMENT_DESCRIPTION,EQUIPMENT_ID,EQUIPMENT_RECORD_ID,QUOTE_ID,QUOTE_NAME,QUOTE_RECORD_ID,SERIAL_NUMBER,QTESRVCOB_RECORD_ID,SERVICE_DESCRIPTION,SERVICE_ID,SERVICE_RECORD_ID,VALUEDRIVER_ID,VALUEDRIVER_RECORD_ID,VALUEDRIVER_TYPE,VALUEDRIVER_NAME,GREENBOOK,GREENBOOK_RECORD_ID,FABLOCATION_ID,FABLOCATION_NAME,FABLOCATION_RECORD_ID,QTESRVFBL_RECORD_ID,QTESRVGBK_VDR_RECORD_ID,CPQTABLEENTRYADDEDBY,CPQTABLEENTRYDATEADDED,QTEREV_ID,QTEREV_RECORD_ID)
    SELECT CONVERT(VARCHAR(4000),NEWID()) as QUOTE_SERVICE_COVERED_OBJ_TOOL_DRIVER_RECORD_ID,SAQSCO.EQUIPMENT_DESCRIPTION,SAQSCO.EQUIPMENT_ID,SAQSCO.EQUIPMENT_RECORD_ID,SAQSCO.QUOTE_ID,SAQSCO.QUOTE_NAME,SAQSCO.QUOTE_RECORD_ID,SAQSCO.SERIAL_NO as SERIAL_NUMBER,SAQSCO.QUOTE_SERVICE_COVERED_OBJECTS_RECORD_ID,SAQSCO.SERVICE_DESCRIPTION,SAQSCO.SERVICE_ID,SAQSCO.SERVICE_RECORD_ID,PRSVDR.VALUEDRIVER_ID,PRSVDR.VALUEDRIVER_RECORD_ID,PRSVDR.VALUEDRIVER_TYPE,PRSVDR.VALUEDRIVER_NAME,SAQSCO.GREENBOOK,SAQSCO.GREENBOOK_RECORD_ID,SAQSCO.FABLOCATION_ID,SAQSCO.FABLOCATION_NAME,SAQSCO.FABLOCATION_RECORD_ID,'' as QTESRVFBL_RECORD_ID,'' as QTESRVGBK_VDR_RECORD_ID,'{username}' as CPQTABLEENTRYADDEDBY ,'{datetimenow}' as CPQTABLEENTRYDATEADDED ,'' as QTEREV_ID,SAQSCO.QTEREV_RECORD_ID from MAEQUP INNER JOIN SAQSCO (NOLOCK) ON MAEQUP.EQUIPMENT_ID = SAQSCO.EQUIPMENT_ID and MAEQUP.GREENBOOK = SAQSCO.GREENBOOK INNER JOIN PRSVDR ON SAQSCO.SERVICE_ID = PRSVDR.SERVICE_ID  WHERE MAEQUP.GREENBOOK = 'DISPLAY' AND SAQSCO.QUOTE_RECORD_ID ='{rec}' AND SAQSCO.QTEREV_RECORD_ID = '{qurev_rec_id}' AND SAQSCO.SERVICE_ID ='{treeparam}' AND PRSVDR.VALUEDRIVER_ID = 'Wafer-Node' AND (MAEQUP.GENERATION IN ('GEN 10','GEN 10.5','GEN 11') AND MAEQUP.END_PRODUCT_TECHNOLOGY IN ('LCD+OLED','OLED Rigid','OLED Flexible','Solar','Touch Panel','Other') AND MAEQUP.TECHNOLOGY IN ('SOLAR','ARRAY','A-SI','LTPS','METAL OXIDE','NEW ARISTO','SPUTTERING')) AND MAEQUP.EQUIPMENT_ID NOT IN (SELECT EQUIPMENT_ID FROM SAQSCD WHERE QTEREV_RECORD_ID = '{qurev_rec_id}' AND SERVICE_ID ='{treeparam}' AND QUOTE_RECORD_ID ='{rec}' )""".format(rec=Qt_rec_id, datetimenow=datetime.datetime.now().strftime("%m/%d/%Y %H:%M:%S %p"), userid=userId, username=userName,treeparam=TreeParam,qurev_rec_id=quote_revision_record_id)
    Sql.RunQuery(quer_statement_7)
    quer_statement_8 = """ INSERT SAQSCV (QUOTE_SERVICE_COVERED_OBJ_TOOL_DRIVER_VALUE_RECORD_ID,EQUIPMENT_DESCRIPTION,EQUIPMENT_ID,EQUIPMENT_RECORD_ID,QUOTE_ID,QUOTE_NAME,QUOTE_RECORD_ID,QTESRVCOB_RECORD_ID,QTESRVCOB_VDR_RECORD_ID,SERIAL_NUMBER,SERVICE_DESCRIPTION,SERVICE_ID,SERVICE_RECORD_ID,TOOL_VALUEDRIVER_ID,TOOL_VALUEDRIVER_RECORD_ID,TOOL_VALUEDRIVER_VALUE_CODE,TOOL_VALUEDRIVER_VALUE_DESCRIPTION,GREENBOOK,GREENBOOK_RECORD_ID,TOOL_VALUEDRIVER_VALUE_RECORD_ID,VALUEDRIVER_COEFFICIENT,VALUEDRIVER_COEFFICIENT_RECORD_ID,FABLOCATION_ID,CPQTABLEENTRYADDEDBY,ADDUSR_RECORD_ID,FABLOCATION_NAME,FABLOCATION_RECORD_ID,CPQTABLEENTRYDATEADDED,QTESRVFBL_RECORD_ID,QTEREV_ID,QTEREV_RECORD_ID)
    SELECT CONVERT(VARCHAR(4000),NEWID()) as QUOTE_SERVICE_COVERED_OBJ_TOOL_DRIVER_VALUE_RECORD_ID,SAQSCO.EQUIPMENT_DESCRIPTION,SAQSCO.EQUIPMENT_ID,SAQSCO.EQUIPMENT_RECORD_ID,SAQSCO.QUOTE_ID,SAQSCO.QUOTE_NAME,SAQSCO.QUOTE_RECORD_ID,SAQSCO.QUOTE_SERVICE_COVERED_OBJECTS_RECORD_ID,SAQSCD.QUOTE_SERVICE_COVERED_OBJ_TOOL_DRIVER_RECORD_ID as QTESRVCOB_VDR_RECORD_ID,SAQSCO.SERIAL_NO as SERIAL_NUMBER,SAQSCO.SERVICE_DESCRIPTION,SAQSCO.SERVICE_ID,SAQSCO.SERVICE_RECORD_ID,PRSDVL.VALUEDRIVER_ID,PRSDVL.VALUEDRIVER_RECORD_ID,PRSDVL.VALUEDRIVER_VALUE_CODE,PRSDVL.VALUEDRIVER_VALUE_DESCRIPTION,SAQSCO.GREENBOOK,SAQSCO.GREENBOOK_RECORD_ID,PRSDVL.VALUEDRIVER_VALUE_RECORD_ID,PRSDVL.VALUEDRIVER_COEFFICIENT,PRSDVL.SRVDRVAL_RECORD_ID as VALUEDRIVER_COEFFICIENT_RECORD_ID,SAQSCO.FABLOCATION_ID,'{username}' as CPQTABLEENTRYADDEDBY,'{userid}' as ADDUSR_RECORD_ID,SAQSCO.FABLOCATION_NAME,SAQSCO.FABLOCATION_RECORD_ID,'{datetimenow}' as CPQTABLEENTRYDATEADDED,'' as QTESRVFBL_RECORD_ID,'' as QTEREV_ID,SAQSCO.QTEREV_RECORD_ID from MAEQUP INNER JOIN SAQSCO (NOLOCK) ON MAEQUP.EQUIPMENT_ID = SAQSCO.EQUIPMENT_ID and MAEQUP.GREENBOOK = SAQSCO.GREENBOOK INNER JOIN PRSDVL ON SAQSCO.SERVICE_ID = PRSDVL.SERVICE_ID INNER JOIN SAQSCD ON SAQSCO.SERVICE_ID = SAQSCD.SERVICE_ID AND SAQSCO.QTEREV_RECORD_ID = SAQSCD.QTEREV_RECORD_ID AND SAQSCO.EQUIPMENT_ID = SAQSCD.EQUIPMENT_ID WHERE MAEQUP.GREENBOOK = 'DISPLAY' AND SAQSCO.QUOTE_RECORD_ID ='{rec}' AND SAQSCO.QTEREV_RECORD_ID = '{qurev_rec_id}' AND SAQSCO.SERVICE_ID ='{treeparam}' AND PRSDVL.VALUEDRIVER_ID = 'Wafer-Node' AND PRSDVL.VALUEDRIVER_VALUE_DESCRIPTION ='Mature' AND (MAEQUP.GENERATION IN ('GEN 10','GEN 10.5','GEN 11') AND MAEQUP.END_PRODUCT_TECHNOLOGY IN ('LCD+OLED','OLED Rigid','OLED Flexible','Solar','Touch Panel','Other') AND MAEQUP.TECHNOLOGY IN ('SOLAR','ARRAY','A-SI','LTPS','METAL OXIDE','NEW ARISTO','SPUTTERING')) AND MAEQUP.EQUIPMENT_ID NOT IN (SELECT EQUIPMENT_ID FROM SAQSCV WHERE QTEREV_RECORD_ID = '{qurev_rec_id}' AND SERVICE_ID ='{treeparam}' AND QUOTE_RECORD_ID ='{rec}' )""".format(rec=Qt_rec_id, datetimenow=datetime.datetime.now().strftime("%m/%d/%Y %H:%M:%S %p"), userid=userId, username=userName,treeparam=TreeParam,qurev_rec_id=quote_revision_record_id)
    Sql.RunQuery(quer_statement_8)
    quer_statement_9 = """ INSERT SAQSCD (QUOTE_SERVICE_COVERED_OBJ_TOOL_DRIVER_RECORD_ID,EQUIPMENT_DESCRIPTION,EQUIPMENT_ID,EQUIPMENT_RECORD_ID,QUOTE_ID,QUOTE_NAME,QUOTE_RECORD_ID,SERIAL_NUMBER,QTESRVCOB_RECORD_ID,SERVICE_DESCRIPTION,SERVICE_ID,SERVICE_RECORD_ID,VALUEDRIVER_ID,VALUEDRIVER_RECORD_ID,VALUEDRIVER_TYPE,VALUEDRIVER_NAME,GREENBOOK,GREENBOOK_RECORD_ID,FABLOCATION_ID,FABLOCATION_NAME,FABLOCATION_RECORD_ID,QTESRVFBL_RECORD_ID,QTESRVGBK_VDR_RECORD_ID,CPQTABLEENTRYADDEDBY,CPQTABLEENTRYDATEADDED,QTEREV_ID,QTEREV_RECORD_ID)
    SELECT CONVERT(VARCHAR(4000),NEWID()) as QUOTE_SERVICE_COVERED_OBJ_TOOL_DRIVER_RECORD_ID,SAQSCO.EQUIPMENT_DESCRIPTION,SAQSCO.EQUIPMENT_ID,SAQSCO.EQUIPMENT_RECORD_ID,SAQSCO.QUOTE_ID,SAQSCO.QUOTE_NAME,SAQSCO.QUOTE_RECORD_ID,SAQSCO.SERIAL_NO as SERIAL_NUMBER,SAQSCO.QUOTE_SERVICE_COVERED_OBJECTS_RECORD_ID,SAQSCO.SERVICE_DESCRIPTION,SAQSCO.SERVICE_ID,SAQSCO.SERVICE_RECORD_ID,PRSVDR.VALUEDRIVER_ID,PRSVDR.VALUEDRIVER_RECORD_ID,PRSVDR.VALUEDRIVER_TYPE,PRSVDR.VALUEDRIVER_NAME,SAQSCO.GREENBOOK,SAQSCO.GREENBOOK_RECORD_ID,SAQSCO.FABLOCATION_ID,SAQSCO.FABLOCATION_NAME,SAQSCO.FABLOCATION_RECORD_ID,'' as QTESRVFBL_RECORD_ID,'' as QTESRVGBK_VDR_RECORD_ID,'{username}' as CPQTABLEENTRYADDEDBY ,'{datetimenow}' as CPQTABLEENTRYDATEADDED ,'' as QTEREV_ID,SAQSCO.QTEREV_RECORD_ID from MAEQUP INNER JOIN SAQSCO (NOLOCK) ON MAEQUP.EQUIPMENT_ID = SAQSCO.EQUIPMENT_ID and MAEQUP.GREENBOOK = SAQSCO.GREENBOOK INNER JOIN PRSVDR ON SAQSCO.SERVICE_ID = PRSVDR.SERVICE_ID  WHERE MAEQUP.GREENBOOK = 'DISPLAY' AND SAQSCO.QUOTE_RECORD_ID ='{rec}' AND SAQSCO.QTEREV_RECORD_ID = '{qurev_rec_id}' AND SAQSCO.SERVICE_ID ='{treeparam}' AND PRSVDR.VALUEDRIVER_ID = 'Wafer-Node' AND (MAEQUP.GENERATION IN ('GEN 5.5','GEN 5.5F','GEN 5.5Q','GEN 6','GEN 6H','GEN 6H-P','GEN 8.5','GEN 8.5S','GEN 8.5H','GEN 8.6','GEN 8.7') AND MAEQUP.END_PRODUCT_TECHNOLOGY IN ('LCD+OLED','OLED Rigid','OLED Flexible','Solar','Touch Panel','Other') AND MAEQUP.TECHNOLOGY IN ('LTPS','SOLAR','SPUTTERING','NEW ARISTO','HYBRID')) AND MAEQUP.EQUIPMENT_ID NOT IN (SELECT EQUIPMENT_ID FROM SAQSCD WHERE QTEREV_RECORD_ID = '{qurev_rec_id}' AND SERVICE_ID ='{treeparam}' AND QUOTE_RECORD_ID ='{rec}' )""".format(rec=Qt_rec_id, datetimenow=datetime.datetime.now().strftime("%m/%d/%Y %H:%M:%S %p"), userid=userId, username=userName,treeparam=TreeParam,qurev_rec_id=quote_revision_record_id)
    Sql.RunQuery(quer_statement_9)
    quer_statement_10 = """ INSERT SAQSCV (QUOTE_SERVICE_COVERED_OBJ_TOOL_DRIVER_VALUE_RECORD_ID,EQUIPMENT_DESCRIPTION,EQUIPMENT_ID,EQUIPMENT_RECORD_ID,QUOTE_ID,QUOTE_NAME,QUOTE_RECORD_ID,QTESRVCOB_RECORD_ID,QTESRVCOB_VDR_RECORD_ID,SERIAL_NUMBER,SERVICE_DESCRIPTION,SERVICE_ID,SERVICE_RECORD_ID,TOOL_VALUEDRIVER_ID,TOOL_VALUEDRIVER_RECORD_ID,TOOL_VALUEDRIVER_VALUE_CODE,TOOL_VALUEDRIVER_VALUE_DESCRIPTION,GREENBOOK,GREENBOOK_RECORD_ID,TOOL_VALUEDRIVER_VALUE_RECORD_ID,VALUEDRIVER_COEFFICIENT,VALUEDRIVER_COEFFICIENT_RECORD_ID,FABLOCATION_ID,CPQTABLEENTRYADDEDBY,ADDUSR_RECORD_ID,FABLOCATION_NAME,FABLOCATION_RECORD_ID,CPQTABLEENTRYDATEADDED,QTESRVFBL_RECORD_ID,QTEREV_ID,QTEREV_RECORD_ID)
    SELECT CONVERT(VARCHAR(4000),NEWID()) as QUOTE_SERVICE_COVERED_OBJ_TOOL_DRIVER_VALUE_RECORD_ID,SAQSCO.EQUIPMENT_DESCRIPTION,SAQSCO.EQUIPMENT_ID,SAQSCO.EQUIPMENT_RECORD_ID,SAQSCO.QUOTE_ID,SAQSCO.QUOTE_NAME,SAQSCO.QUOTE_RECORD_ID,SAQSCO.QUOTE_SERVICE_COVERED_OBJECTS_RECORD_ID,SAQSCD.QUOTE_SERVICE_COVERED_OBJ_TOOL_DRIVER_RECORD_ID as QTESRVCOB_VDR_RECORD_ID,SAQSCO.SERIAL_NO as SERIAL_NUMBER,SAQSCO.SERVICE_DESCRIPTION,SAQSCO.SERVICE_ID,SAQSCO.SERVICE_RECORD_ID,PRSDVL.VALUEDRIVER_ID,PRSDVL.VALUEDRIVER_RECORD_ID,PRSDVL.VALUEDRIVER_VALUE_CODE,PRSDVL.VALUEDRIVER_VALUE_DESCRIPTION,SAQSCO.GREENBOOK,SAQSCO.GREENBOOK_RECORD_ID,PRSDVL.VALUEDRIVER_VALUE_RECORD_ID,PRSDVL.VALUEDRIVER_COEFFICIENT,PRSDVL.SRVDRVAL_RECORD_ID as VALUEDRIVER_COEFFICIENT_RECORD_ID,SAQSCO.FABLOCATION_ID,'{username}' as CPQTABLEENTRYADDEDBY,'{userid}' as ADDUSR_RECORD_ID,SAQSCO.FABLOCATION_NAME,SAQSCO.FABLOCATION_RECORD_ID,'{datetimenow}' as CPQTABLEENTRYDATEADDED,'' as QTESRVFBL_RECORD_ID,'' as QTEREV_ID,SAQSCO.QTEREV_RECORD_ID from MAEQUP INNER JOIN SAQSCO (NOLOCK) ON MAEQUP.EQUIPMENT_ID = SAQSCO.EQUIPMENT_ID and MAEQUP.GREENBOOK = SAQSCO.GREENBOOK INNER JOIN PRSDVL ON SAQSCO.SERVICE_ID = PRSDVL.SERVICE_ID INNER JOIN SAQSCD ON SAQSCO.SERVICE_ID = SAQSCD.SERVICE_ID AND SAQSCO.QTEREV_RECORD_ID = SAQSCD.QTEREV_RECORD_ID AND SAQSCO.EQUIPMENT_ID = SAQSCD.EQUIPMENT_ID WHERE MAEQUP.GREENBOOK = 'DISPLAY' AND SAQSCO.QUOTE_RECORD_ID ='{rec}' AND SAQSCO.QTEREV_RECORD_ID = '{qurev_rec_id}' AND SAQSCO.SERVICE_ID ='{treeparam}' AND PRSDVL.VALUEDRIVER_ID = 'Wafer-Node' AND PRSDVL.VALUEDRIVER_VALUE_DESCRIPTION ='Mature' AND (MAEQUP.GENERATION IN ('GEN 5.5','GEN 5.5F','GEN 5.5Q','GEN 6','GEN 6H','GEN 6H-P','GEN 8.5','GEN 8.5S','GEN 8.5H','GEN 8.6','GEN 8.7') AND MAEQUP.END_PRODUCT_TECHNOLOGY IN ('LCD+OLED','OLED Rigid','OLED Flexible','Solar','Touch Panel','Other') AND MAEQUP.TECHNOLOGY IN ('LTPS','SOLAR','SPUTTERING','NEW ARISTO','HYBRID')) AND MAEQUP.EQUIPMENT_ID NOT IN (SELECT EQUIPMENT_ID FROM SAQSCV WHERE QTEREV_RECORD_ID = '{qurev_rec_id}' AND SERVICE_ID ='{treeparam}' AND QUOTE_RECORD_ID ='{rec}' )""".format(rec=Qt_rec_id, datetimenow=datetime.datetime.now().strftime("%m/%d/%Y %H:%M:%S %p"), userid=userId, username=userName,treeparam=TreeParam,qurev_rec_id=quote_revision_record_id)
    Sql.RunQuery(quer_statement_10)
    
    
    
    
    Log.Info("quer_statement ->"+str(quer_statement))
    Log.Info("quer_statement_2 ->"+str(quer_statement_2))

    

try:
    Qt_rec_id = Param.CPQ_Columns['Quote'] 
except:
    Qt_rec_id = ""

#Log.Info("Qt_rec_id ->"+str(Qt_rec_id))
try:
    LEVEL = Param.CPQ_Columns['Level']
except:
    LEVEL = ""
Log.Info("LEVEL---"+str(LEVEL))
try:
    TreeParam = Param.CPQ_Columns['TreeParam']
    TreeParentParam = Param.CPQ_Columns['TreeParentParam']
    TreeSuperParentParam = Param.CPQ_Columns['TreeSuperParentParam']
    TreeTopSuperParentParam = Param.CPQ_Columns['TreeTopSuperParentParam']
    userId = Param.CPQ_Columns['Userid']
    userName = Param.CPQ_Columns['Username']
    quote_revision_record_id = Param.CPQ_Columns['quote_revision_record_id']
except: 
    TreeParam = ""
    TreeParentParam = ""
    TreeSuperParentParam = ""
    TreeTopSuperParentParam = ""
    userId = ""
    userName = ""
    quote_revision_record_id = ""
if 'SERVICE COST AND VALUE DRIVER' in LEVEL:
    ApiResponse = ApiResponseFactory.JsonResponse(ServiceCostAndValueDrivers())
elif 'FAB COST AND VALUE DRIVER' in LEVEL:
    ApiResponse = ApiResponseFactory.JsonResponse(FabCostAndValueDrivers())
elif 'GREENBOOK COST AND VALUE DRIVER' in LEVEL:
    ApiResponse = ApiResponseFactory.JsonResponse(GreenbookCostAndValueDrivers())
elif 'QUOTE VALUE DRIVER' in LEVEL:
    ApiResponse = ApiResponseFactory.JsonResponse(QuoteValueDrivers())
elif 'FAB GREENBOOK VALUE DRIVER' in LEVEL:
    ApiResponse = ApiResponseFactory.JsonResponse(FabGreenbookValueDrivers())
elif LEVEL == 'FAB VALUE DRIVER':
    ApiResponse = ApiResponseFactory.JsonResponse(FabValueDrivers())
elif LEVEL == 'PREDEFINED WAFER DRIVER':
    ApiResponse = ApiResponseFactory.JsonResponse(predefined_wafernode())

