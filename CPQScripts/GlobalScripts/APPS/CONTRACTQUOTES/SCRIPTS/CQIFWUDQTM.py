#========================================================================================================#================================
#   __script_name : CQIFWUDQTM.PY
#   __script_description : THIS SCRIPT USED TO UPDATE QUOTE ITEMS AND QUOTE LINE ITEMS 
#   __primary_author__ : WASIM
#   __create_date :24-08-2021
#   Â© BOSTON HARBOR TECHNOLOGY LLC - ALL RIGHTS RESERVED
# ==========================================================================================================================================

import datetime
import Webcom.Configurator.Scripting.Test.TestProduct
import sys
import re
import System.Net
#import SYCNGEGUID as CPQID
from SYDATABASE import SQL
from System import Convert
import re
import datetime
Sql = SQL()
ScriptExecutor = ScriptExecutor
from System.Text.Encoding import UTF8
#Log.Info('quote_revision_record_id- '+str(quote_revision_record_id))
def quote_items_pricing(Qt_id):
	where_condition = ""
	#quote_number = Qt_id[2:12]
	Log.Info('quote_id---'+str(Qt_id)) 
	pricing_offering = ('Z0046','Z0100','Z0116','Z0117')
	get_rev_rec_id = Sql.GetFirst("SELECT QTEREV_RECORD_ID,QUOTE_CURRENCY,MASTER_TABLE_QUOTE_RECORD_ID FROM SAQTMT where QUOTE_ID = '{}'".format(Qt_id))
	contract_quote_record_id = get_rev_rec_id.MASTER_TABLE_QUOTE_RECORD_ID
	contract_quote_revision_record_id = get_rev_rec_id.QTEREV_RECORD_ID
	get_exch_rate = Sql.GetFirst("SELECT * FROM SAQTRV where QUOTE_ID = '{}' AND QUOTE_REVISION_RECORD_ID = '{}'".format(Qt_id,contract_quote_revision_record_id))
	
	get_exch_rate = get_exch_rate.EXCHANGE_RATE
	##updating saqico for cpq pricing product
	if manual_pricing  != 'True':
		Sql.RunQuery("""UPDATE SAQICO  
					SET 
					TAXVDC = (TNTVDC * TAXVTP)/100,
					TAXVGC = (TNTVGC * TAXVTP)/100
					FROM SAQICO (NOLOCK) 
					WHERE SAQICO.QUOTE_RECORD_ID = '{QuoteRecordId}' AND SAQICO.QTEREV_RECORD_ID = '{QuoteRevisionRecordId}' AND SAQICO.SERVICE_ID in {pricing_offering}""".format(QuoteRecordId= contract_quote_record_id ,QuoteRevisionRecordId =contract_quote_revision_record_id,pricing_offering=pricing_offering))

		Sql.RunQuery("""UPDATE SAQICO 
					SET TAMTDC = CASE WHEN BILTYP = 'Variable' THEN TENVDC ELSE TNTVDC+ISNULL(TAXVDC,0) END,
					TAMTGC = CASE WHEN BILTYP = 'Variable' THEN TENVGC ELSE TNTVGC+ISNULL(TAXVGC,0) END,
					STATUS = 'ACQUIRED'
					FROM SAQICO (NOLOCK) 
					WHERE SAQICO.QUOTE_RECORD_ID = '{QuoteRecordId}' AND SAQICO.QTEREV_RECORD_ID = '{QuoteRevisionRecordId}' AND SAQICO.SERVICE_ID in {pricing_offering}""".format(QuoteRecordId= contract_quote_record_id ,QuoteRevisionRecordId =contract_quote_revision_record_id,pricing_offering=pricing_offering))

		# Price Bench Marking - Start
		Sql.RunQuery("""UPDATE SAQICO
				SET
				SAQICO.BCHPGC = PRPRBM.ANNUALIZED_BOOKING_PRICE,
				SAQICO.BCHDPT = ((SAQICO.TNTVGC - ISNULL(PRPRBM.ANNUALIZED_BOOKING_PRICE,0))/SAQICO.TNTVGC) * 100
				FROM SAQICO	(NOLOCK)
				JOIN (
					SELECT SAQICO.CpqTableEntryId, MAX(PRPRBM.CONTRACT_START_DATE) AS CONTRACT_START_DATE, PRPRBM.SERVICE_PRODUCT_NAME,
							PRPRBM.SERIAL_NUMBER, PRPRBM.EQUIPMENT_NUMBER
					FROM SAQICO (NOLOCK)
					JOIN PRPRBM (NOLOCK) ON PRPRBM.EQUIPMENT_NUMBER = RIGHT('000000000000000000' + CONVERT(VARCHAR(18), SAQICO.EQUIPMENT_ID), 18) AND PRPRBM.SERVICE_PRODUCT_NAME = SAQICO.SERVICE_ID AND PRPRBM.SERIAL_NUMBER = SAQICO.SERNUM
					WHERE SAQICO.QUOTE_RECORD_ID = '{QuoteRecordId}' AND SAQICO.QTEREV_RECORD_ID = '{QuoteRevisionRecordId}'
					GROUP BY PRPRBM.SERVICE_PRODUCT_NAME, PRPRBM.EQUIPMENT_NUMBER, PRPRBM.SERIAL_NUMBER, SAQICO.CpqTableEntryId
				)AS IQ ON SAQICO.CpqTableEntryId = IQ.CpqTableEntryId
				JOIN PRPRBM (NOLOCK) ON PRPRBM.EQUIPMENT_NUMBER = IQ.EQUIPMENT_NUMBER AND PRPRBM.SERVICE_PRODUCT_NAME = IQ.SERVICE_PRODUCT_NAME AND PRPRBM.SERIAL_NUMBER = IQ.SERIAL_NUMBER AND PRPRBM.CONTRACT_START_DATE = IQ.CONTRACT_START_DATE
				WHERE SAQICO.QUOTE_RECORD_ID = '{QuoteRecordId}' AND SAQICO.QTEREV_RECORD_ID = '{QuoteRevisionRecordId}'					
				""".format(QuoteRecordId=contract_quote_record_id,QuoteRevisionRecordId=contract_quote_revision_record_id))
		
		Sql.RunQuery("""UPDATE SAQICO
				SET
				SAQICO.BCHPGC = PRPRBM.ANNUALIZED_BOOKING_PRICE,
				SAQICO.BCHDPT = ((SAQICO.TNTVGC - ISNULL(PRPRBM.ANNUALIZED_BOOKING_PRICE,0))/SAQICO.TNTVGC) * 100
				FROM SAQICO	(NOLOCK)
				JOIN (
					SELECT SAQICO.CpqTableEntryId, MAX(PRPRBM.CONTRACT_START_DATE) AS CONTRACT_START_DATE, PRPRBM.SERVICE_PRODUCT_NAME,
							PRPRBM.TOOLCONFG
					FROM SAQICO (NOLOCK)
					JOIN PRPRBM (NOLOCK) ON PRPRBM.TOOLCONFG = SAQICO.TOLCFG AND PRPRBM.SERVICE_PRODUCT_NAME = SAQICO.SERVICE_ID
					WHERE SAQICO.QUOTE_RECORD_ID = '{QuoteRecordId}' AND SAQICO.QTEREV_RECORD_ID = '{QuoteRevisionRecordId}'
					GROUP BY PRPRBM.SERVICE_PRODUCT_NAME, PRPRBM.TOOLCONFG, SAQICO.CpqTableEntryId
				)AS IQ ON SAQICO.CpqTableEntryId = IQ.CpqTableEntryId
				JOIN PRPRBM (NOLOCK) ON PRPRBM.TOOLCONFG = IQ.TOOLCONFG AND PRPRBM.SERVICE_PRODUCT_NAME = IQ.SERVICE_PRODUCT_NAME AND PRPRBM.CONTRACT_START_DATE = IQ.CONTRACT_START_DATE		
				WHERE SAQICO.QUOTE_RECORD_ID = '{QuoteRecordId}' AND SAQICO.QTEREV_RECORD_ID = '{QuoteRevisionRecordId}' AND ISNULL(SAQICO.BCHPGC,'')	= ''					
				""".format(QuoteRecordId=contract_quote_record_id,QuoteRevisionRecordId=contract_quote_revision_record_id))
		
		Sql.RunQuery("""UPDATE SAQICO
			SET
			SAQICO.BMPPDA = CASE WHEN ISNULL(BCHDPT,0) > ISNULL(BCHDAP,0) THEN 1 ELSE 0 END
			FROM SAQICO	(NOLOCK)			
			WHERE SAQICO.QUOTE_RECORD_ID = '{QuoteRecordId}' AND SAQICO.QTEREV_RECORD_ID = '{QuoteRevisionRecordId}'			
			""".format(QuoteRecordId=contract_quote_record_id,QuoteRevisionRecordId=contract_quote_revision_record_id))
		# Price Bench Marking - End
	if pricing_offering:
		pricing_offering = pricing_offering + ('Z0123',)
	if manual_pricing != 'True':
		where_condition = " AND SAQRIT.SERVICE_ID IN {pricing_offering}".format(pricing_offering =pricing_offering)
	##updating saqrit
	Sql.RunQuery("""UPDATE SAQRIT 
					SET NET_VALUE_INGL_CURR = IQ.NET_VALUE_INGL_CURR,
					NET_VALUE = IQ.NET_VALUE,
					TAX_AMOUNT_INGL_CURR = IQ.TAX_AMOUNT_INGL_CURR,
					TAX_AMOUNT = IQ.TAX_AMOUNT,
					ESTIMATED_VALUE = IQ.ESTIMATED_VALUE,
					ESTVAL_INGL_CURR = IQ.ESTVAL_INGL_CURR,
					TOTAL_AMOUNT_INGL_CURR = IQ.TOTAL_AMOUNT_INGL_CURR,
					TOTAL_AMOUNT = IQ.TOTAL_AMOUNT,
					TOTAL_MARGIN = IQ.TOTAL_MARGIN,
					STATUS = 'ACQUIRED' 
					FROM SAQRIT
						INNER JOIN (SELECT SAQICO.QUOTE_RECORD_ID, SAQICO.QTEREV_RECORD_ID,SAQICO.SERVICE_ID,SAQICO.GRNBOK,SAQICO.EQUIPMENT_ID,SAQICO.LINE,
								SUM(ISNULL(SAQICO.TNTVGC, 0)) as NET_VALUE_INGL_CURR,
								SUM(ISNULL(SAQICO.TNTVDC, 0)) as NET_VALUE,
								SUM(ISNULL(SAQICO.TAXVGC, 0)) as TAX_AMOUNT_INGL_CURR,
								SUM(ISNULL(SAQICO.TAXVDC, 0)) as TAX_AMOUNT,
								SUM(ISNULL(SAQICO.TENVDC, 0)) as ESTIMATED_VALUE,
								SUM(ISNULL(SAQICO.TENVGC, 0)) as ESTVAL_INGL_CURR,
								SUM(ISNULL(SAQICO.TAMTGC, 0)) as TOTAL_AMOUNT_INGL_CURR,
								SUM(ISNULL(SAQICO.TAMTDC, 0)) as TOTAL_AMOUNT,
								SUM(ISNULL(SAQICO.CNTMGN, 0)) as TOTAL_MARGIN
								FROM SAQICO WHERE SAQICO.QUOTE_RECORD_ID = '{QuoteRecordId}' AND SAQICO.QTEREV_RECORD_ID = '{rev}'  GROUP BY SAQICO.QUOTE_RECORD_ID, SAQICO.QTEREV_RECORD_ID,SAQICO.SERVICE_ID,SAQICO.GRNBOK,SAQICO.EQUIPMENT_ID, SAQICO.LINE
								) IQ ON SAQRIT.QUOTE_RECORD_ID = IQ.QUOTE_RECORD_ID AND SAQRIT.QTEREV_RECORD_ID = IQ.QTEREV_RECORD_ID AND SAQRIT.SERVICE_ID = IQ.SERVICE_ID AND IQ.GRNBOK = SAQRIT.GREENBOOK AND ISNULL(IQ.EQUIPMENT_ID,'') = ISNULL(SAQRIT.EQUIPMENT_ID,'') AND SAQRIT.LINE = IQ.LINE
							WHERE SAQRIT.QUOTE_RECORD_ID = '{QuoteRecordId}' AND SAQRIT.QTEREV_RECORD_ID='{rev}' {where_condition}  """.format( QuoteRecordId= contract_quote_record_id ,rev =contract_quote_revision_record_id,where_condition=where_condition))
	
	##year field update for cpq pricing
	#if manual_pricing != 'True':
	Sql.RunQuery("""UPDATE SAQRIT 
	SET YEAR_1 = CASE WHEN SAQRIT.BILLING_TYPE = 'Variable' THEN SAQICO.TENVDC ELSE SAQICO.TNTVDC END,
	YEAR_1_INGL_CURR =  CASE WHEN SAQRIT.BILLING_TYPE = 'Variable' THEN SAQICO.TENVGC ELSE SAQICO.TNTVGC END 
	FROM SAQRIT (NOLOCK) 
		INNER JOIN SAQICO ON SAQRIT.QUOTE_RECORD_ID = SAQICO.QUOTE_RECORD_ID AND SAQRIT.QTEREV_RECORD_ID = SAQICO.QTEREV_RECORD_ID AND  SAQRIT.SERVICE_ID = SAQICO.SERVICE_ID AND SAQRIT.GREENBOOK = SAQICO.GRNBOK AND CNTYER = 'YEAR 1'  AND SAQRIT.LINE = SAQICO.LINE
	WHERE  SAQRIT.QUOTE_RECORD_ID = '{quote_rec_id}' AND SAQRIT.QTEREV_RECORD_ID = '{quote_revision_rec_id}' AND SAQRIT.SERVICE_ID IN {pricing_offering} AND CNTYER = 'YEAR 1' """.format(quote_rec_id = contract_quote_record_id ,quote_revision_rec_id = contract_quote_revision_record_id,pricing_offering=pricing_offering  ))

	Sql.RunQuery("""UPDATE SAQRIT 
	SET YEAR_2 = CASE WHEN SAQRIT.BILLING_TYPE = 'Variable' THEN SAQICO.TENVDC ELSE SAQICO.TNTVDC END,
	YEAR_2_INGL_CURR =  CASE WHEN SAQRIT.BILLING_TYPE = 'Variable' THEN SAQICO.TENVGC ELSE SAQICO.TNTVGC END 
	FROM SAQRIT (NOLOCK) 
		INNER JOIN SAQICO ON SAQRIT.QUOTE_RECORD_ID = SAQICO.QUOTE_RECORD_ID AND SAQRIT.QTEREV_RECORD_ID = SAQICO.QTEREV_RECORD_ID AND  SAQRIT.SERVICE_ID = SAQICO.SERVICE_ID AND SAQRIT.GREENBOOK = SAQICO.GRNBOK AND CNTYER = 'YEAR 2'  AND SAQRIT.LINE = SAQICO.LINE
	WHERE  SAQRIT.QUOTE_RECORD_ID = '{quote_rec_id}' AND SAQRIT.QTEREV_RECORD_ID = '{quote_revision_rec_id}' AND SAQRIT.SERVICE_ID IN {pricing_offering} AND CNTYER = 'YEAR 2' """.format(quote_rec_id = contract_quote_record_id ,quote_revision_rec_id = contract_quote_revision_record_id ,pricing_offering=pricing_offering ))

	Sql.RunQuery("""UPDATE SAQRIT 
	SET YEAR_3 = CASE WHEN SAQRIT.BILLING_TYPE = 'Variable' THEN SAQICO.TENVDC ELSE SAQICO.TNTVDC END,
	YEAR_3_INGL_CURR =  CASE WHEN SAQRIT.BILLING_TYPE = 'Variable' THEN SAQICO.TENVGC ELSE SAQICO.TNTVGC END 
	FROM SAQRIT (NOLOCK) 
		INNER JOIN SAQICO ON SAQRIT.QUOTE_RECORD_ID = SAQICO.QUOTE_RECORD_ID AND SAQRIT.QTEREV_RECORD_ID = SAQICO.QTEREV_RECORD_ID AND  SAQRIT.SERVICE_ID = SAQICO.SERVICE_ID AND SAQRIT.GREENBOOK = SAQICO.GRNBOK AND CNTYER = 'YEAR 3'  AND SAQRIT.LINE = SAQICO.LINE
	WHERE  SAQRIT.QUOTE_RECORD_ID = '{quote_rec_id}' AND SAQRIT.QTEREV_RECORD_ID = '{quote_revision_rec_id}' AND SAQRIT.SERVICE_ID IN {pricing_offering} AND CNTYER = 'YEAR 3' """.format(quote_rec_id = contract_quote_record_id ,quote_revision_rec_id = contract_quote_revision_record_id,pricing_offering=pricing_offering  ))

	Sql.RunQuery("""UPDATE SAQRIT 
	SET YEAR_4 = CASE WHEN SAQRIT.BILLING_TYPE = 'Variable' THEN SAQICO.TENVDC ELSE SAQICO.TNTVDC END,
	YEAR_4_INGL_CURR =  CASE WHEN SAQRIT.BILLING_TYPE = 'Variable' THEN SAQICO.TENVGC ELSE SAQICO.TNTVGC END 
	FROM SAQRIT (NOLOCK) 
		INNER JOIN SAQICO ON SAQRIT.QUOTE_RECORD_ID = SAQICO.QUOTE_RECORD_ID AND SAQRIT.QTEREV_RECORD_ID = SAQICO.QTEREV_RECORD_ID AND  SAQRIT.SERVICE_ID = SAQICO.SERVICE_ID AND SAQRIT.GREENBOOK = SAQICO.GRNBOK AND CNTYER = 'YEAR 4'  AND SAQRIT.LINE = SAQICO.LINE
	WHERE  SAQRIT.QUOTE_RECORD_ID = '{quote_rec_id}' AND SAQRIT.QTEREV_RECORD_ID = '{quote_revision_rec_id}' AND SAQRIT.SERVICE_ID IN {pricing_offering} AND CNTYER = 'YEAR 4' """.format(quote_rec_id = contract_quote_record_id ,quote_revision_rec_id = contract_quote_revision_record_id ,pricing_offering=pricing_offering ))

	Sql.RunQuery("""UPDATE SAQRIT 
	SET YEAR_5 = CASE WHEN SAQRIT.BILLING_TYPE = 'Variable' THEN SAQICO.TENVDC ELSE SAQICO.TNTVDC END,
	YEAR_5_INGL_CURR =  CASE WHEN SAQRIT.BILLING_TYPE = 'Variable' THEN SAQICO.TENVGC ELSE SAQICO.TNTVGC END 
	FROM SAQRIT (NOLOCK) 
		INNER JOIN SAQICO ON SAQRIT.QUOTE_RECORD_ID = SAQICO.QUOTE_RECORD_ID AND SAQRIT.QTEREV_RECORD_ID = SAQICO.QTEREV_RECORD_ID AND  SAQRIT.SERVICE_ID = SAQICO.SERVICE_ID AND SAQRIT.GREENBOOK = SAQICO.GRNBOK AND CNTYER = 'YEAR 5'  AND SAQRIT.LINE = SAQICO.LINE
	WHERE  SAQRIT.QUOTE_RECORD_ID = '{quote_rec_id}' AND SAQRIT.QTEREV_RECORD_ID = '{quote_revision_rec_id}' AND SAQRIT.SERVICE_ID IN {pricing_offering} AND CNTYER = 'YEAR 5' """.format(quote_rec_id = contract_quote_record_id ,quote_revision_rec_id = contract_quote_revision_record_id,pricing_offering=pricing_offering  ))

	##decimal rounding for SAQICO
	#global currency
	Sql.RunQuery("""UPDATE SAQICO 
					SET CNTMGN = IQ.CNTMGN,
						INMP01 = IQ.INMP01,
						INMP02 = IQ.INMP02,
						FNMDPR = IQ.FNMDPR,
						MTGPRC = IQ.MTGPRC,
						MSLPRC = IQ.MSLPRC,
						MBDPRC = IQ.MBDPRC,
						MCLPRC = IQ.MCLPRC,
						TRGPRC = IQ.TRGPRC,
						SLSPRC = IQ.SLSPRC,
						BDVPRC = IQ.BDVPRC,
						CELPRC = IQ.CELPRC,
						USRPRC = IQ.USRPRC,
						CNTPRC = IQ.CNTPRC,
						CNTCST = IQ.CNTCST,
						SPCTPR = IQ.SPCTPR,
						SPCTCS = IQ.SPCTCS,
						TNTVGC = IQ.TNTVGC,
						TNTMGC = IQ.TNTMGC,
						TENVGC = IQ.TENVGC,
						TAXVGC = IQ.TAXVGC,
						TAMTGC = IQ.TAMTGC,
						TNTVDC = IQ.TNTVDC,
						TAXVDC = IQ.TAXVDC,
						TAMTDC = IQ.TAMTDC
					FROM SAQICO
						INNER JOIN 
							(SELECT SAQICO.QUOTE_RECORD_ID, SAQICO.QTEREV_RECORD_ID,SAQICO.SERVICE_ID,SAQICO.CpqTableEntryId ,
							ROUND(ISNULL(CNTMGN,0),CONVERT(NUMERIC,ISNULL(PRCURR.ROUNDING_DECIMAL_PLACES,5)) ) as CNTMGN,
							ROUND(ISNULL(INMP01,0),CONVERT(NUMERIC,ISNULL(PRCURR.ROUNDING_DECIMAL_PLACES,5)) ) as INMP01,
							ROUND(ISNULL(INMP02,0),CONVERT(NUMERIC,ISNULL(PRCURR.ROUNDING_DECIMAL_PLACES,5)) ) as INMP02,
							ROUND(ISNULL(FNMDPR,0),CONVERT(NUMERIC,ISNULL(PRCURR.ROUNDING_DECIMAL_PLACES,5)) ) as FNMDPR,
							ROUND(ISNULL(MTGPRC,0),CONVERT(NUMERIC,ISNULL(PRCURR.ROUNDING_DECIMAL_PLACES,5)) ) as MTGPRC,
							ROUND(ISNULL(MSLPRC,0),CONVERT(NUMERIC,ISNULL(PRCURR.ROUNDING_DECIMAL_PLACES,5)) ) as MSLPRC,
							ROUND(ISNULL(MBDPRC,0),CONVERT(NUMERIC,ISNULL(PRCURR.ROUNDING_DECIMAL_PLACES,5)) ) as MBDPRC,
							ROUND(ISNULL(MCLPRC,0),CONVERT(NUMERIC,ISNULL(PRCURR.ROUNDING_DECIMAL_PLACES,5)) ) as MCLPRC,
							ROUND(ISNULL(TRGPRC,0),CONVERT(NUMERIC,ISNULL(PRCURR.ROUNDING_DECIMAL_PLACES,5)) ) as TRGPRC,
							ROUND(ISNULL(SLSPRC,0),CONVERT(NUMERIC,ISNULL(PRCURR.ROUNDING_DECIMAL_PLACES,5)) ) as SLSPRC,
							ROUND(ISNULL(BDVPRC,0),CONVERT(NUMERIC,ISNULL(PRCURR.ROUNDING_DECIMAL_PLACES,5)) ) as BDVPRC,
							ROUND(ISNULL(CELPRC,0),CONVERT(NUMERIC,ISNULL(PRCURR.ROUNDING_DECIMAL_PLACES,5)) ) as CELPRC,
							ROUND(ISNULL(USRPRC,0),CONVERT(NUMERIC,ISNULL(PRCURR.ROUNDING_DECIMAL_PLACES,5)) ) as USRPRC,
							ROUND(ISNULL(CNTCST,0),CONVERT(NUMERIC,ISNULL(PRCURR.ROUNDING_DECIMAL_PLACES,5)) ) as CNTCST,
							ROUND(ISNULL(CNTPRC,0),CONVERT(NUMERIC,ISNULL(PRCURR.ROUNDING_DECIMAL_PLACES,5)) ) as CNTPRC,
							ROUND(ISNULL(SPCTPR,0),CONVERT(NUMERIC,ISNULL(PRCURR.ROUNDING_DECIMAL_PLACES,5)) ) as SPCTPR,
							ROUND(ISNULL(SPCTCS,0),CONVERT(NUMERIC,ISNULL(PRCURR.ROUNDING_DECIMAL_PLACES,5)) ) as SPCTCS,
							ROUND(ISNULL(TNTVGC,0),CONVERT(NUMERIC,ISNULL(PRCURR.ROUNDING_DECIMAL_PLACES,5)) ) as TNTVGC,
							ROUND(ISNULL(TNTMGC,0),CONVERT(NUMERIC,ISNULL(PRCURR.ROUNDING_DECIMAL_PLACES,5)) ) as TNTMGC,
							ROUND(ISNULL(TENVGC,0),CONVERT(NUMERIC,ISNULL(PRCURR.ROUNDING_DECIMAL_PLACES,5)) ) as TENVGC,
							ROUND(ISNULL(TAXVGC,0),CONVERT(NUMERIC,ISNULL(PRCURR.ROUNDING_DECIMAL_PLACES,5)) ) as TAXVGC,
							ROUND(ISNULL(TAMTGC,0),CONVERT(NUMERIC,ISNULL(PRCURR.ROUNDING_DECIMAL_PLACES,5)) ) as TAMTGC,
							ROUND(ISNULL(TNTVDC,0),CONVERT(NUMERIC,ISNULL(PRCURR.ROUNDING_DECIMAL_PLACES,5)) ) as TNTVDC,
							ROUND(ISNULL(TAXVDC,0),CONVERT(NUMERIC,ISNULL(PRCURR.ROUNDING_DECIMAL_PLACES,5)) ) as TAXVDC,
							ROUND(ISNULL(TAMTDC,0),CONVERT(NUMERIC,ISNULL(PRCURR.ROUNDING_DECIMAL_PLACES,5)) ) as TAMTDC
							FROM SAQICO 
								INNER JOIN PRCURR ON GLOBAL_CURRENCY_RECORD_ID = CURRENCY_RECORD_ID AND CURRENCY = GLOBAL_CURRENCY
								WHERE SAQICO.QUOTE_RECORD_ID = '{QuoteRecordId}' AND SAQICO.QTEREV_RECORD_ID = '{rev}' 
							) IQ ON SAQICO.QUOTE_RECORD_ID = IQ.QUOTE_RECORD_ID AND SAQICO.QTEREV_RECORD_ID = IQ.QTEREV_RECORD_ID AND SAQICO.SERVICE_ID = IQ.SERVICE_ID AND SAQICO.CpqTableEntryId = IQ.CpqTableEntryId 
						WHERE SAQICO.QUOTE_RECORD_ID = '{QuoteRecordId}' AND SAQICO.QTEREV_RECORD_ID='{rev}' """.format( QuoteRecordId= contract_quote_record_id ,rev =contract_quote_revision_record_id))


	
	##deciaml rounding for SAQRIT
	##global currency
	Sql.RunQuery("""UPDATE SAQRIT 
					SET TAX_AMOUNT_INGL_CURR = IQ.TAX_AMOUNT_INGL_CURR,
						NET_PRICE_INGL_CURR = IQ.NET_PRICE_INGL_CURR,
						COMVAL_INGL_CURR = IQ.COMVAL_INGL_CURR,
						ESTVAL_INGL_CURR = IQ.ESTVAL_INGL_CURR,
						NET_VALUE_INGL_CURR = IQ.NET_VALUE_INGL_CURR,
						UNIT_PRICE_INGL_CURR = IQ.UNIT_PRICE_INGL_CURR,
						YEAR_1_INGL_CURR = IQ.YEAR_1_INGL_CURR,
						YEAR_2_INGL_CURR = IQ.YEAR_2_INGL_CURR,
						YEAR_3_INGL_CURR = IQ.YEAR_3_INGL_CURR,
						YEAR_4_INGL_CURR = IQ.YEAR_4_INGL_CURR,
						YEAR_5_INGL_CURR = IQ.YEAR_5_INGL_CURR,
						TOTAL_AMOUNT_INGL_CURR = IQ.TOTAL_AMOUNT_INGL_CURR,
						PEREVTCST_INGL_CURR = IQ.PEREVTCST_INGL_CURR,
						PEREVTPRC_INGL_CURR = IQ.PEREVTPRC_INGL_CURR
					FROM SAQRIT
						INNER JOIN 
							(SELECT SAQRIT.QUOTE_RECORD_ID, SAQRIT.QTEREV_RECORD_ID,SAQRIT.SERVICE_ID,SAQRIT.LINE,SAQRIT.CpqTableEntryId,
							ROUND(ISNULL(TAX_AMOUNT_INGL_CURR,0),CONVERT(NUMERIC,ISNULL(PRCURR.ROUNDING_DECIMAL_PLACES,5)) ) as TAX_AMOUNT_INGL_CURR,
							ROUND(ISNULL(NET_PRICE_INGL_CURR,0),CONVERT(NUMERIC,ISNULL(PRCURR.ROUNDING_DECIMAL_PLACES,5)) ) as NET_PRICE_INGL_CURR,
							ROUND(ISNULL(COMVAL_INGL_CURR,0),CONVERT(NUMERIC,ISNULL(PRCURR.ROUNDING_DECIMAL_PLACES,5)) ) as COMVAL_INGL_CURR,
							ROUND(ISNULL(ESTVAL_INGL_CURR,0),CONVERT(NUMERIC,ISNULL(PRCURR.ROUNDING_DECIMAL_PLACES,5)) ) as ESTVAL_INGL_CURR,
							ROUND(ISNULL(NET_VALUE_INGL_CURR,0),CONVERT(NUMERIC,ISNULL(PRCURR.ROUNDING_DECIMAL_PLACES,5)) ) as NET_VALUE_INGL_CURR,
							ROUND(ISNULL(UNIT_PRICE_INGL_CURR,0),CONVERT(NUMERIC,ISNULL(PRCURR.ROUNDING_DECIMAL_PLACES,5)) ) as UNIT_PRICE_INGL_CURR,
							ROUND(ISNULL(YEAR_1_INGL_CURR,0),CONVERT(NUMERIC,ISNULL(PRCURR.ROUNDING_DECIMAL_PLACES,5)) ) as YEAR_1_INGL_CURR,
							ROUND(ISNULL(YEAR_2_INGL_CURR,0),CONVERT(NUMERIC,ISNULL(PRCURR.ROUNDING_DECIMAL_PLACES,5)) ) as YEAR_2_INGL_CURR,
							ROUND(ISNULL(YEAR_3_INGL_CURR,0),CONVERT(NUMERIC,ISNULL(PRCURR.ROUNDING_DECIMAL_PLACES,5)) ) as YEAR_3_INGL_CURR,
							ROUND(ISNULL(YEAR_4_INGL_CURR,0),CONVERT(NUMERIC,ISNULL(PRCURR.ROUNDING_DECIMAL_PLACES,5)) ) as YEAR_4_INGL_CURR,
							ROUND(ISNULL(YEAR_5_INGL_CURR,0),CONVERT(NUMERIC,ISNULL(PRCURR.ROUNDING_DECIMAL_PLACES,5)) ) as YEAR_5_INGL_CURR,
							ROUND(ISNULL(TOTAL_AMOUNT_INGL_CURR,0),CONVERT(NUMERIC,ISNULL(PRCURR.ROUNDING_DECIMAL_PLACES,5)) ) as TOTAL_AMOUNT_INGL_CURR,
							ROUND(ISNULL(PEREVTCST_INGL_CURR,0),CONVERT(NUMERIC,ISNULL(PRCURR.ROUNDING_DECIMAL_PLACES,5)) ) as PEREVTCST_INGL_CURR,
							ROUND(ISNULL(PEREVTPRC_INGL_CURR,0),CONVERT(NUMERIC,ISNULL(PRCURR.ROUNDING_DECIMAL_PLACES,5)) ) as PEREVTPRC_INGL_CURR
							FROM SAQRIT 
								INNER JOIN PRCURR ON GLOBAL_CURRENCY_RECORD_ID = CURRENCY_RECORD_ID AND CURRENCY = GLOBAL_CURRENCY
								WHERE SAQRIT.QUOTE_RECORD_ID = '{QuoteRecordId}' AND SAQRIT.QTEREV_RECORD_ID = '{rev}' 
							) IQ ON SAQRIT.QUOTE_RECORD_ID = IQ.QUOTE_RECORD_ID AND SAQRIT.QTEREV_RECORD_ID = IQ.QTEREV_RECORD_ID AND SAQRIT.SERVICE_ID = IQ.SERVICE_ID AND SAQRIT.LINE = IQ.LINE AND SAQRIT.CpqTableEntryId = IQ.CpqTableEntryId
						WHERE SAQRIT.QUOTE_RECORD_ID = '{QuoteRecordId}' AND SAQRIT.QTEREV_RECORD_ID='{rev}' """.format( QuoteRecordId= contract_quote_record_id ,rev =contract_quote_revision_record_id))

	##doc currency
	Sql.RunQuery("""UPDATE SAQRIT 
					SET TAX_AMOUNT = IQ.TAX_AMOUNT,
						NET_PRICE = IQ.NET_PRICE,
						COMMITTED_VALUE = IQ.COMMITTED_VALUE,
						ESTIMATED_VALUE = IQ.ESTIMATED_VALUE,
						NET_VALUE = IQ.NET_VALUE,
						UNIT_PRICE = IQ.UNIT_PRICE,
						YEAR_1 = IQ.YEAR_1,
						YEAR_2 = IQ.YEAR_2,
						YEAR_3 = IQ.YEAR_3,
						YEAR_4 = IQ.YEAR_4,
						YEAR_5 = IQ.YEAR_5,
						TOTAL_AMOUNT = IQ.TOTAL_AMOUNT,
						PEREVTCST_INDT_CURR = IQ.PEREVTCST_INDT_CURR,
						PEREVTPRC_INDT_CURR = IQ.PEREVTPRC_INDT_CURR
					FROM SAQRIT (NOLOCK)
						INNER JOIN 
							(SELECT SAQRIT.QUOTE_RECORD_ID, SAQRIT.QTEREV_RECORD_ID,SAQRIT.SERVICE_ID,SAQRIT.LINE,SAQRIT.CpqTableEntryId,
							ROUND(ISNULL(TAX_AMOUNT,0),CONVERT(NUMERIC,ISNULL(PRCURR.ROUNDING_DECIMAL_PLACES,5)) ) as TAX_AMOUNT,
							ROUND(ISNULL(NET_PRICE,0),CONVERT(NUMERIC,ISNULL(PRCURR.ROUNDING_DECIMAL_PLACES,5)) ) as NET_PRICE,
							ROUND(ISNULL(COMMITTED_VALUE,0),CONVERT(NUMERIC,ISNULL(PRCURR.ROUNDING_DECIMAL_PLACES,5)) ) as COMMITTED_VALUE,
							ROUND(ISNULL(ESTIMATED_VALUE,0),CONVERT(NUMERIC,ISNULL(PRCURR.ROUNDING_DECIMAL_PLACES,5)) ) as ESTIMATED_VALUE,
							ROUND(ISNULL(NET_VALUE,0),CONVERT(NUMERIC,ISNULL(PRCURR.ROUNDING_DECIMAL_PLACES,5)) ) as NET_VALUE,
							ROUND(ISNULL(UNIT_PRICE,0),CONVERT(NUMERIC,ISNULL(PRCURR.ROUNDING_DECIMAL_PLACES,5)) ) as UNIT_PRICE,
							ROUND(ISNULL(YEAR_1,0),CONVERT(NUMERIC,ISNULL(PRCURR.ROUNDING_DECIMAL_PLACES,5)) ) as YEAR_1,
							ROUND(ISNULL(YEAR_2,0),CONVERT(NUMERIC,ISNULL(PRCURR.ROUNDING_DECIMAL_PLACES,5)) ) as YEAR_2,
							ROUND(ISNULL(YEAR_3,0),CONVERT(NUMERIC,ISNULL(PRCURR.ROUNDING_DECIMAL_PLACES,5)) ) as YEAR_3,
							ROUND(ISNULL(YEAR_4,0),CONVERT(NUMERIC,ISNULL(PRCURR.ROUNDING_DECIMAL_PLACES,5)) ) as YEAR_4,
							ROUND(ISNULL(YEAR_5,0),CONVERT(NUMERIC,ISNULL(PRCURR.ROUNDING_DECIMAL_PLACES,5)) ) as YEAR_5,
							ROUND(ISNULL(TOTAL_AMOUNT,0),CONVERT(NUMERIC,ISNULL(PRCURR.ROUNDING_DECIMAL_PLACES,5)) ) as TOTAL_AMOUNT,
							ROUND(ISNULL(PEREVTCST_INDT_CURR,0),CONVERT(NUMERIC,ISNULL(PRCURR.ROUNDING_DECIMAL_PLACES,5)) ) as PEREVTCST_INDT_CURR,
							ROUND(ISNULL(PEREVTPRC_INDT_CURR,0),CONVERT(NUMERIC,ISNULL(PRCURR.ROUNDING_DECIMAL_PLACES,5)) ) as PEREVTPRC_INDT_CURR
							FROM SAQRIT (NOLOCK)
								INNER JOIN PRCURR (NOLOCK) ON DOCURR_RECORD_ID = CURRENCY_RECORD_ID AND CURRENCY = DOC_CURRENCY
								WHERE SAQRIT.QUOTE_RECORD_ID = '{QuoteRecordId}' AND SAQRIT.QTEREV_RECORD_ID = '{rev}' 
							) IQ ON SAQRIT.QUOTE_RECORD_ID = IQ.QUOTE_RECORD_ID AND SAQRIT.QTEREV_RECORD_ID = IQ.QTEREV_RECORD_ID AND SAQRIT.SERVICE_ID = IQ.SERVICE_ID and SAQRIT.LINE = IQ.LINE AND SAQRIT.CpqTableEntryId = IQ.CpqTableEntryId
						WHERE SAQRIT.QUOTE_RECORD_ID = '{QuoteRecordId}' AND SAQRIT.QTEREV_RECORD_ID='{rev}' """.format( QuoteRecordId= contract_quote_record_id ,rev =contract_quote_revision_record_id))
					
	##updating saqris
	Sql.RunQuery("""UPDATE SAQRIS 
							SET UNIT_PRICE_INGL_CURR = IQ.UNIT_PRICE_INGL_CURR, 
							NET_PRICE_INGL_CURR=IQ.NET_PRICE_INGL_CURR,
							UNIT_PRICE = IQ.UNIT_PRICE, 
							NET_PRICE=IQ.NET_PRICE, 
							NET_VALUE = IQ.NET_VALUE,
							NET_VALUE_INGL_CURR = IQ.NET_VALUE_INGL_CURR,
							ESTIMATED_VALUE = IQ.ESTIMATED_VALUE,
							ESTVAL_INGL_CURR = IQ.ESTVAL_INGL_CURR,
							COMMITTED_VALUE = IQ.COMMITTED_VALUE,
							TAX_AMOUNT_INGL_CURR = IQ.TAX_AMOUNT_INGL_CURR,
							TAX_AMOUNT = IQ.TAX_AMOUNT,
							TOTAL_AMOUNT = IQ.TOTAL_AMOUNT,
							TOTAL_AMOUNT_INGL_CURR = IQ.TOTAL_AMOUNT_INGL_CURR

							FROM SAQRIS (NOLOCK)
								INNER JOIN (SELECT SAQRIT.QUOTE_RECORD_ID, SAQRIT.QTEREV_RECORD_ID,SAQRIT.SERVICE_ID,
								SUM(ISNULL(SAQRIT.UNIT_PRICE_INGL_CURR, 0)) as UNIT_PRICE_INGL_CURR,
								SUM(ISNULL(SAQRIT.NET_PRICE_INGL_CURR, 0)) as NET_PRICE_INGL_CURR,
								SUM(ISNULL(SAQRIT.UNIT_PRICE, 0)) as UNIT_PRICE,
								SUM(ISNULL(SAQRIT.NET_PRICE, 0)) as NET_PRICE,
								SUM(ISNULL(SAQRIT.NET_VALUE, 0)) as NET_VALUE,
								SUM(ISNULL(SAQRIT.NET_VALUE_INGL_CURR, 0)) as NET_VALUE_INGL_CURR,
								SUM(ISNULL(SAQRIT.ESTIMATED_VALUE, 0)) as ESTIMATED_VALUE,
								SUM(ISNULL(SAQRIT.ESTVAL_INGL_CURR, 0)) as ESTVAL_INGL_CURR,
								SUM(ISNULL(SAQRIT.COMMITTED_VALUE, 0)) as COMMITTED_VALUE,
								SUM(ISNULL(SAQRIT.TAX_AMOUNT_INGL_CURR, 0)) as TAX_AMOUNT_INGL_CURR,
								SUM(ISNULL(SAQRIT.TAX_AMOUNT, 0)) as TAX_AMOUNT,
								SUM(ISNULL(SAQRIT.TOTAL_AMOUNT, 0)) as TOTAL_AMOUNT,
								SUM(ISNULL(SAQRIT.TOTAL_AMOUNT_INGL_CURR, 0)) as TOTAL_AMOUNT_INGL_CURR

								FROM SAQRIT (NOLOCK)
								WHERE SAQRIT.QUOTE_RECORD_ID = '{QuoteRecordId}' AND SAQRIT.QTEREV_RECORD_ID = '{rev}'  GROUP BY SAQRIT.QUOTE_RECORD_ID, SAQRIT.QTEREV_RECORD_ID,SAQRIT.SERVICE_ID) IQ ON SAQRIS.QUOTE_RECORD_ID = IQ.QUOTE_RECORD_ID AND SAQRIS.QTEREV_RECORD_ID = IQ.QTEREV_RECORD_ID AND SAQRIS.SERVICE_ID = IQ.SERVICE_ID
						WHERE SAQRIS.QUOTE_RECORD_ID = '{QuoteRecordId}' AND SAQRIS.QTEREV_RECORD_ID='{rev}' """.format( QuoteRecordId= contract_quote_record_id ,rev =contract_quote_revision_record_id))
						
	##updating quote summary values in saqtrv
	total_credit = 0
	get_credit_val = Sql.GetFirst("""SELECT * FROM SAQRIS (NOLOCK) WHERE QUOTE_RECORD_ID = '{quote_rec_id}' AND QTEREV_RECORD_ID = '{quote_revision_rec_id}' AND SERVICE_ID='Z0116' """.format(quote_rec_id = contract_quote_record_id ,quote_revision_rec_id = contract_quote_revision_record_id ))
	if get_credit_val:
		if get_credit_val.NET_PRICE_INGL_CURR:
			total_credit = get_credit_val.NET_PRICE_INGL_CURR
	##A055S000P01-13894
	'''update_revision_status = Sql.GetFirst("SELECT PRICING_STATUS FROM SAQIFP WHERE QUOTE_RECORD_ID = '{quote_rec_id}' AND QTEREV_RECORD_ID = '{quote_revision_rec_id}' AND PRICING_STATUS = 'ERROR'""".format(quote_rec_id = contract_quote_record_id ,quote_revision_rec_id = contract_quote_revision_record_id))
	rev_status =""
	if update_revision_status:
		rev_status ="CFG-ON HOLD - COSTING"
	else:
		rev_status ="PRR-PRICING"'''
	
	#,SAQTRV.REVISION_STATUS	= '"""+str(rev_status)+"""'
	##updating saqtrv
	Sql.RunQuery("""UPDATE SAQTRV
						SET 
						SAQTRV.TAX_AMOUNT_INGL_CURR = IQ.TAX_AMOUNT_INGL_CURR,						
						SAQTRV.TOTAL_AMOUNT_INGL_CURR = IQ.TOTAL_AMOUNT_INGL_CURR,
						SAQTRV.NET_VALUE_INGL_CURR = IQ.NET_VALUE_INGL_CURR,
						SAQTRV.CREDIT_INGL_CURR	= """+str(total_credit)+""",
						SAQTRV.ESTVAL_INGL_CURR = IQ.ESTVAL_INGL_CURR
						FROM SAQTRV (NOLOCK)
						INNER JOIN (SELECT SAQRIS.QUOTE_RECORD_ID, SAQRIS.QTEREV_RECORD_ID,
									SUM(ISNULL(SAQRIS.TAX_AMOUNT_INGL_CURR, 0)) as TAX_AMOUNT_INGL_CURR,
									SUM(ISNULL(SAQRIS.NET_PRICE_INGL_CURR, 0)) as NET_PRICE_INGL_CURR,
									SUM(ISNULL(SAQRIS.NET_PRICE, 0)) as NET_PRICE,
									SUM(ISNULL(SAQRIS.NET_VALUE, 0)) as NET_VALUE,
									SUM(ISNULL(SAQRIS.NET_VALUE_INGL_CURR, 0)) as NET_VALUE_INGL_CURR,
									SUM(ISNULL(SAQRIS.TAX_AMOUNT, 0)) as TAX_AMOUNT,
									SUM(ISNULL(SAQRIS.TOTAL_AMOUNT_INGL_CURR, 0)) as TOTAL_AMOUNT_INGL_CURR,
									SUM(ISNULL(SAQRIS.ESTVAL_INGL_CURR, 0)) as ESTVAL_INGL_CURR
									FROM SAQRIS (NOLOCK) WHERE SAQRIS.QUOTE_RECORD_ID = '{quote_rec_id}' AND SAQRIS.QTEREV_RECORD_ID = '{quote_revision_rec_id}' AND SERVICE_ID !='Z0117' GROUP BY SAQRIS.QTEREV_RECORD_ID, SAQRIS.QUOTE_RECORD_ID) IQ ON SAQTRV.QUOTE_RECORD_ID = IQ.QUOTE_RECORD_ID AND SAQTRV.QUOTE_REVISION_RECORD_ID = IQ.QTEREV_RECORD_ID
						WHERE SAQTRV.QUOTE_RECORD_ID = '{quote_rec_id}' AND SAQTRV.QUOTE_REVISION_RECORD_ID = '{quote_revision_rec_id}' 	""".format(quote_rec_id = contract_quote_record_id ,quote_revision_rec_id = contract_quote_revision_record_id ) )
	Sql.RunQuery("""UPDATE SAQTRV
						SET 
						SAQTRV.CNTMRG_INGL_CURR = IQ. CNTMRG_INGL_CURR,						
						SAQTRV.TOTAL_MARGIN_PERCENT = IQ. TOTAL_MARGIN_PERCENT
						FROM SAQTRV (NOLOCK)
						INNER JOIN (SELECT SAQICO.QUOTE_RECORD_ID, SAQICO.QTEREV_RECORD_ID,
									SUM(ISNULL(SAQICO.TNTVGC, 0)) - SUM(ISNULL(SAQICO.CNTCST, 0)) as CNTMRG_INGL_CURR,
									(SUM(ISNULL(SAQICO.CNTMGN, 0)) / SUM(ISNULL(SAQICO.TNTVGC, 1))) *100 as TOTAL_MARGIN_PERCENT
									FROM SAQICO (NOLOCK) WHERE SAQICO.QUOTE_RECORD_ID = '{quote_rec_id}' AND SAQICO.QTEREV_RECORD_ID = '{quote_revision_rec_id}' AND SERVICE_ID !='Z0117' GROUP BY SAQICO.QTEREV_RECORD_ID, SAQICO.QUOTE_RECORD_ID) IQ ON SAQTRV.QUOTE_RECORD_ID = IQ.QUOTE_RECORD_ID AND SAQTRV.QUOTE_REVISION_RECORD_ID = IQ.QTEREV_RECORD_ID
						WHERE SAQTRV.QUOTE_RECORD_ID = '{quote_rec_id}' AND SAQTRV.QUOTE_REVISION_RECORD_ID = '{quote_revision_rec_id}' 	""".format(quote_rec_id = contract_quote_record_id ,quote_revision_rec_id = contract_quote_revision_record_id ) )
	_insert_billing_matrix(Qt_id)
	#updating value to quote summary ends
	




# def voucher_amt_update(Qt_id):
# 	get_rev_rec_id = Sql.GetFirst("SELECT QTEREV_RECORD_ID,QUOTE_CURRENCY,MASTER_TABLE_QUOTE_RECORD_ID FROM SAQTMT where QUOTE_ID = '{}'".format(Qt_id))
# 	try:
# 		##updating price for z0117
# 		check_record = Sql.GetFirst("SELECT count(*) as cnt FROM SAQRIT WHERE QUOTE_RECORD_ID = '{quote_rec_id}' AND QTEREV_RECORD_ID = '{quote_revision_rec_id}' AND SERVICE_ID = 'Z0117' AND ISNULL(STATUS,'') = 'ACQUIRING' or ISNULL(STATUS,'') = ''".format(quote_rec_id = get_rev_rec_id.MASTER_TABLE_QUOTE_RECORD_ID ,quote_revision_rec_id = get_rev_rec_id.QTEREV_RECORD_ID) )
# 		if check_record.cnt > 0:
# 			get_greenbook_record = Sql.GetList("SELECT DISTINCT GREENBOOK,ENTITLEMENT_XML,SERVICE_ID,PAR_SERVICE_ID FROM SAQSGE WHERE QUOTE_RECORD_ID = '{quote_rec_id}' AND QTEREV_RECORD_ID = '{quote_revision_rec_id}' AND SERVICE_ID = 'Z0117' ".format(quote_rec_id = get_rev_rec_id.MASTER_TABLE_QUOTE_RECORD_ID ,quote_revision_rec_id = get_rev_rec_id.QTEREV_RECORD_ID))
# 			tag_pattern = re.compile(r'(<QUOTE_ITEM_ENTITLEMENT>[\w\W]*?</QUOTE_ITEM_ENTITLEMENT>)')
# 			entitlement_id_tag_pattern = re.compile(r'<ENTITLEMENT_ID>AGS_Z0117_PQB_VCRAMT</ENTITLEMENT_ID>')
# 			entitlement_display_value_tag_pattern = re.compile(r'<ENTITLEMENT_DISPLAY_VALUE>([^>]*?)</ENTITLEMENT_DISPLAY_VALUE>')
# 			if get_greenbook_record:
# 				for record in get_greenbook_record:
# 					get_voucher_value = ''
# 					for quote_item_tag in re.finditer(tag_pattern, record.ENTITLEMENT_XML):
# 						quote_item_tag_content = quote_item_tag.group(1)
# 						entitlement_id_tag_match = re.findall(entitlement_id_tag_pattern,quote_item_tag_content)	
# 						if entitlement_id_tag_match:
# 							entitlement_display_value_tag_match = re.findall(entitlement_display_value_tag_pattern,quote_item_tag_content)
# 							if entitlement_display_value_tag_match:
# 								get_voucher_value = entitlement_display_value_tag_match[0].upper()
# 								break
# 					Trace.Write("get_voucher_value-"+str(record.GREENBOOK)+"-"+str(get_voucher_value))
# 					Sql.RunQuery("UPDATE SAQICO SET STATUS = 'ACQUIRED', CNTPRI_INGL_CURR = '{voucher_amt}' FROM SAQICO (NOLOCK) WHERE QUOTE_RECORD_ID = '{quote_rec_id}' AND QTEREV_RECORD_ID = '{quote_revision_rec_id}' AND SERVICE_ID = 'Z0117' AND GREENBOOK = '{grnbok}' ".format(quote_rec_id = get_rev_rec_id.MASTER_TABLE_QUOTE_RECORD_ID ,quote_revision_rec_id = get_rev_rec_id.QTEREV_RECORD_ID,voucher_amt = get_voucher_value,grnbok = record.GREENBOOK  ))
			
# 					Sql.RunQuery("""UPDATE SAQRIT 
# 						SET 
# 						YEAR_1 = '{voucher_amt}',
# 						YEAR_1_INGL_CURR = '{voucher_amt}'
# 					FROM SAQRIT (NOLOCK) WHERE QUOTE_RECORD_ID = '{quote_rec_id}' AND QTEREV_RECORD_ID = '{quote_revision_rec_id}' AND SERVICE_ID = 'Z0117' AND GREENBOOK = '{grnbok}' """.format(quote_rec_id = get_rev_rec_id.MASTER_TABLE_QUOTE_RECORD_ID ,quote_revision_rec_id = get_rev_rec_id.QTEREV_RECORD_ID,voucher_amt = get_voucher_value,grnbok = record.GREENBOOK  ))
					
# 			Sql.RunQuery("""UPDATE SAQRIT SET YEAR_2 = CNTPRI_INGL_CURR ,YEAR_2_INGL_CURR = CNTPRI_INGL_CURR FROM SAQRIT (NOLOCK) INNER JOIN SAQICO ON SAQRIT.QUOTE_RECORD_ID = SAQICO.QUOTE_RECORD_ID AND SAQRIT.QTEREV_RECORD_ID = SAQICO.QTEREV_RECORD_ID AND  SAQRIT.SERVICE_ID = SAQICO.SERVICE_ID AND SAQRIT.GREENBOOK = SAQICO.GRNBOK AND YEAR = 'YEAR 2' WHERE  SAQRIT.QUOTE_RECORD_ID = '{quote_rec_id}' AND SAQRIT.QTEREV_RECORD_ID = '{quote_revision_rec_id}' AND SAQRIT.SERVICE_ID = 'Z0117' AND YEAR = 'YEAR 2' """.format(quote_rec_id = get_rev_rec_id.MASTER_TABLE_QUOTE_RECORD_ID ,quote_revision_rec_id = get_rev_rec_id.QTEREV_RECORD_ID,voucher_amt = get_voucher_value  ))

# 			Sql.RunQuery("""UPDATE SAQRIT SET YEAR_3 = CNTPRI_INGL_CURR ,YEAR_3_INGL_CURR = CNTPRI_INGL_CURR FROM SAQRIT (NOLOCK) INNER JOIN SAQICO ON SAQRIT.QUOTE_RECORD_ID = SAQICO.QUOTE_RECORD_ID AND SAQRIT.QTEREV_RECORD_ID = SAQICO.QTEREV_RECORD_ID AND  SAQRIT.SERVICE_ID = SAQICO.SERVICE_ID AND SAQRIT.GREENBOOK = SAQICO.GRNBOK AND YEAR = 'YEAR 3' WHERE  SAQRIT.QUOTE_RECORD_ID = '{quote_rec_id}' AND SAQRIT.QTEREV_RECORD_ID = '{quote_revision_rec_id}' AND SAQRIT.SERVICE_ID = 'Z0117'  AND YEAR = 'YEAR 3' """.format(quote_rec_id = get_rev_rec_id.MASTER_TABLE_QUOTE_RECORD_ID ,quote_revision_rec_id = get_rev_rec_id.QTEREV_RECORD_ID,voucher_amt = get_voucher_value  ))

# 			Sql.RunQuery("""UPDATE SAQRIT SET YEAR_4 = CNTPRI_INGL_CURR ,YEAR_4_INGL_CURR = CNTPRI_INGL_CURR FROM SAQRIT (NOLOCK) INNER JOIN SAQICO ON SAQRIT.QUOTE_RECORD_ID = SAQICO.QUOTE_RECORD_ID AND SAQRIT.QTEREV_RECORD_ID = SAQICO.QTEREV_RECORD_ID AND  SAQRIT.SERVICE_ID = SAQICO.SERVICE_ID AND SAQRIT.GREENBOOK = SAQICO.GRNBOK AND YEAR = 'YEAR 4' WHERE  SAQRIT.QUOTE_RECORD_ID = '{quote_rec_id}' AND SAQRIT.QTEREV_RECORD_ID = '{quote_revision_rec_id}' AND SAQRIT.SERVICE_ID = 'Z0117'  AND YEAR = 'YEAR 4' """.format(quote_rec_id = get_rev_rec_id.MASTER_TABLE_QUOTE_RECORD_ID ,quote_revision_rec_id = get_rev_rec_id.QTEREV_RECORD_ID,voucher_amt = get_voucher_value  ))

# 			Sql.RunQuery("""UPDATE SAQRIT SET YEAR_5 = CNTPRI_INGL_CURR ,YEAR_5_INGL_CURR = CNTPRI_INGL_CURR FROM SAQRIT (NOLOCK) INNER JOIN SAQICO ON SAQRIT.QUOTE_RECORD_ID = SAQICO.QUOTE_RECORD_ID AND SAQRIT.QTEREV_RECORD_ID = SAQICO.QTEREV_RECORD_ID AND  SAQRIT.SERVICE_ID = SAQICO.SERVICE_ID AND SAQRIT.GREENBOOK = SAQICO.GRNBOK AND YEAR = 'YEAR 5' WHERE  SAQRIT.QUOTE_RECORD_ID = '{quote_rec_id}' AND SAQRIT.QTEREV_RECORD_ID = '{quote_revision_rec_id}' AND SAQRIT.SERVICE_ID = 'Z0117'  AND YEAR = 'YEAR 5' """.format(quote_rec_id = get_rev_rec_id.MASTER_TABLE_QUOTE_RECORD_ID ,quote_revision_rec_id = get_rev_rec_id.QTEREV_RECORD_ID,voucher_amt = get_voucher_value ))

# 			Sql.RunQuery("""UPDATE SAQRIT SET
# 						NET_PRICE = ISNULL(YEAR_1,0) + ISNULL(YEAR_2,0) + ISNULL(YEAR_3,0) + ISNULL(YEAR_4,0) + ISNULL(YEAR_5,0), 
# 						NET_PRICE_INGL_CURR = ISNULL(YEAR_1_INGL_CURR,0) + ISNULL(YEAR_2_INGL_CURR,0) + ISNULL(YEAR_3_INGL_CURR,0) + ISNULL(YEAR_4_INGL_CURR,0) + ISNULL(YEAR_5_INGL_CURR,0)
# 					FROM SAQRIT (NOLOCK) WHERE QUOTE_RECORD_ID = '{quote_rec_id}' AND QTEREV_RECORD_ID = '{quote_revision_rec_id}' AND SERVICE_ID = 'Z0117'  """.format(quote_rec_id = get_rev_rec_id.MASTER_TABLE_QUOTE_RECORD_ID ,quote_revision_rec_id = get_rev_rec_id.QTEREV_RECORD_ID,voucher_amt = get_voucher_value  ))
			
# 			Sql.RunQuery("""UPDATE SAQRIT 
# 						SET STATUS = 'ACQUIRED', 
# 						NET_VALUE = ISNULL(NET_PRICE, 0) + ISNULL(TAX_AMOUNT,0), 
# 						NET_VALUE_INGL_CURR =ISNULL(NET_PRICE_INGL_CURR, 0) + ISNULL(TAX_AMOUNT, 0)
# 					FROM SAQRIT (NOLOCK) WHERE QUOTE_RECORD_ID = '{quote_rec_id}' AND QTEREV_RECORD_ID = '{quote_revision_rec_id}' AND SERVICE_ID = 'Z0117'  """.format(quote_rec_id = get_rev_rec_id.MASTER_TABLE_QUOTE_RECORD_ID ,quote_revision_rec_id = get_rev_rec_id.QTEREV_RECORD_ID,voucher_amt = get_voucher_value ))



# 	except:
# 		Log.Info("error in voucher")

def quoteitemupdate(Qt_id):
	delete_saqris = Sql.RunQuery("DELETE FROM SAQRIS WHERE QUOTE_ID = '{}'".format(Qt_id))
	delete_saqrit = Sql.RunQuery("DELETE FROM SAQRIT WHERE QUOTE_ID = '{}'".format(Qt_id))
	delete_saqico = Sql.RunQuery("DELETE FROM SAQICO WHERE QUOTE_ID = '{}'".format(Qt_id))
	update_saqtrv = Sql.RunQuery("UPDATE SAQTRV SET TOTAL_AMOUNT_INGL_CURR=NULL, NET_VALUE_INGL_CURR=NULL WHERE QUOTE_ID = '{}'".format(Qt_id))
	_insert_billing_matrix(Qt_id)




def _insert_billing_matrix(Qt_id):
	get_rev_rec_id = Sql.GetFirst("SELECT QTEREV_RECORD_ID,QUOTE_CURRENCY,MASTER_TABLE_QUOTE_RECORD_ID FROM SAQTMT where QUOTE_ID = '{}'".format(Qt_id))
	contract_quote_rec_id = get_rev_rec_id.MASTER_TABLE_QUOTE_RECORD_ID
	quote_revision_rec_id = get_rev_rec_id.QTEREV_RECORD_ID
	Sql.RunQuery("DELETE FROM SAQRIB  WHERE QUOTE_RECORD_ID = '{QuoteRecordId}' AND QTEREV_RECORD_ID = '{RevisionRecordId}'".format(QuoteRecordId= contract_quote_rec_id,RevisionRecordId=quote_revision_rec_id))
	Sql.RunQuery("""
			INSERT SAQRIB (
			QUOTE_BILLING_PLAN_RECORD_ID,
			BILLING_END_DATE,
			BILLING_DAY,
			BILLING_START_DATE,
			QUOTE_ID,
			QUOTE_NAME,
			QUOTE_RECORD_ID,
			QTEREV_ID,
			QTEREV_RECORD_ID,
			CPQTABLEENTRYADDEDBY,
			CPQTABLEENTRYDATEADDED,
			CpqTableEntryModifiedBy,
			CpqTableEntryDateModified,
			SALESORG_ID,
			SALESORG_NAME,
			SALESORG_RECORD_ID,
			PRDOFR_ID,
			PRDOFR_RECORD_ID,
			SERVICE_ID,
			SERVICE_DESCRIPTION,LINE
			) 
			SELECT 
			CONVERT(VARCHAR(4000),NEWID()) as QUOTE_BILLING_PLAN_RECORD_ID,
			SAQTMT.CONTRACT_VALID_TO as BILLING_END_DATE,
			30 as BILLING_DAY,
			SAQTMT.CONTRACT_VALID_FROM as BILLING_START_DATE,
			SAQTMT.QUOTE_ID,
			SAQTMT.QUOTE_NAME,
			SAQTMT.MASTER_TABLE_QUOTE_RECORD_ID as QUOTE_RECORD_ID,
			SAQTMT.QTEREV_ID as QTEREV_ID,
			SAQTMT.QTEREV_RECORD_ID as QTEREV_RECORD_ID,
			'{UserName}' AS CPQTABLEENTRYADDEDBY,
			GETDATE() as CPQTABLEENTRYDATEADDED,
			{UserId} as CpqTableEntryModifiedBy,
			GETDATE() as CpqTableEntryDateModified,
			SAQTSV.SALESORG_ID,
			SAQTSV.SALESORG_NAME,
			SAQTSV.SALESORG_RECORD_ID,
			SAQTSV.SERVICE_ID as PRDOFR_ID,
			SAQTSV.SERVICE_RECORD_ID as PRDOFR_RECORD_ID,
			SAQTSV.SERVICE_ID,
			SAQTSV.SERVICE_DESCRIPTION,SAQRIS.LINE                   
			FROM SAQTMT (NOLOCK) JOIN SAQTSV on SAQTSV.QUOTE_ID = SAQTMT.QUOTE_ID AND SAQTSV.QTEREV_RECORD_ID = SAQTMT.QTEREV_RECORD_ID JOIN SAQRIS on SAQTSV.QUOTE_ID = SAQRIS.QUOTE_ID AND SAQTSV.QTEREV_RECORD_ID = SAQRIS.QTEREV_RECORD_ID
			WHERE SAQTMT.MASTER_TABLE_QUOTE_RECORD_ID = '{QuoteRecordId}' AND SAQTMT.QTEREV_RECORD_ID = '{RevisionRecordId}'
			AND SAQTSV.SERVICE_ID NOT IN ('Z0101','A6200','Z0108','Z0110') AND SAQTSV.SERVICE_ID NOT IN (SELECT PRDOFR_ID FROM SAQRIB (NOLOCK) WHERE QUOTE_RECORD_ID = '{QuoteRecordId}' AND QTEREV_RECORD_ID = '{RevisionRecordId}')
													
	""".format(                        
		QuoteRecordId= contract_quote_rec_id,
		RevisionRecordId=quote_revision_rec_id,
		UserId=User.Id,
		UserName=User.Name
	))
	
	billingmatrix_create()
			
	return True

def insert_item_per_billing(total_months=1, billing_date='',billing_end_date ='', amount_column='YEAR_1', entitlement_obj=None,service_id=None,get_ent_val_type =None,get_ent_billing_type_value=None,get_billling_data_dict=None):
	get_billing_cycle = get_billing_type = ''
	get_rev_rec_id = Sql.GetFirst("SELECT QTEREV_RECORD_ID,QUOTE_CURRENCY,MASTER_TABLE_QUOTE_RECORD_ID FROM SAQTMT where QUOTE_ID = '{}'".format(Qt_id))
	contract_quote_rec_id = get_rev_rec_id.MASTER_TABLE_QUOTE_RECORD_ID
	quote_revision_rec_id = get_rev_rec_id.QTEREV_RECORD_ID
	#Trace.Write(str(service_id)+'--get_billling_data_dict--'+str(get_billling_data_dict))
	#Trace.Write(str(service_id)+'get_ent_val_type--'+str(psyl))
	for data,val in get_billling_data_dict.items():
		if 'AGS_'+str(service_id)+'_PQB_BILCYC' in data:
			get_billing_cycle = val
		elif 'AGS_'+str(service_id)+'_PQB_BILTYP' in data:
			get_billing_type =val
	#Trace.Write('get_billing_cycle---'+str(get_billing_cycle))
	Trace.Write(str(service_id)+'----billing_type---'+str(get_billing_type)+'--CYCLE---'+str(get_billing_cycle))
	if get_billing_cycle == "Monthly":				
		get_val =12
	elif str(get_billing_cycle).upper() == "QUARTERLY":			
		get_val = 4
	elif str(get_billing_cycle).upper() == "ANNUALLY":				
		get_val = 1
	else:				
		get_val =12
	amount_column_split = amount_column.replace('_',' ')
	if service_id == "Z0117":

		get_total_sum  = Sql.GetFirst("SELECT SUM({amount_column}) as estsum FROM SAQRIT WHERE QUOTE_RECORD_ID='{QuoteRecordId}' AND QTEREV_RECORD_ID = '{RevisionRecordId}'  and SERVICE_ID='Z0117'".format(QuoteRecordId=contract_quote_rec_id,
		RevisionRecordId=quote_revision_rec_id,amount_column=amount_column))
		if get_total_sum and str(get_billing_type).upper() == "VARIABLE":
			Sql.RunQuery("""INSERT SAQIBP (
					
					QUOTE_ITEM_BILLING_PLAN_RECORD_ID, BILLING_END_DATE, BILLING_START_DATE,ANNUAL_BILLING_AMOUNT,BILLING_VALUE, BILLING_VALUE_INGL_CURR,BILLING_TYPE,LINE, QUOTE_ID,DOC_CURRENCY, QTEITM_RECORD_ID,COMMITTED_VALUE_INGL_CURR,ESTVAL_INGL_CURR,ESTVAL_INDT_CURR,
					QUOTE_RECORD_ID,QTEREV_ID,QTEREV_RECORD_ID,
					BILLING_DATE, BILLING_YEAR,
					EQUIPMENT_DESCRIPTION, EQUIPMENT_ID, EQUIPMENT_RECORD_ID, QTEITMCOB_RECORD_ID, 
					SERVICE_DESCRIPTION, SERVICE_ID, SERVICE_RECORD_ID, GREENBOOK, GREENBOOK_RECORD_ID, SERIAL_NUMBER, WARRANTY_START_DATE, WARRANTY_END_DATE,CPQTABLEENTRYADDEDBY, CPQTABLEENTRYDATEADDED
				) 
				SELECT 
					CONVERT(VARCHAR(4000),NEWID()) as QUOTE_ITEM_BILLING_PLAN_RECORD_ID,A.* from (SELECT DISTINCT  
					{billing_end_date} as BILLING_END_DATE,
					{BillingDate} as BILLING_START_DATE,
					{amount_column} AS ANNUAL_BILLING_AMOUNT,
					0  as BILLING_VALUE,
					0  as  BILLING_VALUE_INGL_CURR,
					'{billing_type}' as BILLING_TYPE,
					SAQRIT.LINE AS LINE,
					SAQSCO.QUOTE_ID,
					SAQRIT.DOC_CURRENCY AS DOC_CURRENCY,
					SAQRIT.QUOTE_REVISION_CONTRACT_ITEM_ID as QTEITM_RECORD_ID,	
					SAQRIT.COMVAL_INGL_CURR	 as COMMITTED_VALUE_INGL_CURR,
					{amount_column}	as 	ESTVAL_INGL_CURR,
					{amount_column}	as 	ESTVAL_INDT_CURR,		
					SAQSCO.QUOTE_RECORD_ID,
					SAQSCO.QTEREV_ID,
					SAQSCO.QTEREV_RECORD_ID,
					{BillingDate} as BILLING_DATE,						
					'{amount_column_split}' as BILLING_YEAR,
					SAQSCO.EQUIPMENT_DESCRIPTION,
					SAQSCO.EQUIPMENT_ID,									
					SAQSCO.EQUIPMENT_RECORD_ID,						
					'' as QTEITMCOB_RECORD_ID,
					SAQSCO.SERVICE_DESCRIPTION,
					SAQSCO.SERVICE_ID,
					SAQSCO.SERVICE_RECORD_ID, 
					SAQRIT.GREENBOOK  as GREENBOOK,
					SAQRIT.GREENBOOK_RECORD_ID  as  GREENBOOK_RECORD_ID,
					SAQSCO.SERIAL_NO AS SERIAL_NUMBER,
					SAQSCO.WARRANTY_START_DATE,
					SAQSCO.WARRANTY_END_DATE,    
					{UserId} as CPQTABLEENTRYADDEDBY, 
					GETDATE() as CPQTABLEENTRYDATEADDED
					FROM SAQSCO (NOLOCK) JOIN SAQRIT (NOLOCK) ON SAQRIT.QUOTE_RECORD_ID = SAQSCO.QUOTE_RECORD_ID and SAQRIT.QTEREV_RECORD_ID=SAQSCO.QTEREV_RECORD_ID  and SAQRIT.SERVICE_ID = SAQSCO.SERVICE_ID and SAQRIT.OBJECT_ID = SAQSCO.EQUIPMENT_ID and SAQSCO.GREENBOOK = SAQRIT.GREENBOOK LEFT JOIN SAQIBP (NOLOCK) on SAQRIT.QUOTE_RECORD_ID = SAQIBP.QUOTE_RECORD_ID and SAQRIT.QTEREV_RECORD_ID=SAQIBP.QTEREV_RECORD_ID  and SAQRIT.SERVICE_ID = SAQIBP.SERVICE_ID AND
					EXISTS (SELECT * FROM  SAQIBP (NOLOCK) WHERE SAQIBP.ANNUAL_BILLING_AMOUNT <> SAQRIT.NET_PRICE AND SAQRIT.QUOTE_RECORD_ID = SAQIBP.QUOTE_RECORD_ID and SAQRIT.QTEREV_RECORD_ID=SAQIBP.QTEREV_RECORD_ID  and SAQRIT.SERVICE_ID = SAQIBP.SERVICE_ID)
					WHERE SAQSCO.QUOTE_RECORD_ID='{QuoteRecordId}' AND SAQSCO.QTEREV_RECORD_ID = '{RevisionRecordId}' AND SAQSCO.SERVICE_ID ='{service_id}'   and SAQRIT.ESTIMATED_VALUE  IS NOT NULL  AND SAQRIT.OBJECT_ID IS NOT NULL )A """.format(
					UserId=User.Id, QuoteRecordId=contract_quote_rec_id,
					RevisionRecordId=quote_revision_rec_id,billing_end_date=billing_end_date,
					BillingDate=billing_date,
					get_val=get_val,
					service_id = service_id,billing_type =get_billing_type,amount_column=get_total_sum.estsum,amount_column_split=amount_column_split))
			Sql.RunQuery("""INSERT SAQIBP (					
						QUOTE_ITEM_BILLING_PLAN_RECORD_ID, BILLING_END_DATE, BILLING_START_DATE,ANNUAL_BILLING_AMOUNT,BILLING_VALUE, BILLING_VALUE_INGL_CURR,BILLING_TYPE,LINE, QUOTE_ID, QTEITM_RECORD_ID, COMMITTED_VALUE_INGL_CURR,ESTVAL_INGL_CURR,DOC_CURRENCY,ESTVAL_INDT_CURR,
						QUOTE_RECORD_ID,QTEREV_ID,QTEREV_RECORD_ID,
						BILLING_DATE, BILLING_YEAR,
						EQUIPMENT_DESCRIPTION, EQUIPMENT_ID, EQUIPMENT_RECORD_ID, QTEITMCOB_RECORD_ID, 
						SERVICE_DESCRIPTION, SERVICE_ID, SERVICE_RECORD_ID, GREENBOOK, GREENBOOK_RECORD_ID, SERIAL_NUMBER, WARRANTY_START_DATE, WARRANTY_END_DATE,CPQTABLEENTRYADDEDBY, CPQTABLEENTRYDATEADDED
					) 
					SELECT 
						CONVERT(VARCHAR(4000),NEWID()) as QUOTE_ITEM_BILLING_PLAN_RECORD_ID,  
						{billing_end_date} as BILLING_END_DATE,
						{BillingDate} as BILLING_START_DATE,
						{amount_column} AS ANNUAL_BILLING_AMOUNT,
						0  as BILLING_VALUE,
						0  as  BILLING_VALUE_INGL_CURR,
						'{billing_type}' as BILLING_TYPE,
						LINE,
						QUOTE_ID,
						QUOTE_REVISION_CONTRACT_ITEM_ID as QTEITM_RECORD_ID,
						
						COMVAL_INGL_CURR as COMMITTED_VALUE_INGL_CURR,
						{amount_column}	as 	ESTVAL_INGL_CURR,
						DOC_CURRENCY AS DOC_CURRENCY,
						{amount_column}	as 	ESTVAL_INDT_CURR,	
						QUOTE_RECORD_ID,
						QTEREV_ID,
						QTEREV_RECORD_ID,
						{BillingDate} as BILLING_DATE,						
						'{amount_column_split}' as BILLING_YEAR,
						'' as EQUIPMENT_DESCRIPTION,
						'' as EQUIPMENT_ID,									
						'' as EQUIPMENT_RECORD_ID,						
						'' as QTEITMCOB_RECORD_ID,
						SERVICE_DESCRIPTION,
						SERVICE_ID,
						SERVICE_RECORD_ID, 
						GREENBOOK  as GREENBOOK,
						GREENBOOK_RECORD_ID  as GREENBOOK_RECORD_ID,
						'' AS SERIAL_NUMBER,
						'' as WARRANTY_START_DATE,
						'' as WARRANTY_END_DATE,    
						{UserId} as CPQTABLEENTRYADDEDBY, 
						GETDATE() as CPQTABLEENTRYDATEADDED
					FROM  SAQRIT (NOLOCK) 
					WHERE QUOTE_RECORD_ID='{QuoteRecordId}' AND  ESTIMATED_VALUE IS NOT NULL AND QTEREV_RECORD_ID = '{RevisionRecordId}' AND SERVICE_ID ='{service_id}' AND (OBJECT_ID  IS NULL OR OBJECT_ID = '')""".format(
						UserId=User.Id, QuoteRecordId=contract_quote_rec_id,
						RevisionRecordId=quote_revision_rec_id,
						BillingDate=billing_date,billing_end_date=billing_end_date,
						get_val=get_val,
						service_id = service_id,billing_type =get_billing_type,amount_column=amount_column,amount_column_split=amount_column_split))
		else:
			Sql.RunQuery("""INSERT SAQIBP (
					
					QUOTE_ITEM_BILLING_PLAN_RECORD_ID, BILLING_END_DATE, BILLING_START_DATE,ANNUAL_BILLING_AMOUNT,BILLING_VALUE, BILLING_VALUE_INGL_CURR,BILLING_TYPE,LINE, QUOTE_ID,DOC_CURRENCY, QTEITM_RECORD_ID,COMMITTED_VALUE_INGL_CURR,ESTVAL_INGL_CURR,ESTVAL_INDT_CURR,
					QUOTE_RECORD_ID,QTEREV_ID,QTEREV_RECORD_ID,
					BILLING_DATE, BILLING_YEAR,
					EQUIPMENT_DESCRIPTION, EQUIPMENT_ID, EQUIPMENT_RECORD_ID, QTEITMCOB_RECORD_ID, 
					SERVICE_DESCRIPTION, SERVICE_ID, SERVICE_RECORD_ID, GREENBOOK, GREENBOOK_RECORD_ID, SERIAL_NUMBER, WARRANTY_START_DATE, WARRANTY_END_DATE,CPQTABLEENTRYADDEDBY, CPQTABLEENTRYDATEADDED
				) 
				SELECT 
					CONVERT(VARCHAR(4000),NEWID()) as QUOTE_ITEM_BILLING_PLAN_RECORD_ID,A.* from (SELECT DISTINCT  
					{billing_end_date} as BILLING_END_DATE,
					{BillingDate} as BILLING_START_DATE,
					{amount_column} AS ANNUAL_BILLING_AMOUNT,
					{amount_column}  as BILLING_VALUE,
					{amount_column} as  BILLING_VALUE_INGL_CURR,
					'{billing_type}' as BILLING_TYPE,
					SAQRIT.LINE AS LINE,
					SAQSCO.QUOTE_ID,
					SAQRIT.DOC_CURRENCY AS DOC_CURRENCY,
					SAQRIT.QUOTE_REVISION_CONTRACT_ITEM_ID as QTEITM_RECORD_ID,	
					SAQRIT.COMVAL_INGL_CURR	 as COMMITTED_VALUE_INGL_CURR,
					0	as 	ESTVAL_INGL_CURR,
					0	as 	ESTVAL_INDT_CURR,		
					SAQSCO.QUOTE_RECORD_ID,
					SAQSCO.QTEREV_ID,
					SAQSCO.QTEREV_RECORD_ID,
					{BillingDate} as BILLING_DATE,						
					'{amount_column_split}' as BILLING_YEAR,
					SAQSCO.EQUIPMENT_DESCRIPTION,
					SAQSCO.EQUIPMENT_ID,									
					SAQSCO.EQUIPMENT_RECORD_ID,						
					'' as QTEITMCOB_RECORD_ID,
					SAQSCO.SERVICE_DESCRIPTION,
					SAQSCO.SERVICE_ID,
					SAQSCO.SERVICE_RECORD_ID, 
					SAQRIT.GREENBOOK  as GREENBOOK,
					SAQRIT.GREENBOOK_RECORD_ID  as  GREENBOOK_RECORD_ID,
					SAQSCO.SERIAL_NO AS SERIAL_NUMBER,
					SAQSCO.WARRANTY_START_DATE,
					SAQSCO.WARRANTY_END_DATE,    
					{UserId} as CPQTABLEENTRYADDEDBY, 
					GETDATE() as CPQTABLEENTRYDATEADDED
					FROM SAQSCO (NOLOCK) JOIN SAQRIT (NOLOCK) ON SAQRIT.QUOTE_RECORD_ID = SAQSCO.QUOTE_RECORD_ID and SAQRIT.QTEREV_RECORD_ID=SAQSCO.QTEREV_RECORD_ID  and SAQRIT.SERVICE_ID = SAQSCO.SERVICE_ID and SAQRIT.OBJECT_ID = SAQSCO.EQUIPMENT_ID and SAQSCO.GREENBOOK = SAQRIT.GREENBOOK LEFT JOIN SAQIBP (NOLOCK) on SAQRIT.QUOTE_RECORD_ID = SAQIBP.QUOTE_RECORD_ID and SAQRIT.QTEREV_RECORD_ID=SAQIBP.QTEREV_RECORD_ID  and SAQRIT.SERVICE_ID = SAQIBP.SERVICE_ID AND
					EXISTS (SELECT * FROM  SAQIBP (NOLOCK) WHERE SAQIBP.ANNUAL_BILLING_AMOUNT <> SAQRIT.NET_PRICE AND SAQRIT.QUOTE_RECORD_ID = SAQIBP.QUOTE_RECORD_ID and SAQRIT.QTEREV_RECORD_ID=SAQIBP.QTEREV_RECORD_ID  and SAQRIT.SERVICE_ID = SAQIBP.SERVICE_ID)
					WHERE SAQSCO.QUOTE_RECORD_ID='{QuoteRecordId}' AND SAQSCO.QTEREV_RECORD_ID = '{RevisionRecordId}' AND SAQSCO.SERVICE_ID ='{service_id}'   and SAQRIT.ESTIMATED_VALUE  IS NOT NULL  AND SAQRIT.OBJECT_ID IS NOT NULL )A """.format(
					UserId=User.Id, QuoteRecordId=contract_quote_rec_id,
					RevisionRecordId=quote_revision_rec_id,billing_end_date=billing_end_date,
					BillingDate=billing_date,
					get_val=get_val,
					service_id = service_id,billing_type =get_billing_type,amount_column=get_total_sum.estsum,amount_column_split=amount_column_split))
			Sql.RunQuery("""INSERT SAQIBP (					
						QUOTE_ITEM_BILLING_PLAN_RECORD_ID, BILLING_END_DATE, BILLING_START_DATE,ANNUAL_BILLING_AMOUNT,BILLING_VALUE, BILLING_VALUE_INGL_CURR,BILLING_TYPE,LINE, QUOTE_ID, QTEITM_RECORD_ID, COMMITTED_VALUE_INGL_CURR,ESTVAL_INGL_CURR,DOC_CURRENCY,ESTVAL_INDT_CURR,
						QUOTE_RECORD_ID,QTEREV_ID,QTEREV_RECORD_ID,
						BILLING_DATE, BILLING_YEAR,
						EQUIPMENT_DESCRIPTION, EQUIPMENT_ID, EQUIPMENT_RECORD_ID, QTEITMCOB_RECORD_ID, 
						SERVICE_DESCRIPTION, SERVICE_ID, SERVICE_RECORD_ID, GREENBOOK, GREENBOOK_RECORD_ID, SERIAL_NUMBER, WARRANTY_START_DATE, WARRANTY_END_DATE,CPQTABLEENTRYADDEDBY, CPQTABLEENTRYDATEADDED
					) 
					SELECT 
						CONVERT(VARCHAR(4000),NEWID()) as QUOTE_ITEM_BILLING_PLAN_RECORD_ID,  
						{billing_end_date} as BILLING_END_DATE,
						{BillingDate} as BILLING_START_DATE,
						{amount_column} AS ANNUAL_BILLING_AMOUNT,
						{amount_column}  as BILLING_VALUE,
						{amount_column}  as  BILLING_VALUE_INGL_CURR,
						'{billing_type}' as BILLING_TYPE,
						LINE,
						QUOTE_ID,
						QUOTE_REVISION_CONTRACT_ITEM_ID as QTEITM_RECORD_ID,
						
						COMVAL_INGL_CURR as COMMITTED_VALUE_INGL_CURR,
						0 as ESTVAL_INGL_CURR,
						DOC_CURRENCY AS DOC_CURRENCY,
						0 	as 	ESTVAL_INDT_CURR,	
						QUOTE_RECORD_ID,
						QTEREV_ID,
						QTEREV_RECORD_ID,
						{BillingDate} as BILLING_DATE,						
						'{amount_column_split}' as BILLING_YEAR,
						'' as EQUIPMENT_DESCRIPTION,
						'' as EQUIPMENT_ID,									
						'' as EQUIPMENT_RECORD_ID,						
						'' as QTEITMCOB_RECORD_ID,
						SERVICE_DESCRIPTION,
						SERVICE_ID,
						SERVICE_RECORD_ID, 
						GREENBOOK  as GREENBOOK,
						GREENBOOK_RECORD_ID  as GREENBOOK_RECORD_ID,
						'' AS SERIAL_NUMBER,
						'' as WARRANTY_START_DATE,
						'' as WARRANTY_END_DATE,    
						{UserId} as CPQTABLEENTRYADDEDBY, 
						GETDATE() as CPQTABLEENTRYDATEADDED
					FROM  SAQRIT (NOLOCK) 
					WHERE QUOTE_RECORD_ID='{QuoteRecordId}' AND  ESTIMATED_VALUE IS NOT NULL AND QTEREV_RECORD_ID = '{RevisionRecordId}' AND SERVICE_ID ='{service_id}' AND (OBJECT_ID  IS NULL OR OBJECT_ID = '')""".format(
						UserId=User.Id, QuoteRecordId=contract_quote_rec_id,
						RevisionRecordId=quote_revision_rec_id,
						BillingDate=billing_date,billing_end_date=billing_end_date,
						get_val=get_val,
						service_id = service_id,billing_type =get_billing_type,amount_column=amount_column,amount_column_split=amount_column_split))






def fts_zoo7_insert(total_months=1, billing_date='',billing_end_date ='', amount_column='YEAR_1', entitlement_obj=None,service_id=None,get_ent_val_type =None,get_ent_billing_type_value=None,get_billling_data_dict=None,get_milestones_data_dict=None):
	get_billing_cycle = get_billing_type = ''
	get_rev_rec_id = Sql.GetFirst("SELECT QTEREV_RECORD_ID,QUOTE_CURRENCY,MASTER_TABLE_QUOTE_RECORD_ID FROM SAQTMT where QUOTE_ID = '{}'".format(Qt_id))
	Log.Info('755--INSIDE__Z0006--')
	contract_quote_rec_id = get_rev_rec_id.MASTER_TABLE_QUOTE_RECORD_ID
	quote_revision_rec_id = get_rev_rec_id.QTEREV_RECORD_ID
	for data,val in get_billling_data_dict.items():
		if 'AGS_'+str(service_id)+'_PQB_BILCYC' in data:
			get_billing_cycle = val
		elif 'AGS_'+str(service_id)+'_PQB_BILTYP' in data:
			get_billing_type =val
	#Trace.Write('get_billing_cycle---'+str(get_billing_cycle))
	Log.Info(str(service_id)+'-764-----billing_type---'+str(get_billing_type)+'--CYCLE---'+str(get_billing_cycle))
	if get_billing_cycle == "Monthly":				
		get_val =12
	elif str(get_billing_cycle).upper() == "QUARTERLY":			
		get_val = 4
	elif str(get_billing_cycle).upper() == "ANNUALLY":				
		get_val = 1
	else:				
		get_val =12
	amount_column_split = amount_column.replace('_',' ')
	
	get_total_milestons =''			
	for data,val in get_milestones_data_dict.items():
		if 'AGS_Z0007_PQB_MILST1' in data:
			get_total_milestons += val
		elif 'AGS_Z0007_PQB_MILST2' in data:
			get_total_milestons += val
		elif 'AGS_Z0007_PQB_MILST3' in data:
			get_total_milestons += val
		elif 'AGS_Z0006_PQB_MILST1' in data:
			get_total_milestons += val
		elif 'AGS_Z0006_PQB_MILST2' in data:
			get_total_milestons += val
		elif 'AGS_Z0006_PQB_MILST3' in data:
			get_total_milestons += val
	if get_total_milestons:
		amount_columnss = str(float(get_total_milestons)/100.00)
	else:
		amount_columnss = 'NET_VALUE_INGL_CURR'
	Trace.Write('amount_column--'+str(amount_columnss))
	Sql.RunQuery(""" INSERT SAQIBP (

				QUOTE_ITEM_BILLING_PLAN_RECORD_ID, BILLING_END_DATE, BILLING_START_DATE,ANNUAL_BILLING_AMOUNT,BILLING_VALUE, BILLING_VALUE_INGL_CURR,BILLING_TYPE,LINE, QUOTE_ID, QTEITM_RECORD_ID,COMMITTED_VALUE_INGL_CURR,ESTVAL_INGL_CURR,
				QUOTE_RECORD_ID,QTEREV_ID,QTEREV_RECORD_ID,GLOBAL_CURRENCY,GLOBALCURRENCY_RECORD_ID,
				BILLING_DATE, BILLING_YEAR,
				EQUIPMENT_DESCRIPTION, EQUIPMENT_ID, EQUIPMENT_RECORD_ID, QTEITMCOB_RECORD_ID,
				SERVICE_DESCRIPTION, SERVICE_ID, SERVICE_RECORD_ID, GREENBOOK, GREENBOOK_RECORD_ID, SERIAL_NUMBER, WARRANTY_START_DATE, WARRANTY_END_DATE,CPQTABLEENTRYADDEDBY, CPQTABLEENTRYDATEADDED
				)
				SELECT
				CONVERT(VARCHAR(4000),NEWID()) as QUOTE_ITEM_BILLING_PLAN_RECORD_ID,A.* from (SELECT DISTINCT  
				{billing_end_date} as BILLING_END_DATE,
				{BillingDate} as BILLING_START_DATE,
				{amount_column}  AS ANNUAL_BILLING_AMOUNT,
				ISNULL({amount_columnss}, 0) / {get_val}*{amount_columnss}   as BILLING_VALUE,
				{amount_columnss}   as  BILLING_VALUE_INGL_CURR,
				'{billing_type}' as BILLING_TYPE,
				SAQRIT.LINE AS LINE,
				SAQSCO.QUOTE_ID,
				SAQRIT.QUOTE_REVISION_CONTRACT_ITEM_ID as QTEITM_RECORD_ID,
				SAQRIT.COMVAL_INGL_CURR as COMMITTED_VALUE_INGL_CURR,
				SAQRIT.ESTVAL_INGL_CURR as ESTVAL_INGL_CURR,
				SAQSCO.QUOTE_RECORD_ID,
				SAQSCO.QTEREV_ID,
				SAQSCO.QTEREV_RECORD_ID,
				SAQRIT.GLOBAL_CURRENCY,
				SAQRIT.GLOBAL_CURRENCY_RECORD_ID,
				{BillingDate} as BILLING_DATE,
				'{amount_column_split}' as BILLING_YEAR,
				SAQSCO.EQUIPMENT_DESCRIPTION,
				SAQSCO.EQUIPMENT_ID,
				SAQSCO.EQUIPMENT_RECORD_ID,
				'' as QTEITMCOB_RECORD_ID,
				SAQSCO.SERVICE_DESCRIPTION,
				SAQSCO.SERVICE_ID,
				SAQSCO.SERVICE_RECORD_ID,
				SAQSCO.GREENBOOK,
				SAQSCO.GREENBOOK_RECORD_ID,
				SAQSCO.SERIAL_NO AS SERIAL_NUMBER,
				SAQSCO.WARRANTY_START_DATE,
				SAQSCO.WARRANTY_END_DATE,    
				{UserId} as CPQTABLEENTRYADDEDBY,
				GETDATE() as CPQTABLEENTRYDATEADDED
				FROM SAQSCO (NOLOCK) JOIN SAQRIT (NOLOCK) ON SAQRIT.QUOTE_RECORD_ID = SAQSCO.QUOTE_RECORD_ID and SAQRIT.QTEREV_RECORD_ID=SAQSCO.QTEREV_RECORD_ID  and SAQRIT.SERVICE_ID = SAQSCO.SERVICE_ID  and SAQSCO.GREENBOOK = SAQRIT.GREENBOOK LEFT JOIN SAQIBP (NOLOCK) on SAQRIT.QUOTE_RECORD_ID = SAQIBP.QUOTE_RECORD_ID and SAQRIT.QTEREV_RECORD_ID=SAQIBP.QTEREV_RECORD_ID  and SAQRIT.SERVICE_ID = SAQIBP.SERVICE_ID AND
				EXISTS (SELECT * FROM  SAQIBP (NOLOCK) WHERE SAQIBP.ANNUAL_BILLING_AMOUNT <> SAQRIT.NET_PRICE AND SAQRIT.QUOTE_RECORD_ID = SAQIBP.QUOTE_RECORD_ID and SAQRIT.QTEREV_RECORD_ID=SAQIBP.QTEREV_RECORD_ID  and SAQRIT.SERVICE_ID = SAQIBP.SERVICE_ID)
				WHERE SAQSCO.QUOTE_RECORD_ID='{QuoteRecordId}' AND SAQSCO.QTEREV_RECORD_ID = '{RevisionRecordId}' AND SAQSCO.SERVICE_ID ='{service_id}'  and SAQRIT.NET_VALUE IS NOT NULL and SAQRIT.OBJECT_ID IS NOT NULL )A """.format(
				UserId=User.Id, QuoteRecordId=contract_quote_rec_id,amount_columnss=amount_columnss,
				RevisionRecordId=quote_revision_rec_id,
				BillingDate=billing_date,billing_end_date=billing_end_date,
				get_val=get_val,
				service_id = service_id,billing_type =get_billing_type,amount_column=amount_column,amount_column_split=amount_column_split))
	Sql.RunQuery(""" INSERT SAQIBP (
				QUOTE_ITEM_BILLING_PLAN_RECORD_ID, BILLING_END_DATE, BILLING_START_DATE,ANNUAL_BILLING_AMOUNT,BILLING_VALUE, BILLING_VALUE_INGL_CURR,BILLING_TYPE,LINE, QUOTE_ID,DOC_CURRENCY, QTEITM_RECORD_ID,COMMITTED_VALUE_INGL_CURR,ESTVAL_INGL_CURR,
				QUOTE_RECORD_ID,GLOBAL_CURRENCY,GLOBALCURRENCY_RECORD_ID,QTEREV_ID,QTEREV_RECORD_ID,
				BILLING_DATE, BILLING_YEAR,
				EQUIPMENT_DESCRIPTION, EQUIPMENT_ID, EQUIPMENT_RECORD_ID, QTEITMCOB_RECORD_ID,
				SERVICE_DESCRIPTION, SERVICE_ID, SERVICE_RECORD_ID, GREENBOOK, GREENBOOK_RECORD_ID, SERIAL_NUMBER, WARRANTY_START_DATE, WARRANTY_END_DATE,CPQTABLEENTRYADDEDBY, CPQTABLEENTRYDATEADDED
				)
				SELECT
				CONVERT(VARCHAR(4000),NEWID()) as QUOTE_ITEM_BILLING_PLAN_RECORD_ID,A.* from (SELECT DISTINCT  
				{billing_end_date} as BILLING_END_DATE,
				{BillingDate} as BILLING_START_DATE,
				{amount_column} AS ANNUAL_BILLING_AMOUNT,
				ISNULL({amount_column}, 0) / {get_val}*{amount_columnss}  as BILLING_VALUE,
				ISNULL(SAQRIT.ESTVAL_INGL_CURR, 0) / {get_val}  as  BILLING_VALUE_INGL_CURR,
				'{billing_type}' as BILLING_TYPE,
				SAQRIT.LINE AS LINE,
				SAQRIT.QUOTE_ID,
				SAQRIT.DOC_CURRENCY AS DOC_CURRENCY,
				SAQRIT.QUOTE_REVISION_CONTRACT_ITEM_ID as QTEITM_RECORD_ID,
				SAQRIT.COMVAL_INGL_CURR as COMMITTED_VALUE_INGL_CURR,
				SAQRIT.ESTVAL_INGL_CURR as ESTVAL_INGL_CURR,
				SAQRIT.QUOTE_RECORD_ID,
				SAQRIT.GLOBAL_CURRENCY,
				SAQRIT.GLOBAL_CURRENCY_RECORD_ID,
				SAQRIT.QTEREV_ID,
				SAQRIT.QTEREV_RECORD_ID,
				{BillingDate} as BILLING_DATE,
				'{amount_column_split}' as BILLING_YEAR,
				'' as EQUIPMENT_DESCRIPTION,
				SAQRIT.OBJECT_ID as EQUIPMENT_ID,
				'' as EQUIPMENT_RECORD_ID,
				'' as QTEITMCOB_RECORD_ID,
				SAQRIT.SERVICE_DESCRIPTION,
				SAQRIT.SERVICE_ID,
				SAQRIT.SERVICE_RECORD_ID,
				SAQRIT.GREENBOOK,
				SAQRIT.GREENBOOK_RECORD_ID,
				'' AS SERIAL_NUMBER,
				'' as WARRANTY_START_DATE,
				'' as WARRANTY_END_DATE,    
				{UserId} as CPQTABLEENTRYADDEDBY,
				GETDATE() as CPQTABLEENTRYDATEADDED
				FROM SAQRIT (NOLOCK)  LEFT JOIN SAQIBP (NOLOCK) on SAQRIT.QUOTE_RECORD_ID = SAQIBP.QUOTE_RECORD_ID and SAQRIT.QTEREV_RECORD_ID=SAQIBP.QTEREV_RECORD_ID  and SAQRIT.SERVICE_ID = SAQIBP.SERVICE_ID AND
				EXISTS (SELECT * FROM  SAQIBP (NOLOCK) WHERE SAQIBP.ANNUAL_BILLING_AMOUNT <> SAQRIT.NET_PRICE AND SAQRIT.QUOTE_RECORD_ID = SAQIBP.QUOTE_RECORD_ID and SAQRIT.QTEREV_RECORD_ID=SAQIBP.QTEREV_RECORD_ID  and SAQRIT.SERVICE_ID = SAQIBP.SERVICE_ID)
				WHERE SAQRIT.QUOTE_RECORD_ID='{QuoteRecordId}' AND SAQRIT.QTEREV_RECORD_ID = '{RevisionRecordId}' AND SAQRIT.SERVICE_ID ='{service_id}'  and SAQRIT.NET_VALUE IS NOT NULL  and SAQRIT.OBJECT_ID IS NULL )A """.format(
				UserId=User.Id, QuoteRecordId=contract_quote_rec_id,amount_columnss=amount_columnss,
				RevisionRecordId=quote_revision_rec_id,billing_end_date=billing_end_date,
				BillingDate=billing_date,
				get_val=get_val,
				service_id = service_id,billing_type =get_billing_type,amount_column=amount_column,amount_column_split=amount_column_split))

def insert_items_billing_plan(total_months=1, billing_date='',billing_end_date ='', amount_column='YEAR_1', entitlement_obj=None,service_id=None,get_ent_val_type =None,get_ent_billing_type_value=None,get_billling_data_dict=None):
	get_billing_cycle = get_billing_type = ''
	#Trace.Write(str(service_id)+'--get_billling_data_dict--'+str(get_billling_data_dict))
	Trace.Write(str(service_id)+'get_ent_val_type--'+str(get_ent_val_type))
	get_rev_rec_id = Sql.GetFirst("SELECT QTEREV_RECORD_ID,QUOTE_CURRENCY,MASTER_TABLE_QUOTE_RECORD_ID FROM SAQTMT where QUOTE_ID = '{}'".format(Qt_id))
	contract_quote_rec_id = get_rev_rec_id.MASTER_TABLE_QUOTE_RECORD_ID
	quote_revision_rec_id = get_rev_rec_id.QTEREV_RECORD_ID
	for data,val in get_billling_data_dict.items():
		if 'AGS_'+str(service_id)+'_PQB_BILCYC' in data:
			get_billing_cycle = val
		elif 'AGS_'+str(service_id)+'_PQB_BILTYP' in data:
			get_billing_type =val
	#Trace.Write('get_billing_cycle---'+str(get_billing_cycle))
	Trace.Write(str(service_id)+'----billing_type---'+str(get_billing_type)+'--CYCLE---'+str(get_billing_cycle))
	if get_billing_cycle == "Monthly":				
		get_val =12
	elif str(get_billing_cycle).upper() == "QUARTERLY":			
		get_val = 4
	elif str(get_billing_cycle).upper() == "ANNUALLY":				
		get_val = 1
	else:				
		get_val =12
	amount_column_split = amount_column.replace('_',' ')
	if service_id  in ('Z0091W'):
		amount_column = 'NET_VALUE_INGL_CURR'
	#amount_column = 'TOTAL_AMOUNT_INGL_CURR' # Hard Coded for Sprint 5	
	if str(get_billing_type).upper() == "FIXED" and get_billing_type != '' and service_id not in ('Z0100'):
		
		Trace.Write(str(service_id)+'------billing_type_value-----'+str(get_ent_billing_type_value))
		Sql.RunQuery(""" INSERT SAQIBP (

					QUOTE_ITEM_BILLING_PLAN_RECORD_ID, BILLING_END_DATE, BILLING_START_DATE,ANNUAL_BILLING_AMOUNT,BILLING_VALUE, BILLING_VALUE_INGL_CURR,BILLING_TYPE,LINE, QUOTE_ID, QTEITM_RECORD_ID,COMMITTED_VALUE_INGL_CURR,ESTVAL_INGL_CURR,
					QUOTE_RECORD_ID,QTEREV_ID,QTEREV_RECORD_ID,
					BILLING_DATE, BILLING_YEAR,GLOBAL_CURRENCY,GLOBALCURRENCY_RECORD_ID,
					EQUIPMENT_DESCRIPTION, EQUIPMENT_ID, EQUIPMENT_RECORD_ID, QTEITMCOB_RECORD_ID,
					SERVICE_DESCRIPTION, SERVICE_ID, SERVICE_RECORD_ID, GREENBOOK, GREENBOOK_RECORD_ID, SERIAL_NUMBER, WARRANTY_START_DATE, WARRANTY_END_DATE,CPQTABLEENTRYADDEDBY, CPQTABLEENTRYDATEADDED
					)
					SELECT
					CONVERT(VARCHAR(4000),NEWID()) as QUOTE_ITEM_BILLING_PLAN_RECORD_ID,A.* from (SELECT DISTINCT  
					{billing_end_date} as BILLING_END_DATE,
					{BillingDate} as BILLING_START_DATE,
					{amount_column}  AS ANNUAL_BILLING_AMOUNT,
					ISNULL({amount_column}, 0) / {get_val}  as BILLING_VALUE,
					{amount_column}   as  BILLING_VALUE_INGL_CURR,
					'{billing_type}' as BILLING_TYPE,
					SAQRIT.LINE AS LINE,
					SAQSCO.QUOTE_ID,
					SAQRIT.QUOTE_REVISION_CONTRACT_ITEM_ID as QTEITM_RECORD_ID,
					SAQRIT.COMVAL_INGL_CURR as COMMITTED_VALUE_INGL_CURR,
					SAQRIT.ESTVAL_INGL_CURR as ESTVAL_INGL_CURR,
					SAQSCO.QUOTE_RECORD_ID,
					SAQSCO.QTEREV_ID,
					SAQSCO.QTEREV_RECORD_ID,
					{BillingDate} as BILLING_DATE,
					'{amount_column_split}' as BILLING_YEAR,
					SAQRIT.GLOBAL_CURRENCY,
					SAQRIT.GLOBAL_CURRENCY_RECORD_ID,
					SAQSCO.EQUIPMENT_DESCRIPTION,
					SAQSCO.EQUIPMENT_ID,
					SAQSCO.EQUIPMENT_RECORD_ID,
					'' as QTEITMCOB_RECORD_ID,
					SAQSCO.SERVICE_DESCRIPTION,
					SAQSCO.SERVICE_ID,
					SAQSCO.SERVICE_RECORD_ID,
					SAQSCO.GREENBOOK,
					SAQSCO.GREENBOOK_RECORD_ID,
					SAQSCO.SERIAL_NO AS SERIAL_NUMBER,
					SAQSCO.WARRANTY_START_DATE,
					SAQSCO.WARRANTY_END_DATE,    
					{UserId} as CPQTABLEENTRYADDEDBY,
					GETDATE() as CPQTABLEENTRYDATEADDED
					FROM SAQSCO (NOLOCK) JOIN SAQRIT (NOLOCK) ON SAQRIT.QUOTE_RECORD_ID = SAQSCO.QUOTE_RECORD_ID and SAQRIT.QTEREV_RECORD_ID=SAQSCO.QTEREV_RECORD_ID  and SAQRIT.SERVICE_ID = SAQSCO.SERVICE_ID and SAQRIT.OBJECT_ID = SAQSCO.EQUIPMENT_ID and SAQSCO.GREENBOOK = SAQRIT.GREENBOOK LEFT JOIN SAQIBP (NOLOCK) on SAQRIT.QUOTE_RECORD_ID = SAQIBP.QUOTE_RECORD_ID and SAQRIT.QTEREV_RECORD_ID=SAQIBP.QTEREV_RECORD_ID  and SAQRIT.SERVICE_ID = SAQIBP.SERVICE_ID AND
					EXISTS (SELECT * FROM  SAQIBP (NOLOCK) WHERE SAQIBP.ANNUAL_BILLING_AMOUNT <> SAQRIT.NET_VALUE AND SAQRIT.QUOTE_RECORD_ID = SAQIBP.QUOTE_RECORD_ID and SAQRIT.QTEREV_RECORD_ID=SAQIBP.QTEREV_RECORD_ID  and SAQRIT.SERVICE_ID = SAQIBP.SERVICE_ID)
					WHERE SAQSCO.QUOTE_RECORD_ID='{QuoteRecordId}' AND SAQSCO.QTEREV_RECORD_ID = '{RevisionRecordId}' AND SAQSCO.SERVICE_ID ='{service_id}'  and SAQRIT.NET_VALUE IS NOT NULL and  SAQRIT.OBJECT_ID IS NOT NULL )A """.format(
					UserId=User.Id, QuoteRecordId=contract_quote_rec_id,
					RevisionRecordId=quote_revision_rec_id,
					BillingDate=billing_date,billing_end_date=billing_end_date,
					get_val=get_val,
					service_id = service_id,billing_type =get_billing_type,amount_column=amount_column,amount_column_split=amount_column_split))
		Sql.RunQuery(""" INSERT SAQIBP (
					QUOTE_ITEM_BILLING_PLAN_RECORD_ID, BILLING_END_DATE, BILLING_START_DATE,ANNUAL_BILLING_AMOUNT,BILLING_VALUE, BILLING_VALUE_INGL_CURR,BILLING_TYPE,LINE, QUOTE_ID,DOC_CURRENCY, QTEITM_RECORD_ID,COMMITTED_VALUE_INGL_CURR,ESTVAL_INGL_CURR,
					QUOTE_RECORD_ID,QTEREV_ID,QTEREV_RECORD_ID,GLOBAL_CURRENCY,GLOBALCURRENCY_RECORD_ID,
					BILLING_DATE, BILLING_YEAR,
					EQUIPMENT_DESCRIPTION, EQUIPMENT_ID, EQUIPMENT_RECORD_ID, QTEITMCOB_RECORD_ID,
					SERVICE_DESCRIPTION, SERVICE_ID, SERVICE_RECORD_ID, GREENBOOK, GREENBOOK_RECORD_ID, SERIAL_NUMBER, WARRANTY_START_DATE, WARRANTY_END_DATE,CPQTABLEENTRYADDEDBY, CPQTABLEENTRYDATEADDED
					)
					SELECT
					CONVERT(VARCHAR(4000),NEWID()) as QUOTE_ITEM_BILLING_PLAN_RECORD_ID,A.* from (SELECT DISTINCT  
					{billing_end_date} as BILLING_END_DATE,
					{BillingDate} as BILLING_START_DATE,
					{amount_column} AS ANNUAL_BILLING_AMOUNT,
					ISNULL({amount_column}, 0) / {get_val}  as BILLING_VALUE,
					ISNULL(SAQRIT.ESTVAL_INGL_CURR, 0) / {get_val}  as  BILLING_VALUE_INGL_CURR,
					'{billing_type}' as BILLING_TYPE,
					SAQRIT.LINE AS LINE,
					SAQRIT.QUOTE_ID,
					SAQRIT.DOC_CURRENCY AS DOC_CURRENCY,
					SAQRIT.QUOTE_REVISION_CONTRACT_ITEM_ID as QTEITM_RECORD_ID,
					SAQRIT.COMVAL_INGL_CURR as COMMITTED_VALUE_INGL_CURR,
					SAQRIT.ESTVAL_INGL_CURR as ESTVAL_INGL_CURR,
					SAQRIT.QUOTE_RECORD_ID,
					SAQRIT.QTEREV_ID,
					SAQRIT.QTEREV_RECORD_ID,
					SAQRIT.GLOBAL_CURRENCY,
					SAQRIT.GLOBAL_CURRENCY_RECORD_ID,
					{BillingDate} as BILLING_DATE,
					'{amount_column_split}' as BILLING_YEAR,
					'' as EQUIPMENT_DESCRIPTION,
					SAQRIT.OBJECT_ID as EQUIPMENT_ID,
					'' as EQUIPMENT_RECORD_ID,
					'' as QTEITMCOB_RECORD_ID,
					SAQRIT.SERVICE_DESCRIPTION,
					SAQRIT.SERVICE_ID,
					SAQRIT.SERVICE_RECORD_ID,
					SAQRIT.GREENBOOK,
					SAQRIT.GREENBOOK_RECORD_ID,
					'' AS SERIAL_NUMBER,
					'' as WARRANTY_START_DATE,
					'' as WARRANTY_END_DATE,    
					{UserId} as CPQTABLEENTRYADDEDBY,
					GETDATE() as CPQTABLEENTRYDATEADDED
					FROM SAQRIT (NOLOCK)  LEFT JOIN SAQIBP (NOLOCK) on SAQRIT.QUOTE_RECORD_ID = SAQIBP.QUOTE_RECORD_ID and SAQRIT.QTEREV_RECORD_ID=SAQIBP.QTEREV_RECORD_ID  and SAQRIT.SERVICE_ID = SAQIBP.SERVICE_ID AND
					EXISTS (SELECT * FROM  SAQIBP (NOLOCK) WHERE SAQIBP.ANNUAL_BILLING_AMOUNT <> SAQRIT.NET_VALUE AND SAQRIT.QUOTE_RECORD_ID = SAQIBP.QUOTE_RECORD_ID and SAQRIT.QTEREV_RECORD_ID=SAQIBP.QTEREV_RECORD_ID  and SAQRIT.SERVICE_ID = SAQIBP.SERVICE_ID)
					WHERE SAQRIT.QUOTE_RECORD_ID='{QuoteRecordId}' AND SAQRIT.QTEREV_RECORD_ID = '{RevisionRecordId}' AND SAQRIT.SERVICE_ID ='{service_id}'  and SAQRIT.NET_VALUE IS NOT NULL  and ISNULL(SAQRIT.OBJECT_ID,'') = '' )A """.format(
					UserId=User.Id, QuoteRecordId=contract_quote_rec_id,
					RevisionRecordId=quote_revision_rec_id,billing_end_date=billing_end_date,
					BillingDate=billing_date,
					get_val=get_val,
					service_id = service_id,billing_type =get_billing_type,amount_column=amount_column,amount_column_split=amount_column_split))
	elif str(get_billing_type).upper() == "MILESTONE" and service_id not in ('Z0007','Z0009','Z0123'):

		
		Trace.Write(str(service_id)+'------billing_type_value-----'+str(get_ent_billing_type_value))
		Sql.RunQuery(""" INSERT SAQIBP (

					QUOTE_ITEM_BILLING_PLAN_RECORD_ID, BILLING_END_DATE, BILLING_START_DATE,ANNUAL_BILLING_AMOUNT,BILLING_VALUE, BILLING_VALUE_INGL_CURR,BILLING_TYPE,LINE, QUOTE_ID, QTEITM_RECORD_ID,COMMITTED_VALUE_INGL_CURR,ESTVAL_INGL_CURR,
					QUOTE_RECORD_ID,QTEREV_ID,QTEREV_RECORD_ID,GLOBAL_CURRENCY,GLOBALCURRENCY_RECORD_ID,
					BILLING_DATE, BILLING_YEAR,
					EQUIPMENT_DESCRIPTION, EQUIPMENT_ID, EQUIPMENT_RECORD_ID, QTEITMCOB_RECORD_ID,
					SERVICE_DESCRIPTION, SERVICE_ID, SERVICE_RECORD_ID, GREENBOOK, GREENBOOK_RECORD_ID, SERIAL_NUMBER, WARRANTY_START_DATE, WARRANTY_END_DATE,CPQTABLEENTRYADDEDBY, CPQTABLEENTRYDATEADDED
					)
					SELECT
					CONVERT(VARCHAR(4000),NEWID()) as QUOTE_ITEM_BILLING_PLAN_RECORD_ID,A.* from (SELECT DISTINCT  
					{billing_end_date} as BILLING_END_DATE,
					{BillingDate} as BILLING_START_DATE,
					{amount_column}  AS ANNUAL_BILLING_AMOUNT,
					ISNULL({amount_column}, 0) / {get_val}  as BILLING_VALUE,
					{amount_column}   as  BILLING_VALUE_INGL_CURR,
					'{billing_type}' as BILLING_TYPE,
					SAQRIT.LINE AS LINE,
					SAQSCO.QUOTE_ID,
					SAQRIT.QUOTE_REVISION_CONTRACT_ITEM_ID as QTEITM_RECORD_ID,
					SAQRIT.COMVAL_INGL_CURR as COMMITTED_VALUE_INGL_CURR,
					SAQRIT.ESTVAL_INGL_CURR as ESTVAL_INGL_CURR,
					SAQSCO.QUOTE_RECORD_ID,
					SAQSCO.QTEREV_ID,
					SAQSCO.QTEREV_RECORD_ID,
					SAQRIT.GLOBAL_CURRENCY,
					SAQRIT.GLOBAL_CURRENCY_RECORD_ID,
					{BillingDate} as BILLING_DATE,
					'{amount_column_split}' as BILLING_YEAR,
					SAQSCO.EQUIPMENT_DESCRIPTION,
					SAQSCO.EQUIPMENT_ID,
					SAQSCO.EQUIPMENT_RECORD_ID,
					'' as QTEITMCOB_RECORD_ID,
					SAQSCO.SERVICE_DESCRIPTION,
					SAQSCO.SERVICE_ID,
					SAQSCO.SERVICE_RECORD_ID,
					SAQSCO.GREENBOOK,
					SAQSCO.GREENBOOK_RECORD_ID,
					SAQSCO.SERIAL_NO AS SERIAL_NUMBER,
					SAQSCO.WARRANTY_START_DATE,
					SAQSCO.WARRANTY_END_DATE,    
					{UserId} as CPQTABLEENTRYADDEDBY,
					GETDATE() as CPQTABLEENTRYDATEADDED
					FROM SAQSCO (NOLOCK) JOIN SAQRIT (NOLOCK) ON SAQRIT.QUOTE_RECORD_ID = SAQSCO.QUOTE_RECORD_ID and SAQRIT.QTEREV_RECORD_ID=SAQSCO.QTEREV_RECORD_ID  and SAQRIT.SERVICE_ID = SAQSCO.SERVICE_ID  and SAQSCO.GREENBOOK = SAQRIT.GREENBOOK LEFT JOIN SAQIBP (NOLOCK) on SAQRIT.QUOTE_RECORD_ID = SAQIBP.QUOTE_RECORD_ID and SAQRIT.QTEREV_RECORD_ID=SAQIBP.QTEREV_RECORD_ID  and SAQRIT.SERVICE_ID = SAQIBP.SERVICE_ID AND
					EXISTS (SELECT * FROM  SAQIBP (NOLOCK) WHERE SAQIBP.ANNUAL_BILLING_AMOUNT <> SAQRIT.NET_PRICE AND SAQRIT.QUOTE_RECORD_ID = SAQIBP.QUOTE_RECORD_ID and SAQRIT.QTEREV_RECORD_ID=SAQIBP.QTEREV_RECORD_ID  and SAQRIT.SERVICE_ID = SAQIBP.SERVICE_ID)
					WHERE SAQSCO.QUOTE_RECORD_ID='{QuoteRecordId}' AND SAQSCO.QTEREV_RECORD_ID = '{RevisionRecordId}' AND SAQSCO.SERVICE_ID ='{service_id}'  and SAQRIT.NET_VALUE IS NOT NULL and SAQRIT.OBJECT_ID IS NOT NULL )A """.format(
					UserId=User.Id, QuoteRecordId=contract_quote_rec_id,
					RevisionRecordId=quote_revision_rec_id,
					BillingDate=billing_date,billing_end_date=billing_end_date,
					get_val=get_val,
					service_id = service_id,billing_type =get_billing_type,amount_column=amount_column,amount_column_split=amount_column_split))
		Sql.RunQuery(""" INSERT SAQIBP (
					QUOTE_ITEM_BILLING_PLAN_RECORD_ID, BILLING_END_DATE, BILLING_START_DATE,ANNUAL_BILLING_AMOUNT,BILLING_VALUE, BILLING_VALUE_INGL_CURR,BILLING_TYPE,LINE, QUOTE_ID,DOC_CURRENCY, QTEITM_RECORD_ID,COMMITTED_VALUE_INGL_CURR,ESTVAL_INGL_CURR,
					QUOTE_RECORD_ID,GLOBAL_CURRENCY,GLOBALCURRENCY_RECORD_ID,QTEREV_ID,QTEREV_RECORD_ID,
					BILLING_DATE, BILLING_YEAR,
					EQUIPMENT_DESCRIPTION, EQUIPMENT_ID, EQUIPMENT_RECORD_ID, QTEITMCOB_RECORD_ID,
					SERVICE_DESCRIPTION, SERVICE_ID, SERVICE_RECORD_ID, GREENBOOK, GREENBOOK_RECORD_ID, SERIAL_NUMBER, WARRANTY_START_DATE, WARRANTY_END_DATE,CPQTABLEENTRYADDEDBY, CPQTABLEENTRYDATEADDED
					)
					SELECT
					CONVERT(VARCHAR(4000),NEWID()) as QUOTE_ITEM_BILLING_PLAN_RECORD_ID,A.* from (SELECT DISTINCT  
					{billing_end_date} as BILLING_END_DATE,
					{BillingDate} as BILLING_START_DATE,
					{amount_column} AS ANNUAL_BILLING_AMOUNT,
					ISNULL({amount_column}, 0) / {get_val}  as BILLING_VALUE,
					ISNULL(SAQRIT.ESTVAL_INGL_CURR, 0) / {get_val}  as  BILLING_VALUE_INGL_CURR,
					'{billing_type}' as BILLING_TYPE,
					SAQRIT.LINE AS LINE,
					SAQRIT.QUOTE_ID,
					SAQRIT.DOC_CURRENCY AS DOC_CURRENCY,
					SAQRIT.QUOTE_REVISION_CONTRACT_ITEM_ID as QTEITM_RECORD_ID,
					SAQRIT.COMVAL_INGL_CURR as COMMITTED_VALUE_INGL_CURR,
					SAQRIT.ESTVAL_INGL_CURR as ESTVAL_INGL_CURR,
					SAQRIT.QUOTE_RECORD_ID,
					SAQRIT.GLOBAL_CURRENCY,
					SAQRIT.GLOBAL_CURRENCY_RECORD_ID,
					SAQRIT.QTEREV_ID,
					SAQRIT.QTEREV_RECORD_ID,
					{BillingDate} as BILLING_DATE,
					'{amount_column_split}' as BILLING_YEAR,
					'' as EQUIPMENT_DESCRIPTION,
					SAQRIT.OBJECT_ID as EQUIPMENT_ID,
					'' as EQUIPMENT_RECORD_ID,
					'' as QTEITMCOB_RECORD_ID,
					SAQRIT.SERVICE_DESCRIPTION,
					SAQRIT.SERVICE_ID,
					SAQRIT.SERVICE_RECORD_ID,
					SAQRIT.GREENBOOK,
					SAQRIT.GREENBOOK_RECORD_ID,
					'' AS SERIAL_NUMBER,
					'' as WARRANTY_START_DATE,
					'' as WARRANTY_END_DATE,    
					{UserId} as CPQTABLEENTRYADDEDBY,
					GETDATE() as CPQTABLEENTRYDATEADDED
					FROM SAQRIT (NOLOCK)  LEFT JOIN SAQIBP (NOLOCK) on SAQRIT.QUOTE_RECORD_ID = SAQIBP.QUOTE_RECORD_ID and SAQRIT.QTEREV_RECORD_ID=SAQIBP.QTEREV_RECORD_ID  and SAQRIT.SERVICE_ID = SAQIBP.SERVICE_ID AND
					EXISTS (SELECT * FROM  SAQIBP (NOLOCK) WHERE SAQIBP.ANNUAL_BILLING_AMOUNT <> SAQRIT.NET_PRICE AND SAQRIT.QUOTE_RECORD_ID = SAQIBP.QUOTE_RECORD_ID and SAQRIT.QTEREV_RECORD_ID=SAQIBP.QTEREV_RECORD_ID  and SAQRIT.SERVICE_ID = SAQIBP.SERVICE_ID)
					WHERE SAQRIT.QUOTE_RECORD_ID='{QuoteRecordId}' AND SAQRIT.QTEREV_RECORD_ID = '{RevisionRecordId}' AND SAQRIT.SERVICE_ID ='{service_id}'  and SAQRIT.NET_VALUE IS NOT NULL  and SAQRIT.OBJECT_ID IS NULL )A """.format(
					UserId=User.Id, QuoteRecordId=contract_quote_rec_id,
					RevisionRecordId=quote_revision_rec_id,billing_end_date=billing_end_date,
					BillingDate=billing_date,
					get_val=get_val,
					service_id = service_id,billing_type =get_billing_type,amount_column=amount_column,amount_column_split=amount_column_split))
	
			
	else:
				
		if service_id == "Z0010":
			Sql.RunQuery("""INSERT SAQIBP (
						
						QUOTE_ITEM_BILLING_PLAN_RECORD_ID, BILLING_END_DATE, BILLING_START_DATE,ANNUAL_BILLING_AMOUNT,BILLING_VALUE, BILLING_VALUE_INGL_CURR,BILLING_TYPE,LINE, QUOTE_ID,DOC_CURRENCY, QTEITM_RECORD_ID,COMMITTED_VALUE_INGL_CURR,ESTVAL_INGL_CURR,ESTVAL_INDT_CURR,
						QUOTE_RECORD_ID,QTEREV_ID,QTEREV_RECORD_ID,GLOBAL_CURRENCY,GLOBALCURRENCY_RECORD_ID,
						BILLING_DATE, BILLING_YEAR,
						EQUIPMENT_DESCRIPTION, EQUIPMENT_ID, EQUIPMENT_RECORD_ID, QTEITMCOB_RECORD_ID, 
						SERVICE_DESCRIPTION, SERVICE_ID, SERVICE_RECORD_ID, GREENBOOK, GREENBOOK_RECORD_ID, SERIAL_NUMBER, WARRANTY_START_DATE, WARRANTY_END_DATE,CPQTABLEENTRYADDEDBY, CPQTABLEENTRYDATEADDED
					)SELECT 
						CONVERT(VARCHAR(4000),NEWID()) as QUOTE_ITEM_BILLING_PLAN_RECORD_ID,A.* from (SELECT DISTINCT  
						{billing_end_date} as BILLING_END_DATE,
						{BillingDate} as BILLING_START_DATE,
						{amount_column} AS ANNUAL_BILLING_AMOUNT,
						0  as BILLING_VALUE,
						0  as  BILLING_VALUE_INGL_CURR,
						'{billing_type}' as BILLING_TYPE,
						SAQRIT.LINE AS LINE,
						SAQRIT.QUOTE_ID,
						SAQRIT.DOC_CURRENCY AS DOC_CURRENCY,
						SAQRIT.QUOTE_REVISION_CONTRACT_ITEM_ID as QTEITM_RECORD_ID,	
						SAQRIT.COMVAL_INGL_CURR	 as COMMITTED_VALUE_INGL_CURR,
						ISNULL({amount_column}, 0) / {get_val}	as 	ESTVAL_INGL_CURR,
						ISNULL({amount_column}, 0) / {get_val} as ESTVAL_INDT_CURR,		
						SAQRIT.QUOTE_RECORD_ID,
						SAQRIT.QTEREV_ID,
						SAQRIT.QTEREV_RECORD_ID,
						SAQRIT.GLOBAL_CURRENCY,
						SAQRIT.GLOBAL_CURRENCY_RECORD_ID,
						{BillingDate} as BILLING_DATE,						
						'{amount_column_split}' as BILLING_YEAR,
						'' as EQUIPMENT_DESCRIPTION,
						SAQRIT.OBJECT_ID as EQUIPMENT_ID,									
						'' as EQUIPMENT_RECORD_ID,						
						'' as QTEITMCOB_RECORD_ID,
						SAQRIT.SERVICE_DESCRIPTION,
						SAQRIT.SERVICE_ID,
						SAQRIT.SERVICE_RECORD_ID, 
						SAQRIT.GREENBOOK,
						SAQRIT.GREENBOOK_RECORD_ID,
						'' AS SERIAL_NUMBER,
						''  as WARRANTY_START_DATE,
						''  as WARRANTY_END_DATE,    
						{UserId} as CPQTABLEENTRYADDEDBY, 
						GETDATE() as CPQTABLEENTRYDATEADDED
						FROM  SAQRIT (NOLOCK)  LEFT JOIN SAQIBP (NOLOCK) on SAQRIT.QUOTE_RECORD_ID = SAQIBP.QUOTE_RECORD_ID and SAQRIT.QTEREV_RECORD_ID=SAQIBP.QTEREV_RECORD_ID  and SAQRIT.SERVICE_ID = SAQIBP.SERVICE_ID AND
						EXISTS (SELECT * FROM  SAQIBP (NOLOCK) WHERE SAQIBP.ANNUAL_BILLING_AMOUNT <> SAQRIT.NET_VALUE AND SAQRIT.QUOTE_RECORD_ID = SAQIBP.QUOTE_RECORD_ID and SAQRIT.QTEREV_RECORD_ID=SAQIBP.QTEREV_RECORD_ID  and SAQRIT.SERVICE_ID = SAQIBP.SERVICE_ID)
						WHERE SAQRIT.QUOTE_RECORD_ID='{QuoteRecordId}' AND SAQRIT.QTEREV_RECORD_ID = '{RevisionRecordId}' AND SAQRIT.SERVICE_ID ='{service_id}'   and SAQRIT.ESTIMATED_VALUE  IS NOT NULL  AND SAQRIT.OBJECT_ID IS NOT NULL )A """.format(
						UserId=User.Id, QuoteRecordId=contract_quote_rec_id,
						RevisionRecordId=quote_revision_rec_id,billing_end_date=billing_end_date,
						BillingDate=billing_date,
						get_val=get_val,
						service_id = service_id,billing_type =get_billing_type,amount_column=amount_column,amount_column_split=amount_column_split))
			Sql.RunQuery("""INSERT SAQIBP (					
						QUOTE_ITEM_BILLING_PLAN_RECORD_ID, BILLING_END_DATE, BILLING_START_DATE,ANNUAL_BILLING_AMOUNT,BILLING_VALUE, BILLING_VALUE_INGL_CURR,BILLING_TYPE,LINE, QUOTE_ID, QTEITM_RECORD_ID, COMMITTED_VALUE_INGL_CURR,ESTVAL_INGL_CURR,DOC_CURRENCY,ESTVAL_INDT_CURR,
						QUOTE_RECORD_ID,QTEREV_ID,QTEREV_RECORD_ID,
						BILLING_DATE, BILLING_YEAR,
						EQUIPMENT_DESCRIPTION, EQUIPMENT_ID, EQUIPMENT_RECORD_ID, QTEITMCOB_RECORD_ID, 
						SERVICE_DESCRIPTION, SERVICE_ID,GLOBAL_CURRENCY,GLOBALCURRENCY_RECORD_ID, SERVICE_RECORD_ID, GREENBOOK, GREENBOOK_RECORD_ID, SERIAL_NUMBER, WARRANTY_START_DATE, WARRANTY_END_DATE,CPQTABLEENTRYADDEDBY, CPQTABLEENTRYDATEADDED
					) 
					SELECT 
						CONVERT(VARCHAR(4000),NEWID()) as QUOTE_ITEM_BILLING_PLAN_RECORD_ID,  
						{billing_end_date} as BILLING_END_DATE,
						{BillingDate} as BILLING_START_DATE,
						{amount_column} AS ANNUAL_BILLING_AMOUNT,
						0  as BILLING_VALUE,
						0  as  BILLING_VALUE_INGL_CURR,
						'{billing_type}' as BILLING_TYPE,
						LINE,
						QUOTE_ID,
						QUOTE_REVISION_CONTRACT_ITEM_ID as QTEITM_RECORD_ID,
						
						COMVAL_INGL_CURR as COMMITTED_VALUE_INGL_CURR,
						ISNULL({amount_column}, 0) / {get_val}	as 	ESTVAL_INGL_CURR,
						DOC_CURRENCY AS DOC_CURRENCY,
						ISNULL({amount_column}, 0) / {get_val} as ESTVAL_INDT_CURR,	
						QUOTE_RECORD_ID,
						QTEREV_ID,
						QTEREV_RECORD_ID,
						{BillingDate} as BILLING_DATE,						
						'{amount_column_split}' as BILLING_YEAR,
						'' as EQUIPMENT_DESCRIPTION,
						'' as EQUIPMENT_ID,									
						'' as EQUIPMENT_RECORD_ID,						
						'' as QTEITMCOB_RECORD_ID,
						SERVICE_DESCRIPTION,
						SERVICE_ID,
						GLOBAL_CURRENCY,
						GLOBAL_CURRENCY_RECORD_ID,
						SERVICE_RECORD_ID, 
						GREENBOOK,
						GREENBOOK_RECORD_ID,
						'' AS SERIAL_NUMBER,
						'' as WARRANTY_START_DATE,
						'' as WARRANTY_END_DATE,    
						{UserId} as CPQTABLEENTRYADDEDBY, 
						GETDATE() as CPQTABLEENTRYDATEADDED
					FROM  SAQRIT (NOLOCK) 
					WHERE QUOTE_RECORD_ID='{QuoteRecordId}' AND  ESTIMATED_VALUE IS NOT NULL AND QTEREV_RECORD_ID = '{RevisionRecordId}' AND SERVICE_ID ='{service_id}' AND (OBJECT_ID  IS NULL OR OBJECT_ID = '')""".format(
						UserId=User.Id, QuoteRecordId=contract_quote_rec_id,
						RevisionRecordId=quote_revision_rec_id,
						BillingDate=billing_date,billing_end_date=billing_end_date,
						get_val=get_val,
						service_id = service_id,billing_type =get_billing_type,amount_column=amount_column,amount_column_split=amount_column_split))
		else:
			Sql.RunQuery("""INSERT SAQIBP (
						
						QUOTE_ITEM_BILLING_PLAN_RECORD_ID, BILLING_END_DATE, BILLING_START_DATE,ANNUAL_BILLING_AMOUNT,BILLING_VALUE, BILLING_VALUE_INGL_CURR,BILLING_TYPE,LINE, QUOTE_ID,DOC_CURRENCY, QTEITM_RECORD_ID,COMMITTED_VALUE_INGL_CURR,ESTVAL_INGL_CURR,ESTVAL_INDT_CURR,
						QUOTE_RECORD_ID,QTEREV_ID,QTEREV_RECORD_ID,
						BILLING_DATE, BILLING_YEAR,
						EQUIPMENT_DESCRIPTION, EQUIPMENT_ID, EQUIPMENT_RECORD_ID, QTEITMCOB_RECORD_ID, 
						SERVICE_DESCRIPTION, SERVICE_ID, GLOBAL_CURRENCY,GLOBALCURRENCY_RECORD_ID,SERVICE_RECORD_ID, GREENBOOK, GREENBOOK_RECORD_ID, SERIAL_NUMBER, WARRANTY_START_DATE, WARRANTY_END_DATE,CPQTABLEENTRYADDEDBY, CPQTABLEENTRYDATEADDED
					) 
					SELECT 
						CONVERT(VARCHAR(4000),NEWID()) as QUOTE_ITEM_BILLING_PLAN_RECORD_ID,A.* from (SELECT DISTINCT  
						{billing_end_date} as BILLING_END_DATE,
						{BillingDate} as BILLING_START_DATE,
						{amount_column} AS ANNUAL_BILLING_AMOUNT,
						0  as BILLING_VALUE,
						0  as  BILLING_VALUE_INGL_CURR,
						'{billing_type}' as BILLING_TYPE,
						SAQRIT.LINE AS LINE,
						SAQSCO.QUOTE_ID,
						SAQRIT.DOC_CURRENCY AS DOC_CURRENCY,
						SAQRIT.QUOTE_REVISION_CONTRACT_ITEM_ID as QTEITM_RECORD_ID,	
						SAQRIT.COMVAL_INGL_CURR	 as COMMITTED_VALUE_INGL_CURR,
						ISNULL({amount_column}, 0) / {get_val}	as 	ESTVAL_INGL_CURR,
						ISNULL({amount_column}, 0) / {get_val} as ESTVAL_INDT_CURR,		
						SAQSCO.QUOTE_RECORD_ID,
						SAQSCO.QTEREV_ID,
						SAQSCO.QTEREV_RECORD_ID,
						{BillingDate} as BILLING_DATE,						
						'{amount_column_split}' as BILLING_YEAR,
						SAQSCO.EQUIPMENT_DESCRIPTION,
						SAQSCO.EQUIPMENT_ID,									
						SAQSCO.EQUIPMENT_RECORD_ID,						
						'' as QTEITMCOB_RECORD_ID,
						SAQSCO.SERVICE_DESCRIPTION,
						SAQSCO.SERVICE_ID,
						SAQRIT.GLOBAL_CURRENCY,
						SAQRIT.GLOBAL_CURRENCY_RECORD_ID,
						SAQSCO.SERVICE_RECORD_ID, 
						SAQSCO.GREENBOOK,
						SAQSCO.GREENBOOK_RECORD_ID,
						SAQSCO.SERIAL_NO AS SERIAL_NUMBER,
						SAQSCO.WARRANTY_START_DATE,
						SAQSCO.WARRANTY_END_DATE,    
						{UserId} as CPQTABLEENTRYADDEDBY, 
						GETDATE() as CPQTABLEENTRYDATEADDED
						FROM SAQSCO (NOLOCK) JOIN SAQRIT (NOLOCK) ON SAQRIT.QUOTE_RECORD_ID = SAQSCO.QUOTE_RECORD_ID and SAQRIT.QTEREV_RECORD_ID=SAQSCO.QTEREV_RECORD_ID  and SAQRIT.SERVICE_ID = SAQSCO.SERVICE_ID and SAQRIT.OBJECT_ID = SAQSCO.EQUIPMENT_ID and SAQSCO.GREENBOOK = SAQRIT.GREENBOOK LEFT JOIN SAQIBP (NOLOCK) on SAQRIT.QUOTE_RECORD_ID = SAQIBP.QUOTE_RECORD_ID and SAQRIT.QTEREV_RECORD_ID=SAQIBP.QTEREV_RECORD_ID  and SAQRIT.SERVICE_ID = SAQIBP.SERVICE_ID AND
						EXISTS (SELECT * FROM  SAQIBP (NOLOCK) WHERE SAQIBP.ANNUAL_BILLING_AMOUNT <> SAQRIT.NET_PRICE AND SAQRIT.QUOTE_RECORD_ID = SAQIBP.QUOTE_RECORD_ID and SAQRIT.QTEREV_RECORD_ID=SAQIBP.QTEREV_RECORD_ID  and SAQRIT.SERVICE_ID = SAQIBP.SERVICE_ID)
						WHERE SAQSCO.QUOTE_RECORD_ID='{QuoteRecordId}' AND SAQSCO.QTEREV_RECORD_ID = '{RevisionRecordId}' AND SAQSCO.SERVICE_ID ='{service_id}'   and SAQRIT.ESTIMATED_VALUE  IS NOT NULL  AND SAQRIT.OBJECT_ID IS NOT NULL )A """.format(
						UserId=User.Id, QuoteRecordId=contract_quote_rec_id,
						RevisionRecordId=quote_revision_rec_id,billing_end_date=billing_end_date,
						BillingDate=billing_date,
						get_val=get_val,
						service_id = service_id,billing_type =get_billing_type,amount_column=amount_column,amount_column_split=amount_column_split))
			Sql.RunQuery("""INSERT SAQIBP (					
						QUOTE_ITEM_BILLING_PLAN_RECORD_ID, BILLING_END_DATE, BILLING_START_DATE,ANNUAL_BILLING_AMOUNT,BILLING_VALUE, BILLING_VALUE_INGL_CURR,BILLING_TYPE,LINE, QUOTE_ID, QTEITM_RECORD_ID, COMMITTED_VALUE_INGL_CURR,ESTVAL_INGL_CURR,DOC_CURRENCY,ESTVAL_INDT_CURR,
						QUOTE_RECORD_ID,QTEREV_ID,QTEREV_RECORD_ID,
						BILLING_DATE, BILLING_YEAR,
						EQUIPMENT_DESCRIPTION, EQUIPMENT_ID, EQUIPMENT_RECORD_ID, QTEITMCOB_RECORD_ID, 
						SERVICE_DESCRIPTION, SERVICE_ID, GLOBAL_CURRENCY,GLOBALCURRENCY_RECORD_ID, SERVICE_RECORD_ID, GREENBOOK, GREENBOOK_RECORD_ID, SERIAL_NUMBER, WARRANTY_START_DATE, WARRANTY_END_DATE,CPQTABLEENTRYADDEDBY, CPQTABLEENTRYDATEADDED
					) 
					SELECT 
						CONVERT(VARCHAR(4000),NEWID()) as QUOTE_ITEM_BILLING_PLAN_RECORD_ID,  
						{billing_end_date} as BILLING_END_DATE,
						{BillingDate} as BILLING_START_DATE,
						{amount_column} AS ANNUAL_BILLING_AMOUNT,
						0  as BILLING_VALUE,
						0  as  BILLING_VALUE_INGL_CURR,
						'{billing_type}' as BILLING_TYPE,
						LINE,
						QUOTE_ID,
						QUOTE_REVISION_CONTRACT_ITEM_ID as QTEITM_RECORD_ID,
						
						COMVAL_INGL_CURR as COMMITTED_VALUE_INGL_CURR,
						ISNULL({amount_column}, 0) / {get_val}	as 	ESTVAL_INGL_CURR,
						DOC_CURRENCY AS DOC_CURRENCY,
						ISNULL({amount_column}, 0) / {get_val} as ESTVAL_INDT_CURR,	
						QUOTE_RECORD_ID,
						QTEREV_ID,
						QTEREV_RECORD_ID,
						{BillingDate} as BILLING_DATE,						
						'{amount_column_split}' as BILLING_YEAR,
						'' as EQUIPMENT_DESCRIPTION,
						'' as EQUIPMENT_ID,									
						'' as EQUIPMENT_RECORD_ID,						
						'' as QTEITMCOB_RECORD_ID,
						SERVICE_DESCRIPTION,
						SERVICE_ID,
						GLOBAL_CURRENCY,
						GLOBAL_CURRENCY_RECORD_ID,
						SERVICE_RECORD_ID, 
						GREENBOOK,
						GREENBOOK_RECORD_ID,
						'' AS SERIAL_NUMBER,
						'' as WARRANTY_START_DATE,
						'' as WARRANTY_END_DATE,    
						{UserId} as CPQTABLEENTRYADDEDBY, 
						GETDATE() as CPQTABLEENTRYDATEADDED
					FROM  SAQRIT (NOLOCK) 
					WHERE QUOTE_RECORD_ID='{QuoteRecordId}' AND  ESTIMATED_VALUE IS NOT NULL AND QTEREV_RECORD_ID = '{RevisionRecordId}' AND SERVICE_ID ='{service_id}' AND (OBJECT_ID  IS NULL OR OBJECT_ID = '')""".format(
						UserId=User.Id, QuoteRecordId=contract_quote_rec_id,
						RevisionRecordId=quote_revision_rec_id,
						BillingDate=billing_date,billing_end_date=billing_end_date,
						get_val=get_val,
						service_id = service_id,billing_type =get_billing_type,amount_column=amount_column,amount_column_split=amount_column_split))
		
		'''Sql.RunQuery("""UPDATE SAQIBP 
			SET SAQIBP.ESTVAL_INDT_CURR = ISNULL(SAQIBP.ESTVAL_INGL_CURR, 0) * SAQTRV.EXCHANGE_RATE FROM SAQIBP INNER JOIN SAQTRV ON SAQIBP.QUOTE_RECORD_ID = SAQTRV.QUOTE_RECORD_ID AND SAQIBP.QTEREV_RECORD_ID = SAQTRV.QTEREV_RECORD_ID WHERE SAQIBP.QUOTE_RECORD_ID='{contract_quote_rec_id}' AND SAQIBP.QTEREV_RECORD_ID = '{quote_revision_rec_id}'""".format(contract_quote_rec_id=contract_quote_rec_id,quote_revision_rec_id=quote_revision_rec_id))'''
	
	return True

def _quote_items_greenbook_summary_insert():	
	greenbook_summary_last_line_no = 0
	Log.Info('Qt_id--1555----'+str(Qt_id))
	get_rev_rec_id = Sql.GetFirst("SELECT QTEREV_RECORD_ID,QUOTE_CURRENCY,MASTER_TABLE_QUOTE_RECORD_ID FROM SAQTMT where QUOTE_ID = '{}'".format(Qt_id))
	contract_quote_rec_id = get_rev_rec_id.MASTER_TABLE_QUOTE_RECORD_ID
	quote_revision_rec_id = get_rev_rec_id.QTEREV_RECORD_ID
	Sql.RunQuery("DELETE FROM SAQIGS where QUOTE_RECORD_ID = '{QuoteRecordId}' AND QTEREV_RECORD_ID = '{RevisionRecordId}'".format(QuoteRecordId=contract_quote_rec_id,RevisionRecordId=quote_revision_rec_id))
	quote_item_summary_obj = Sql.GetFirst("SELECT TOP 1 LINE FROM SAQIGS (NOLOCK) WHERE QUOTE_RECORD_ID = '{QuoteRecordId}' AND QTEREV_RECORD_ID = '{RevisionRecordId}' ORDER BY LINE DESC".format(QuoteRecordId=contract_quote_rec_id,RevisionRecordId=quote_revision_rec_id))
	if quote_item_summary_obj:
		greenbook_summary_last_line_no = int(quote_item_summary_obj.LINE) 	
	
	Sql.RunQuery("""INSERT SAQIGS (CONTRACT_VALID_FROM, CONTRACT_VALID_TO, GLOBAL_CURRENCY, GLOBAL_CURRENCY_RECORD_ID, GREENBOOK, GREENBOOK_RECORD_ID, SERVICE_DESCRIPTION, SERVICE_ID, SERVICE_RECORD_ID, QUOTE_ID, QUOTE_RECORD_ID, QTEREV_ID, QTEREV_RECORD_ID, QTEITMSUM_RECORD_ID, COMMITTED_VALUE_INGL_CURR, ESTVAL_INGL_CURR, NET_VALUE_INGL_CURR, DOC_CURRENCY, DOCCURR_RECORD_ID, COMMITTED_VALUE, ESTIMATED_VALUE, NET_VALUE, LINE, QUOTE_REV_ITEM_GREENBK_SUMRY_RECORD_ID, CPQTABLEENTRYADDEDBY, CPQTABLEENTRYDATEADDED, CpqTableEntryModifiedBy, CpqTableEntryDateModified)
		SELECT IQ.*, ROW_NUMBER()OVER(ORDER BY(IQ.GREENBOOK)) + {ItemGreenbookSummaryLastLineNo} as LINE, CONVERT(VARCHAR(4000),NEWID()) as QUOTE_REV_ITEM_GREENBK_SUMRY_RECORD_ID, '{UserName}' as CPQTABLEENTRYADDEDBY, GETDATE() as CPQTABLEENTRYDATEADDED,{UserId} as CpqTableEntryModifiedBy, GETDATE() as CpqTableEntryDateModified FROM (
			SELECT DISTINCT
				SAQTRV.CONTRACT_VALID_FROM,
				SAQTRV.CONTRACT_VALID_TO,
				SAQTRV.GLOBAL_CURRENCY,
				SAQTRV.GLOBAL_CURRENCY_RECORD_ID,						
				SQ.GREENBOOK,
				SQ.GREENBOOK_RECORD_ID,
				SQ.SERVICE_DESCRIPTION,
				SQ.SERVICE_ID,
				SQ.SERVICE_RECORD_ID,
				SAQTRV.QUOTE_ID,
				SAQTRV.QUOTE_RECORD_ID,
				SAQTMT.QTEREV_ID,
				SAQTMT.QTEREV_RECORD_ID,
				SQ.QTEITMSUM_RECORD_ID,
				SQ.COMMITTED_VALUE_INGL_CURR as COMMITTED_VALUE_INGL_CURR,
				SQ.ESTVAL_INGL_CURR as ESTVAL_INGL_CURR,
				SQ.NET_VALUE_INGL_CURR as NET_VALUE_INGL_CURR,
				SQ.DOC_CURRENCY,
				SQ.DOCCURR_RECORD_ID as DOCCURR_RECORD_ID,
				SQ.COMMITTED_VALUE as COMMITTED_VALUE,
				SQ.ESTIMATED_VALUE as ESTIMATED_VALUE,
				SQ.NET_VALUE as NET_VALUE
			FROM (
					SELECT 
						SAQRIT.QUOTE_RECORD_ID, 
						SAQRIT.QTEREV_RECORD_ID,   
						SAQRIT.SERVICE_DESCRIPTION,
						SAQRIT.SERVICE_ID,
						SAQRIT.SERVICE_RECORD_ID,
						SAQRIT.GREENBOOK,
						SAQRIT.GREENBOOK_RECORD_ID,
						SAQRIT.QTEITMSUM_RECORD_ID,
						SUM(SAQRIT.COMMITTED_VALUE) as COMMITTED_VALUE_INGL_CURR,
						SUM(SAQRIT.ESTVAL_INGL_CURR) as ESTVAL_INGL_CURR,
						SUM(SAQRIT.NET_VALUE_INGL_CURR) as NET_VALUE_INGL_CURR,
						SAQRIT.DOC_CURRENCY,
						SAQRIT.DOCURR_RECORD_ID as DOCCURR_RECORD_ID,
						SUM(SAQRIT.COMMITTED_VALUE) as COMMITTED_VALUE,
						SUM(SAQRIT.ESTIMATED_VALUE) as ESTIMATED_VALUE,
						SUM(SAQRIT.NET_VALUE) as NET_VALUE
					FROM SAQRIT (NOLOCK) 
					WHERE SAQRIT.QUOTE_RECORD_ID = '{QuoteRecordId}' AND SAQRIT.QTEREV_RECORD_ID = '{QuoteRevisionRecordId}' 
					and SAQRIT.TOTAL_AMOUNT IS NOT NULL  GROUP BY SAQRIT.QUOTE_RECORD_ID, SAQRIT.QTEREV_RECORD_ID, SAQRIT.SERVICE_DESCRIPTION, SAQRIT.SERVICE_ID, SAQRIT.SERVICE_RECORD_ID, SAQRIT.GREENBOOK, SAQRIT.GREENBOOK_RECORD_ID, SAQRIT.QTEITMSUM_RECORD_ID, SAQRIT.DOC_CURRENCY, SAQRIT.DOCURR_RECORD_ID
				) SQ
			JOIN SAQTMT (NOLOCK) ON SAQTMT.MASTER_TABLE_QUOTE_RECORD_ID = SQ.QUOTE_RECORD_ID AND SAQTMT.QTEREV_RECORD_ID = SQ.QTEREV_RECORD_ID     
			JOIN SAQTRV (NOLOCK) ON SAQTRV.QTEREV_RECORD_ID = SAQTMT.QTEREV_RECORD_ID AND SAQTRV.QUOTE_RECORD_ID = SAQTMT.MASTER_TABLE_QUOTE_RECORD_ID			
			) IQ			
			LEFT JOIN SAQIGS (NOLOCK) ON SAQIGS.QUOTE_RECORD_ID = IQ.QUOTE_RECORD_ID AND SAQIGS.QTEREV_RECORD_ID = IQ.QTEREV_RECORD_ID AND SAQIGS.SERVICE_RECORD_ID = IQ.SERVICE_RECORD_ID AND SAQIGS.GREENBOOK_RECORD_ID = IQ.GREENBOOK_RECORD_ID
			WHERE ISNULL(SAQIGS.GREENBOOK_RECORD_ID,'') = ''
	""".format(UserId=User.Id, UserName=User.UserName, QuoteRecordId= contract_quote_rec_id,QuoteRevisionRecordId=quote_revision_rec_id, ItemGreenbookSummaryLastLineNo=greenbook_summary_last_line_no))
	return True

def billingmatrix_create():
	get_rev_rec_id = Sql.GetFirst("SELECT QTEREV_RECORD_ID,QUOTE_CURRENCY,MASTER_TABLE_QUOTE_RECORD_ID FROM SAQTMT where QUOTE_ID = '{}'".format(Qt_id))
	#Log.Info('Qt_id--1621-------'+str(Qt_id))
	contract_quote_rec_id = get_rev_rec_id.MASTER_TABLE_QUOTE_RECORD_ID
	quote_revision_rec_id = get_rev_rec_id.QTEREV_RECORD_ID
	_quote_items_greenbook_summary_insert()
	billing_plan_obj = Sql.GetList("SELECT DISTINCT PRDOFR_ID,BILLING_START_DATE,BILLING_END_DATE,BILLING_DAY FROM SAQRIB (NOLOCK) WHERE QUOTE_RECORD_ID = '{}' AND QTEREV_RECORD_ID = '{}'".format(contract_quote_rec_id,quote_revision_rec_id))
	quotedetails = Sql.GetFirst("SELECT CONTRACT_VALID_FROM,CONTRACT_VALID_TO FROM SAQTMT (NOLOCK) WHERE MASTER_TABLE_QUOTE_RECORD_ID = '{}' AND QTEREV_RECORD_ID = '{}'".format(contract_quote_rec_id,quote_revision_rec_id))
	get_billling_data_dict = {}
	#Log.Info('billing_plan_obj-------'+str(Qt_id))
	contract_start_date = quotedetails.CONTRACT_VALID_FROM
	contract_end_date = quotedetails.CONTRACT_VALID_TO
	get_ent_val = get_ent_billing_type_value = get_ent_bill_cycle = get_billing_type = ''
	if contract_start_date and contract_end_date and billing_plan_obj:
		Sql.RunQuery("""DELETE FROM SAQIBP WHERE QUOTE_RECORD_ID = '{QuoteRecordId}' AND QTEREV_RECORD_ID = '{RevisionRecordId}'""".format(QuoteRecordId=contract_quote_rec_id,RevisionRecordId=quote_revision_rec_id))
		#Log.Info('4739---------4744------')
		for val in billing_plan_obj:
			if billing_plan_obj:				
				contract_start_date = val.BILLING_START_DATE
				contract_end_date = val.BILLING_END_DATE				
				start_date = datetime.datetime.strptime(UserPersonalizationHelper.ToUserFormat(contract_start_date), '%m/%d/%Y')
				#start_date = str(contract_start_date).split(' ')[0]
				billing_day = int(val.BILLING_DAY)
				get_service_val = val.PRDOFR_ID
				get_billing_cycle = Sql.GetFirst("select ENTITLEMENT_XML from SAQITE where QUOTE_RECORD_ID = '{qtid}' AND QTEREV_RECORD_ID = '{qt_rev_id}' and SERVICE_ID = '{get_service}'".format(qtid =contract_quote_rec_id,qt_rev_id=quote_revision_rec_id,get_service = str(get_service_val).strip()))
				if get_billing_cycle:
					#Log.Info('1431-----')
					updateentXML = get_billing_cycle.ENTITLEMENT_XML
					pattern_tag = re.compile(r'(<QUOTE_ITEM_ENTITLEMENT>[\w\W]*?</QUOTE_ITEM_ENTITLEMENT>)')
					pattern_id = re.compile(r'<ENTITLEMENT_ID>(AGS_'+str(get_service_val)+'_PQB_BILCYC|AGS_'+str(get_service_val)+'_PQB_BILTYP)</ENTITLEMENT_ID>')
					#pattern_id_billing_type = re.compile(r'<ENTITLEMENT_ID>(AGS_'+str(get_service_val)+'_PQB_BILTYP|AGS_'+str(get_service_val)+'_PQB_BILTYP)</ENTITLEMENT_ID>')
					pattern_name = re.compile(r'<ENTITLEMENT_DISPLAY_VALUE>([^>]*?)</ENTITLEMENT_DISPLAY_VALUE>')
					for m in re.finditer(pattern_tag, updateentXML):
						sub_string = m.group(1)
						get_ent_id = re.findall(pattern_id,sub_string)
						#get_ent_bill_type = re.findall(pattern_id_billing_type,sub_string)
						get_ent_val= re.findall(pattern_name,sub_string)
						if get_ent_id:
							get_ent_val = str(get_ent_val[0])
							get_billling_data_dict[get_ent_id[0]] = str(get_ent_val)
							#get_ent_bill_cycle = str(get_ent_val)
							for data,val in get_billling_data_dict.items():
								if 'AGS_'+str(get_service_val)+'_PQB_BILCYC' in data:
									get_ent_bill_cycle = val
								elif 'AGS_'+str(get_service_val)+'_PQB_BILTYP' in data:
									get_billing_type =val
							# if 	'AGS_'+str(get_service_val)+'_PQB_BILCYC' == str(get_ent_id[0]):
							# 	get_ent_val = str(get_ent_val)
							# 	Trace.Write(str(get_ent_val)+'---get_ent_name---'+str(get_ent_id[0]))
							# 	#get_ent_bill_cycle = get_ent_val
							# else:
							# 	get_ent_billing_type_value = str(get_ent_val)
				#Log.Info(str(get_billing_type)+'--475--'+str(get_ent_bill_cycle))
				billing_month_end = 0
				entitlement_obj = Sql.GetFirst("select convert(xml,replace(replace(replace(replace(replace(replace(ENTITLEMENT_XML,'&',';#38'),'''',';#39'),' < ',' &lt; ' ),' > ',' &gt; ' ),'_>','_&gt;'),'_<','_&lt;')) as ENTITLEMENT_XML,QUOTE_RECORD_ID,SERVICE_ID from SAQTSE (nolock) where QUOTE_RECORD_ID = '{QuoteRecordId}' AND QTEREV_RECORD_ID = '{RevisionRecordId}'".format(QuoteRecordId =contract_quote_rec_id,RevisionRecordId=quote_revision_rec_id))
				Log.Info('1431--get_ent_bill_cycle-----'+str(get_ent_bill_cycle))
				if str(get_ent_bill_cycle).upper() == "ONE ITEM PER QUOTE":
					if billing_day in (29,30,31):
						if start_date.month == 2:
							isLeap = lambda x: x % 4 == 0 and (x % 100 != 0 or x % 400 == 0)
							end_day = 29 if isLeap(start_date.year) else 28
							start_date = start_date.replace(day=end_day)
						elif start_date.month in (4, 6, 9, 11) and billing_day == 31:
							start_date = start_date.replace(day=30)
						else:
							start_date = start_date.replace(day=billing_day)
					else:
						start_date = start_date.replace(day=billing_day)
					end_date = datetime.datetime.strptime(UserPersonalizationHelper.ToUserFormat(contract_end_date), '%m/%d/%Y')
					#end_date = str(contract_end_date).split(' ')[0]
					diff1 = end_date - start_date

					avgyear = 365.2425        # pedants definition of a year length with leap years
					avgmonth = 365.2425/12.0  # even leap years have 12 months
					years, remainder = divmod(diff1.days, avgyear)
					years, months = int(years), int(remainder // avgmonth)            
					
					total_months = years * 12 + months
					for index in range(0, total_months+1):
						Trace.Write('index--'+str(index))
						billing_month_end += 1
						if str(index) in ['0','12','24','36','48']:
							insert_item_per_billing(total_months=total_months, 
													billing_date="DATEADD(month, {Month}, '{BillingDate}')".format(
														Month=index, BillingDate=start_date.strftime('%m/%d/%Y')
														),billing_end_date="DATEADD(month, {Month_add}, '{BillingDate}')".format(
														Month_add=billing_month_end, BillingDate=start_date.strftime('%m/%d/%Y')
														), amount_column="YEAR_"+str((index/12) + 1),
														entitlement_obj=entitlement_obj,service_id = get_service_val,get_ent_val_type = get_ent_bill_cycle,get_ent_billing_type_value = get_ent_billing_type_value,get_billling_data_dict=get_billling_data_dict)
				
				elif str(get_ent_bill_cycle).upper() == "MONTHLY" :
					if billing_day in (29,30,31):
						if start_date.month == 2:
							isLeap = lambda x: x % 4 == 0 and (x % 100 != 0 or x % 400 == 0)
							end_day = 29 if isLeap(start_date.year) else 28
							start_date = start_date.replace(day=end_day)
						elif start_date.month in (4, 6, 9, 11) and billing_day == 31:
							start_date = start_date.replace(day=30)
						else:
							start_date = start_date.replace(day=billing_day)
					else:
						start_date = start_date.replace(day=billing_day)
					end_date = datetime.datetime.strptime(UserPersonalizationHelper.ToUserFormat(contract_end_date), '%m/%d/%Y')
					#end_date = str(contract_end_date).split(' ')[0]
					diff1 = end_date - start_date

					avgyear = 365.2425        # pedants definition of a year length with leap years
					avgmonth = 365.2425/12.0  # even leap years have 12 months
					years, remainder = divmod(diff1.days, avgyear)
					years, months = int(years), int(remainder // avgmonth)            
					
					total_months = years * 12 + months
					if get_service_val not in  ('Z0007','Z0006'):
						for index in range(0, total_months+1):
							billing_month_end += 1
							insert_items_billing_plan(total_months=total_months, 
													billing_date="DATEADD(month, {Month}, '{BillingDate}')".format(
														Month=index, BillingDate=start_date.strftime('%m/%d/%Y')
														),billing_end_date="DATEADD(month, {Month_add}, '{BillingDate}')".format(
														Month_add=billing_month_end, BillingDate=start_date.strftime('%m/%d/%Y')
														), amount_column="YEAR_"+str((index/12) + 1),
														entitlement_obj=entitlement_obj,service_id = get_service_val,get_ent_val_type = get_ent_bill_cycle,get_ent_billing_type_value = get_ent_billing_type_value,get_billling_data_dict=get_billling_data_dict)
					else:
						get_milestones_data_dict = {}
						get_total_milestons= ''
						
						get_service_val = service_id
						
						get_milestone_details = Sql.GetFirst("select ENTITLEMENT_XML from SAQTSE where QUOTE_RECORD_ID='{QuoteRecordId}' AND QTEREV_RECORD_ID = '{RevisionRecordId}'  and SERVICE_ID = '{get_service}'".format(QuoteRecordId=contract_quote_rec_id,RevisionRecordId=quote_revision_rec_id,get_service = str(service_id).strip()))
						
						if get_milestone_details:
							updateentXML = get_milestone_details.ENTITLEMENT_XML
							pattern_tag = re.compile(r'(<QUOTE_ITEM_ENTITLEMENT>[\w\W]*?</QUOTE_ITEM_ENTITLEMENT>)')
							pattern_id = re.compile(r'<ENTITLEMENT_ID>(AGS_'+str(get_service_val)+'_PQB_MILEST|AGS_'+str(get_service_val)+'_PQB_MILST1|AGS_'+str(get_service_val)+'_PQB_MILST2|AGS_'+str(get_service_val)+'_PQB_MILST3|AGS_'+str(get_service_val)+'_PQB_MIL3DS|AGS_'+str(get_service_val)+'_PQB_MIL1DS|AGS_'+str(get_service_val)+'_PQB_MIL2DS|AGS_'+str(get_service_val)+'_PQB_MIL3BD|AGS_'+str(get_service_val)+'_PQB_MIL2BD|AGS_'+str(get_service_val)+'_PQB_MIL1BD)</ENTITLEMENT_ID>')
							pattern_name = re.compile(r'<ENTITLEMENT_DISPLAY_VALUE>([^>]*?)</ENTITLEMENT_DISPLAY_VALUE>')
							for m in re.finditer(pattern_tag, updateentXML):
								sub_string = m.group(1)
								get_ent_id = re.findall(pattern_id,sub_string)
								get_ent_val= re.findall(pattern_name,sub_string)
								if get_ent_id:
									get_ent_val = str(get_ent_val[0])
									get_milestones_data_dict[get_ent_id[0]] = str(get_ent_val)
						for data,val in get_milestones_data_dict.items():
							
							count =0
							if ('AGS_Z0007_PQB_MIL3BD','AGS_Z0007_PQB_MIL2BD','AGS_Z0007_PQB_MIL1BD','AGS_Z0006_PQB_MIL3BD','AGS_Z0006_PQB_MIL2BD','AGS_Z0006_PQB_MIL1BD') in data:
								billing_month_end += 1
								if val:
									Log.Info('-1551-count--'+str(count))
									Log.Info('-1551-get_ent_billing_type_value--'+str(get_ent_billing_type_value))
									Log.Info('-1551-get_service_val--'+str(get_service_val))
									fts_zoo7_insert(total_months=total_months, 
														billing_date="DATEADD(month, {Month}, '{BillingDate}')".format(
															Month=count, BillingDate=val.strftime('%m/%d/%Y')
															),billing_end_date="DATEADD(month, {Month_add}, '{BillingDate}')".format(
															Month_add=billing_month_end, BillingDate=val.strftime('%m/%d/%Y')
															), amount_column="YEAR_"+str((count/12) + 1),
															entitlement_obj=entitlement_obj,service_id = get_service_val,get_ent_val_type = get_ent_bill_cycle,get_ent_billing_type_value = get_ent_billing_type_value,get_billling_data_dict=get_billling_data_dict,get_milestones_data_dict=get_milestones_data_dict)
									count += 1
				elif str(get_ent_bill_cycle).upper() == "MILESTONE" :
					if billing_day in (29,30,31):
						if start_date.month == 2:
							isLeap = lambda x: x % 4 == 0 and (x % 100 != 0 or x % 400 == 0)
							end_day = 29 if isLeap(start_date.year) else 28
							start_date = start_date.replace(day=end_day)
						elif start_date.month in (4, 6, 9, 11) and billing_day == 31:
							start_date = start_date.replace(day=30)
						else:
							start_date = start_date.replace(day=billing_day)
					else:
						start_date = start_date.replace(day=billing_day)
					end_date = datetime.datetime.strptime(UserPersonalizationHelper.ToUserFormat(contract_end_date), '%m/%d/%Y')
					#end_date = str(contract_end_date).split(' ')[0]
					diff1 = end_date - start_date

					avgyear = 365.2425        # pedants definition of a year length with leap years
					avgmonth = 365.2425/12.0  # even leap years have 12 months
					years, remainder = divmod(diff1.days, avgyear)
					years, months = int(years), int(remainder // avgmonth)            
					
					total_months = years * 12 + months
					get_milestones_data_dict = {}
					get_total_milestons= ''
					#Log.Info('1589-get_service_val----'+str(get_service_val))
					#get_service_val = service_id
					
					get_milestone_details = Sql.GetFirst("select ENTITLEMENT_XML from SAQTSE where QUOTE_RECORD_ID='{QuoteRecordId}' AND QTEREV_RECORD_ID = '{RevisionRecordId}'  and SERVICE_ID = '{get_service}'".format(QuoteRecordId=contract_quote_rec_id,RevisionRecordId=quote_revision_rec_id,get_service = str(get_service_val).strip()))
					#Log.Info('--1531-----'+str(get_service_val)+'---contract_quote_rec_id----'+str(contract_quote_rec_id)+'---quote_revision_rec_id---'+str(quote_revision_rec_id))
					if get_milestone_details:
						Log.Info('1595-indise if condition-----'+str(get_ent_bill_cycle))
						updateentXML = get_milestone_details.ENTITLEMENT_XML
						pattern_tag = re.compile(r'(<QUOTE_ITEM_ENTITLEMENT>[\w\W]*?</QUOTE_ITEM_ENTITLEMENT>)')
						pattern_id = re.compile(r'<ENTITLEMENT_ID>(AGS_'+str(get_service_val)+'_PQB_MILEST|AGS_'+str(get_service_val)+'_PQB_MILST1|AGS_'+str(get_service_val)+'_PQB_MILST2|AGS_'+str(get_service_val)+'_PQB_MILES2|AGS_'+str(get_service_val)+'_PQB_MILES3|AGS_'+str(get_service_val)+'_PQB_MILES1|AGS_'+str(get_service_val)+'_PQB_MILST3|AGS_'+str(get_service_val)+'_PQB_MIL3DS|AGS_'+str(get_service_val)+'_PQB_MIL1DS|AGS_'+str(get_service_val)+'_PQB_MIL2DS|AGS_'+str(get_service_val)+'_PQB_MIL3BD|AGS_'+str(get_service_val)+'_PQB_MIL2BD|AGS_'+str(get_service_val)+'_PQB_MIL1BD)</ENTITLEMENT_ID>')
						pattern_name = re.compile(r'<ENTITLEMENT_DISPLAY_VALUE>([^>]*?)</ENTITLEMENT_DISPLAY_VALUE>')
						for m in re.finditer(pattern_tag, updateentXML):
							sub_string = m.group(1)
							get_ent_id = re.findall(pattern_id,sub_string)
							get_ent_val= re.findall(pattern_name,sub_string)
							if get_ent_id:
								get_ent_val = str(get_ent_val[0])
								get_milestones_data_dict[get_ent_id[0]] = str(get_ent_val)
					Log.Info('1595-get_milestones_data_dict-----'+str(get_milestones_data_dict))
					for data,val in get_milestones_data_dict.items():
						#Log.Info('--1545--data---'+str(data))
						#Log.Info('--1546--data---'+str(val))
						count =0
						if data:
							billing_month_end += 1
							if val:
								Log.Info('-1551-count--'+str(count))
								Log.Info('-1551-get_ent_billing_type_value--'+str(get_ent_billing_type_value))
								Log.Info('-1551-get_service_val--'+str(get_service_val))
								fts_zoo7_insert(total_months=total_months, 
													billing_date="DATEADD(month, {Month}, '{BillingDate}')".format(
														Month=count, BillingDate=start_date.strftime('%m/%d/%Y')
														),billing_end_date="DATEADD(month, {Month_add}, '{BillingDate}')".format(
														Month_add=billing_month_end, BillingDate=start_date.strftime('%m/%d/%Y')
														),  amount_column="YEAR_"+str((count/12) + 1),
														entitlement_obj=entitlement_obj,service_id = get_service_val,get_ent_val_type = get_ent_bill_cycle,get_ent_billing_type_value = get_ent_billing_type_value,get_billling_data_dict=get_billling_data_dict,get_milestones_data_dict=get_milestones_data_dict)
								count += 1

				elif str(get_ent_bill_cycle).upper() == "QUARTELY":
					ct_start_date =contract_start_date
					ct_end_date =contract_end_date
					if ct_start_date>ct_end_date:
						ct_start_date,ct_end_date=ct_end_date,ct_start_date
					m1=ct_start_date.Year*12+ct_start_date.Month  
					m2=ct_end_date.Year*12+ct_end_date.Month  
					months=m2-m1
					months=months/3
					for index in range(0, months):
						billing_month_end += 1
						insert_items_billing_plan(total_months=months, 
												billing_date="DATEADD(month, {Month}, '{BillingDate}')".format(
													Month=index, BillingDate=start_date.strftime('%m/%d/%Y')
													),billing_end_date="DATEADD(month, {Month_add}, '{BillingDate}')".format(
													Month_add=billing_month_end, BillingDate=start_date.strftime('%m/%d/%Y')
													),amount_column="YEAR_"+str((index/4) + 1),
													entitlement_obj=entitlement_obj,service_id = get_service_val,get_ent_val_type = get_ent_val,get_ent_billing_type_value=get_ent_billing_type_value,get_billling_data_dict=get_billling_data_dict)
			
				else:
					Trace.Write('get_ent_val---'+str(get_ent_bill_cycle))
					if billing_day in (29,30,31):
						if start_date.month == 2:
							isLeap = lambda x: x % 4 == 0 and (x % 100 != 0 or x % 400 == 0)
							end_day = 29 if isLeap(start_date.year) else 28
							start_date = start_date.replace(day=end_day)
						elif start_date.month in (4, 6, 9, 11) and billing_day == 31:
							start_date = start_date.replace(day=30)
						else:
							start_date = start_date.replace(day=billing_day)
					else:
						start_date = start_date.replace(day=billing_day)
					end_date = datetime.datetime.strptime(UserPersonalizationHelper.ToUserFormat(contract_end_date), '%m/%d/%Y')			
					diff1 = end_date - start_date

					avgyear = 365.2425        # pedants definition of a year length with leap years
					avgmonth = 365.2425/12.0  # even leap years have 12 months
					years, remainder = divmod(diff1.days, avgyear)
					years, months = int(years), int(remainder // avgmonth)
					for index in range(0, years+1):
						billing_month_end += 1
						insert_items_billing_plan(total_months=years, 
												billing_date="DATEADD(month, {Month}, '{BillingDate}')".format(
													Month=index, BillingDate=start_date.strftime('%m/%d/%Y')
													),billing_end_date="DATEADD(month, {Month_add}, '{BillingDate}')".format(
													Month_add=billing_month_end, BillingDate=start_date.strftime('%m/%d/%Y')
													),amount_column="YEAR_"+str((index) + 1),
													entitlement_obj=entitlement_obj,service_id = get_service_val,get_ent_val_type = get_ent_val,get_ent_billing_type_value = get_ent_billing_type_value,get_billling_data_dict=get_billling_data_dict)
	


try: 
	Qt_id = Param.QT_REC_ID
except:
	Qt_id = ""
try:
	Action = Param.Operation
except:
	Action= ""
try:
	manual_pricing = Param.manual_pricing
except:
	manual_pricing = "False"
try:
	if Action == 'Delete':
		calling_function = quoteitemupdate(Qt_id)
	# elif  Action == 'VOUCHER_UPDATE':
	# 	voucher_amt_update(Qt_id)
	else:    
		calling_function = quote_items_pricing(Qt_id)
		#voucher_amt_update(Qt_id)
		
	
except Exception as e:
	Log.Info('pricing error-'+str(e))
